{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ImmagineService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8080/api/v4';\n  }\n  addImmagine(postId, immagine) {\n    return this.http.post(`${this.baseUrl}/add/i/${postId}`, immagine);\n  }\n  updateImmagine(postId, immagine) {\n    return this.http.put(`${this.baseUrl}/update/p/${postId}`, immagine);\n  }\n}\nImmagineService.ɵfac = function ImmagineService_Factory(t) {\n  return new (t || ImmagineService)(i0.ɵɵinject(i1.HttpClient));\n};\nImmagineService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ImmagineService,\n  factory: ImmagineService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["ImmagineService","constructor","http","baseUrl","addImmagine","postId","immagine","post","updateImmagine","put","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\gemel\\Desktop\\Federico\\Progetto Finale\\Wanderlust - FrontEnd\\Wanderlust_FrontEnd\\src\\app\\services\\immagine-Service\\immagine.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Immagine } from 'src/app/model/immagine/immagine';\nimport { Post } from 'src/app/model/post/post';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImmagineService {\n\n  private baseUrl = 'http://localhost:8080/api/v4';\n\n  constructor(private http: HttpClient) { }\n  \n  addImmagine(postId: number, immagine: Immagine): Observable<Immagine> {\n    return this.http.post<Immagine>(`${this.baseUrl}/add/i/${postId}`, immagine);\n  }\n\n  updateImmagine(postId: number, immagine: Immagine): Observable<Immagine> {\n    return this.http.put<Immagine>(`${this.baseUrl}/update/p/${postId}`, immagine);\n  }\n\n}\n"],"mappings":";;AASA,OAAM,MAAOA,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,8BAA8B;EAER;EAExCC,WAAWA,CAACC,MAAc,EAAEC,QAAkB;IAC5C,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAW,GAAG,IAAI,CAACJ,OAAO,UAAUE,MAAM,EAAE,EAAEC,QAAQ,CAAC;EAC9E;EAEAE,cAAcA,CAACH,MAAc,EAAEC,QAAkB;IAC/C,OAAO,IAAI,CAACJ,IAAI,CAACO,GAAG,CAAW,GAAG,IAAI,CAACN,OAAO,aAAaE,MAAM,EAAE,EAAEC,QAAQ,CAAC;EAChF;;AAZWN,eAAe,C;mBAAfA,eAAe,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAfb,eAAe,C;SAAfA,eAAe;EAAAc,OAAA,EAAfd,eAAe,CAAAe,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}