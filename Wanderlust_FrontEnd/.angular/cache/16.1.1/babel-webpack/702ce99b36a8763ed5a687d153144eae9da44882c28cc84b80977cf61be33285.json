{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UtenteService {\n  // angular dependency injection - di tipo constructor injection\n  constructor(http) {\n    this.http = http;\n    //private http: HttpClient;\n    this.baseUrl = 'http://localhost:8080/api/v1';\n  }\n  // lo strano singolo apice si chiama backtick alt-96\n  addUtente(utente) {\n    return this.http.post(`${this.baseUrl}/add/u`, utente);\n  }\n  loginUtente(utente) {\n    return this.http.post(`${this.baseUrl}/loginutente`, utente);\n  }\n  getUsers() {\n    return this.http.get(this.apiUrl);\n  }\n}\nUtenteService.ɵfac = function UtenteService_Factory(t) {\n  return new (t || UtenteService)(i0.ɵɵinject(i1.HttpClient));\n};\nUtenteService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UtenteService,\n  factory: UtenteService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["UtenteService","constructor","http","baseUrl","addUtente","utente","post","loginUtente","getUsers","get","apiUrl","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\gemel\\Desktop\\Federico\\Progetto Finale\\Wanderlust - FrontEnd\\Wanderlust_FrontEnd\\src\\app\\services\\utente-Service\\utente.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Utente } from 'src/app/model/utente/utente';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtenteService {\n\n  //private http: HttpClient;\n  private baseUrl = 'http://localhost:8080/api/v1';\n  \n  // angular dependency injection - di tipo constructor injection\n  constructor(private http: HttpClient) { }\n\n  // lo strano singolo apice si chiama backtick alt-96\n  addUtente(utente: Object): Observable<Object> {\n    return this.http.post(`${this.baseUrl}/add/u`, utente);\n  }\n\n  loginUtente(utente: Object): Observable<Object> {\n    return this.http.post(`${this.baseUrl}/loginutente`, utente);\n  }\n\n  getUsers(): Observable<User[]> {\n    return this.http.get<User[]>(this.apiUrl);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,aAAa;EAKxB;EACAC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJxB;IACQ,KAAAC,OAAO,GAAG,8BAA8B;EAGR;EAExC;EACAC,SAASA,CAACC,MAAc;IACtB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,OAAO,QAAQ,EAAEE,MAAM,CAAC;EACxD;EAEAE,WAAWA,CAACF,MAAc;IACxB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,OAAO,cAAc,EAAEE,MAAM,CAAC;EAC9D;EAEAG,QAAQA,CAAA;IACN,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAS,IAAI,CAACC,MAAM,CAAC;EAC3C;;AAnBWV,aAAa,C;mBAAbA,aAAa,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAbd,aAAa,C;SAAbA,aAAa;EAAAe,OAAA,EAAbf,aAAa,CAAAgB,IAAA;EAAAC,UAAA,EAFZ;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}