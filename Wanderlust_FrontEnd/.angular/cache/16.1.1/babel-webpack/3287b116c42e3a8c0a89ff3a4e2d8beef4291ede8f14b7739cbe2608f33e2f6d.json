{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/utente-Service/utente.service\";\n//Qui sono specificati i file che sono direttamente connessi con questo e quindi \n//accedono direttamente a quanto dichiarato qui\nexport class ListaUtentiComponent {\n  constructor(route, service, router) {\n    this.route = route;\n    this.service = service;\n    this.router = router;\n  }\n  //quando viene chiamato il componente esegui il metodo descritto\n  ngOnInit() {\n    this.reloadData();\n  }\n  reloadData() {\n    this.service.getAllUtenti().subscribe({\n      next: response => {\n        this.utenti = response;\n      },\n      error: error => {\n        alert(error.message);\n      }\n    });\n  }\n  dettagliUtente(id) {\n    this.router.navigate([\"dettagliutente\", id]);\n  }\n  rimuoviUtente(id) {\n    if (id) {\n      this.service.deleteUtenteById(id).subscribe({\n        next: () => {\n          console.log('Utente eliminato con successo.');\n          this.reloadData(); // Aggiorna la lista degli utenti dopo l'eliminazione\n        },\n\n        error: error => console.log(error)\n      });\n    }\n  }\n}\nListaUtentiComponent.ɵfac = function ListaUtentiComponent_Factory(t) {\n  return new (t || ListaUtentiComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.UtenteService), i0.ɵɵdirectiveInject(i1.Router));\n};\nListaUtentiComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListaUtentiComponent,\n  selectors: [[\"app-lista-utenti\"]],\n  decls: 1,\n  vars: 0,\n  consts: [[\"id\", \"\"]],\n  template: function ListaUtentiComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"section\", 0);\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["ListaUtentiComponent","constructor","route","service","router","ngOnInit","reloadData","getAllUtenti","subscribe","next","response","utenti","error","alert","message","dettagliUtente","id","navigate","rimuoviUtente","deleteUtenteById","console","log","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","UtenteService","Router","selectors","decls","vars","consts","template","ListaUtentiComponent_Template","rf","ctx","ɵɵelement"],"sources":["C:\\Users\\gemel\\Desktop\\Federico\\Progetto Finale\\Wanderlust - FrontEnd\\Wanderlust_FrontEnd\\src\\app\\components\\lista-utenti\\lista-utenti.component.ts","C:\\Users\\gemel\\Desktop\\Federico\\Progetto Finale\\Wanderlust - FrontEnd\\Wanderlust_FrontEnd\\src\\app\\components\\lista-utenti\\lista-utenti.component.html"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Utente } from 'src/app/model/utente/utente';\nimport { UtenteService } from 'src/app/services/utente-Service/utente.service';\n\n//Qui sono specificati i file che sono direttamente connessi con questo e quindi \n//accedono direttamente a quanto dichiarato qui\n@Component({\n  selector: 'app-lista-utenti',\n  templateUrl: './lista-utenti.component.html',\n  styleUrls: ['./lista-utenti.component.css']\n})\nexport class ListaUtentiComponent implements OnInit{\n  utenti?: Utente[];\n\n  constructor(private route: ActivatedRoute, private service: UtenteService, private router: Router) { }\n\n  //quando viene chiamato il componente esegui il metodo descritto\n  ngOnInit(): void{\n    this.reloadData();\n  }\n\n  reloadData(): void {\n    this.service.getAllUtenti()\n        .subscribe({\n          next: (response: Utente[]) => {\n            this.utenti = response;\n          },\n          error: (error: HttpErrorResponse) => {\n            alert(error.message)\n          }\n        });\n  }\n\n  dettagliUtente(id?: number){\n    this.router.navigate([\"dettagliutente\", id]);\n  }\n\n  rimuoviUtente(id?: number){ \n    if (id) {\n      this.service.deleteUtenteById(id).subscribe({\n        next: () => {\n          console.log('Utente eliminato con successo.');\n          this.reloadData(); // Aggiorna la lista degli utenti dopo l'eliminazione\n        },\n        error: error => console.log(error)\n      });\n    }\n  }\n}\n","<section id=\"\">\n  \n\n</section>\n"],"mappings":";;;AAMA;AACA;AAMA,OAAM,MAAOA,oBAAoB;EAG/BC,YAAoBC,KAAqB,EAAUC,OAAsB,EAAUC,MAAc;IAA7E,KAAAF,KAAK,GAALA,KAAK;IAA0B,KAAAC,OAAO,GAAPA,OAAO;IAAyB,KAAAC,MAAM,GAANA,MAAM;EAAY;EAErG;EACAC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAA,UAAUA,CAAA;IACR,IAAI,CAACH,OAAO,CAACI,YAAY,EAAE,CACtBC,SAAS,CAAC;MACTC,IAAI,EAAGC,QAAkB,IAAI;QAC3B,IAAI,CAACC,MAAM,GAAGD,QAAQ;MACxB,CAAC;MACDE,KAAK,EAAGA,KAAwB,IAAI;QAClCC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;MACtB;KACD,CAAC;EACR;EAEAC,cAAcA,CAACC,EAAW;IACxB,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,CAAC,gBAAgB,EAAED,EAAE,CAAC,CAAC;EAC9C;EAEAE,aAAaA,CAACF,EAAW;IACvB,IAAIA,EAAE,EAAE;MACN,IAAI,CAACb,OAAO,CAACgB,gBAAgB,CAACH,EAAE,CAAC,CAACR,SAAS,CAAC;QAC1CC,IAAI,EAAEA,CAAA,KAAK;UACTW,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;UAC7C,IAAI,CAACf,UAAU,EAAE,CAAC,CAAC;QACrB,CAAC;;QACDM,KAAK,EAAEA,KAAK,IAAIQ,OAAO,CAACC,GAAG,CAACT,KAAK;OAClC,CAAC;;EAEN;;AApCWZ,oBAAoB,C;mBAApBA,oBAAoB,EAAAsB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,aAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAI,MAAA;AAAA;AAApB5B,oBAAoB,C;QAApBA,oBAAoB;EAAA6B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCbjCb,EAAA,CAAAe,SAAA,iBAGU"},"metadata":{},"sourceType":"module","externalDependencies":[]}