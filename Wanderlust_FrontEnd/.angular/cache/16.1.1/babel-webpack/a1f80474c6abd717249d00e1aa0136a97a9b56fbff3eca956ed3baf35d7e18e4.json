{"ast":null,"code":"import { Utente } from 'src/app/model/utente/utente';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/post-Service/post.service\";\nimport * as i3 from \"src/app/services/utente-Service/utente.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"ngx-pagination\";\nimport * as i6 from \"../singolo-post/singolo-post.component\";\nfunction ListaPostComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵelement(1, \"app-singolo-post\", 8);\n    i0.ɵɵelementStart(2, \"div\", 9)(3, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function ListaPostComponent_div_6_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const post_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.aggiungiPreferito(post_r1));\n    });\n    i0.ɵɵtext(4, \"Aggiungi ai Preferiti\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const post_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"post\", post_r1);\n  }\n}\nconst _c0 = function (a1) {\n  return {\n    itemsPerPage: 9,\n    currentPage: a1\n  };\n};\nexport class ListaPostComponent {\n  constructor(route, service, serviceUtente, router) {\n    this.route = route;\n    this.service = service;\n    this.serviceUtente = serviceUtente;\n    this.router = router;\n    this.listaPost = [];\n    this.utente = new Utente();\n    this.currentPage = 1;\n  }\n  ngOnInit() {\n    this.utente = JSON.parse(sessionStorage.getItem('utenteloggato'));\n    this.service.getAllPosts().subscribe({\n      next: response => {\n        this.listaPost = response;\n      },\n      error: error => {\n        alert(error.message);\n      }\n    });\n  }\n  aggiungiPreferito(post) {\n    this.serviceUtente.addPreferitoUtenteById(post, this.utente.id_utente).subscribe({\n      next: () => {\n        console.log('Post aggiunto ai preferiti con successo.');\n        this.router.navigate(['/', 'listapost']).then(() => window.location.reload());\n      },\n      error: error => console.log(error)\n    });\n  }\n}\nListaPostComponent.ɵfac = function ListaPostComponent_Factory(t) {\n  return new (t || ListaPostComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.PostService), i0.ɵɵdirectiveInject(i3.UtenteService), i0.ɵɵdirectiveInject(i1.Router));\n};\nListaPostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListaPostComponent,\n  selectors: [[\"app-lista-post\"]],\n  decls: 10,\n  vars: 6,\n  consts: [[1, \"page-header\", 2, \"background-color\", \"whitesmoke\"], [1, \"h1\", \"page-title\"], [1, \"container\", 2, \"background-color\", \"whitesmoke\"], [1, \"row\"], [\"class\", \"col-12 col-md-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"pagination-container\"], [3, \"pageChange\"], [1, \"col-12\", \"col-md-4\"], [3, \"post\"], [\"id\", \"contenuto\", 2, \"margin-left\", \"5px\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-success\", 3, \"click\"]],\n  template: function ListaPostComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"header\", 0)(1, \"h1\", 1)(2, \"span\");\n      i0.ɵɵtext(3, \"I Racconti dei Viaggiatori\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3);\n      i0.ɵɵtemplate(6, ListaPostComponent_div_6_Template, 5, 1, \"div\", 4);\n      i0.ɵɵpipe(7, \"paginate\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"pagination-controls\", 6);\n      i0.ɵɵlistener(\"pageChange\", function ListaPostComponent_Template_pagination_controls_pageChange_9_listener($event) {\n        return ctx.currentPage = $event;\n      });\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(7, 1, ctx.listaPost, i0.ɵɵpureFunction1(4, _c0, ctx.currentPage)));\n    }\n  },\n  dependencies: [i4.NgForOf, i5.PaginationControlsComponent, i6.SingoloPostComponent, i5.PaginatePipe],\n  styles: [\"#contenuto[_ngcontent-%COMP%] {\\n    padding-bottom: 50px;\\n}\\n\\n.pagination-container[_ngcontent-%COMP%]{\\n    text-align: -webkit-center;\\n}\\n\\n.h1[_ngcontent-%COMP%]{\\n    margin-top: 18px;\\n    margin-bottom: 2.5rem;\\n    font-weight: 500;\\n    line-height: 1.2;\\n    color: var(--bs-heading-color);\\n    font-size: 3.5rem;\\n    text-align: -webkit-center;\\n    text-transform: capitalize;\\n    color: ;\\n    font-family: monospace;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9saXN0YS1wb3N0L2xpc3RhLXBvc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG9CQUFvQjtBQUN4Qjs7QUFFQTtJQUNJLDBCQUEwQjtBQUM5Qjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixxQkFBcUI7SUFDckIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQiw4QkFBOEI7SUFDOUIsaUJBQWlCO0lBQ2pCLDBCQUEwQjtJQUMxQiwwQkFBMEI7SUFDMUIsT0FBTztJQUNQLHNCQUFzQjtBQUMxQiIsInNvdXJjZXNDb250ZW50IjpbIiNjb250ZW51dG8ge1xyXG4gICAgcGFkZGluZy1ib3R0b206IDUwcHg7XHJcbn1cclxuXHJcbi5wYWdpbmF0aW9uLWNvbnRhaW5lcntcclxuICAgIHRleHQtYWxpZ246IC13ZWJraXQtY2VudGVyO1xyXG59XHJcblxyXG4uaDF7XHJcbiAgICBtYXJnaW4tdG9wOiAxOHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMi41cmVtO1xyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjI7XHJcbiAgICBjb2xvcjogdmFyKC0tYnMtaGVhZGluZy1jb2xvcik7XHJcbiAgICBmb250LXNpemU6IDMuNXJlbTtcclxuICAgIHRleHQtYWxpZ246IC13ZWJraXQtY2VudGVyO1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XHJcbiAgICBjb2xvcjogO1xyXG4gICAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZTtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["Utente","i0","ɵɵelementStart","ɵɵelement","ɵɵlistener","ListaPostComponent_div_6_Template_button_click_3_listener","restoredCtx","ɵɵrestoreView","_r3","post_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","aggiungiPreferito","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ListaPostComponent","constructor","route","service","serviceUtente","router","listaPost","utente","currentPage","ngOnInit","JSON","parse","sessionStorage","getItem","getAllPosts","subscribe","next","response","error","alert","message","post","addPreferitoUtenteById","id_utente","console","log","navigate","then","window","location","reload","ɵɵdirectiveInject","i1","ActivatedRoute","i2","PostService","i3","UtenteService","Router","selectors","decls","vars","consts","template","ListaPostComponent_Template","rf","ctx","ɵɵtemplate","ListaPostComponent_div_6_Template","ListaPostComponent_Template_pagination_controls_pageChange_9_listener","$event","ɵɵpipeBind2","ɵɵpureFunction1","_c0"],"sources":["C:\\Users\\gemel\\Desktop\\Federico\\Progetto Finale\\Wanderlust - FrontEnd\\Wanderlust_FrontEnd\\src\\app\\components\\lista-post\\lista-post.component.ts","C:\\Users\\gemel\\Desktop\\Federico\\Progetto Finale\\Wanderlust - FrontEnd\\Wanderlust_FrontEnd\\src\\app\\components\\lista-post\\lista-post.component.html"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Post } from 'src/app/model/post/post';\nimport { Utente } from 'src/app/model/utente/utente';\nimport { PostService } from 'src/app/services/post-Service/post.service';\nimport { UtenteService } from 'src/app/services/utente-Service/utente.service';\n\n@Component({\n  selector: 'app-lista-post',\n  templateUrl: './lista-post.component.html',\n  styleUrls: ['./lista-post.component.css']\n})\nexport class ListaPostComponent implements OnInit{\n  listaPost: Post[] = [];\n  utente: Utente = new Utente();\n  \n  currentPage: number = 1;\n\n  constructor(private route: ActivatedRoute, private service: PostService, private serviceUtente:UtenteService,\n     private router: Router){\n\n  }\n  ngOnInit(): void {\n    this.utente = JSON.parse(sessionStorage.getItem('utenteloggato')!);\n    this.service.getAllPosts()\n      .subscribe(\n        {\n          next: (response: Post[]) => {\n            this.listaPost = response;\n          },\n          error: (error: HttpErrorResponse) => {\n            alert(error.message)\n          }\n        }\n      );\n  }\n\n  aggiungiPreferito(post: Post){\n    this.serviceUtente.addPreferitoUtenteById(post, this.utente!.id_utente!)\n    .subscribe({\n      next: () => {\n        console.log('Post aggiunto ai preferiti con successo.');\n        this.router.navigate(['/','listapost']).then\n            (() => window.location.reload());        \n      },\n      error: error => console.log(error)\n    });\n  }\n\n}\n","<header class=\"page-header\" style=\"background-color: whitesmoke;\">\n  <h1 class=\"h1 page-title\">\n    <span>I Racconti dei Viaggiatori</span>\n  </h1>\n</header>\n\n<div class=\"container\" style=\"background-color: whitesmoke;\">\n  <div class=\"row\">\n    <!-- paginate: Questa è la pipe di paginazione fornita dal modulo ngx-pagination. Una pipe è una funzione \n      che può essere utilizzata per trasformare i dati prima di visualizzarli. La pipe paginate gestisce la \n      suddivisione dei dati in pagine in base ai parametri specificati. L'oggetto che passiamo alla pipe è tra le {} -->\n    <div class=\"col-12 col-md-4\" *ngFor=\"let post of (listaPost | paginate: { itemsPerPage: 9, currentPage: currentPage })!\">\n      \n      <app-singolo-post [post]=\"post\"></app-singolo-post>\n      \n      <div id=\"contenuto\" style=\"margin-left: 5px;\">\n        <button type=\"button\" class=\"btn btn-outline-success\" (click)=\"aggiungiPreferito(post)\">Aggiungi ai Preferiti</button>\n      </div>\n\n    </div>\n  </div>\n</div>\n\n<div class=\"pagination-container\">\n  <pagination-controls (pageChange)=\"currentPage = $event\"></pagination-controls>\n</div>\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}