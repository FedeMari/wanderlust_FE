{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/post-Service/post.service\";\nimport * as i3 from \"src/app/services/utente-Service/utente.service\";\nimport * as i4 from \"@angular/platform-browser\";\nimport * as i5 from \"@angular/common\";\nfunction SingoloPostComponent_img_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 14);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r0.immagineURL, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction SingoloPostComponent_a_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 15);\n    i0.ɵɵlistener(\"click\", function SingoloPostComponent_a_17_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.dettagliPost(ctx_r3.post == null ? null : ctx_r3.post.id_post));\n    });\n    i0.ɵɵtext(1, \"Leggi di pi\\u00F9\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SingoloPostComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 17);\n    i0.ɵɵlistener(\"click\", function SingoloPostComponent_div_18_Template__svg_svg_click_1_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.closePopUp());\n    });\n    i0.ɵɵelement(2, \"path\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(3, \"p\", 19);\n    i0.ɵɵtext(4, \"E' necessario effettuare il Login per vedere i dettagli del post.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 19);\n    i0.ɵɵtext(6, \" Clicca \");\n    i0.ɵɵelementStart(7, \"a\", 20);\n    i0.ɵɵtext(8, \"qui\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \" per accedere. \");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class SingoloPostComponent {\n  constructor(route, service, serviceUtente, router, sanitizer) {\n    this.route = route;\n    this.service = service;\n    this.serviceUtente = serviceUtente;\n    this.router = router;\n    this.sanitizer = sanitizer;\n    this.listaImmagini = [];\n    // oggetto categoryColors che serve come mappatura tra le categorie dei post (es. \"Città\", \"Natura\") e le \n    // classi CSS corrispondenti che si desidera applicare \n    this.categoryColors = {\n      'Città': 'badge-primary',\n      'Natura': 'badge-success',\n      'Europa': 'badge-europa',\n      'Africa': 'badge-africa',\n      'Oceania': 'badge-oceania',\n      'Asia': 'badge-asia',\n      'America del Nord': 'badge-north-america',\n      'America del Sud': 'badge-south-america',\n      'America Centrale': 'badge-central-america',\n      'Antartide': 'badge-antartide'\n    };\n    this.isContentExpanded = false;\n    this.isUserLoggedIn = true;\n  }\n  ngOnInit() {\n    this.service.getAutorePostById(this.post.id_post).subscribe({\n      next: response => {\n        this.autore = response;\n        this.service.getCategoriePostById(this.post.id_post).subscribe({\n          next: responseCategory => {\n            this.categorie = responseCategory;\n            /*  Nel caso di piu categorie\n                \n                const keys = Object.keys(responseCategory);\n                for (let i = 0; i < keys.length; i++) {\n                  const key = keys[i];\n                  this[`categoria${i + 1}`] = responseCategory[key];\n                }\n             *\n             */\n            this.service.getImmaginiPostById(this.post.id_post).subscribe({\n              next: responseImage => {\n                this.listaImmagini = responseImage.immaginiAssociate;\n                for (let i = 0; i < this.listaImmagini.length; i++) {\n                  if (this.immagineURL !== 'null') {\n                    //credo qui vada corretto con this.listaImmagini[i]\n                    this.immagineURL = this.listaImmagini[i].url;\n                    break; // Per prendere solo la prima immagine non-null\n                  }\n                }\n              },\n\n              error: error => console.log(error)\n            });\n          },\n          error: error => console.log(error)\n        });\n      },\n      error: error => console.log(error)\n    });\n  }\n  // Se categorie è definito e rappresenta una categoria valida, viene restituito un oggetto con due proprietà \n  // booleane: 'card-category-tag' impostata a true (per applicare lo stile di base al tag della categoria) e la \n  // classe CSS corrispondente all'oggetto categoryColors basato sulla categoria corrente. Se categorie non è \n  // definito o non è una stringa, viene restituito un oggetto con la sola proprietà 'card-category-tag' impostata \n  // a true.\n  getCategoryColors() {\n    return this.categorie && typeof this.categorie === 'string' ? {\n      'card-category-tag': true,\n      [this.categoryColors[this.categorie]]: true\n    } : {\n      'card-category-tag': true\n    };\n  }\n  toggleContentExpand() {\n    this.isContentExpanded = !this.isContentExpanded;\n  }\n  dettagliPost(id) {\n    this.utente = JSON.parse(sessionStorage.getItem('utenteloggato'));\n    if (!this.utente) {\n      this.isUserLoggedIn = false;\n      window.scrollTo({\n        top: 200,\n        behavior: 'smooth' // Scorrimento verso l'alto della pagina\n      });\n\n      return;\n    } else {\n      this.router.navigate([\"dettaglipost\", id]);\n    }\n  }\n  closePopUp() {\n    this.isUserLoggedIn = true;\n  }\n  setFormattedText(html) {\n    this.formattedText = html.substring(0, 250) + '  [...]';\n    return this.anteprima = this.sanitizer.bypassSecurityTrustHtml(this.formattedText);\n  }\n}\nSingoloPostComponent.ɵfac = function SingoloPostComponent_Factory(t) {\n  return new (t || SingoloPostComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.PostService), i0.ɵɵdirectiveInject(i3.UtenteService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i4.DomSanitizer));\n};\nSingoloPostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SingoloPostComponent,\n  selectors: [[\"app-singolo-post\"]],\n  inputs: {\n    post: \"post\"\n  },\n  decls: 19,\n  vars: 12,\n  consts: [[\"id\", \"contenuto-post\"], [1, \"col\"], [1, \"card\"], [\"class\", \"card-img-top\", \"alt\", \"Image\", 3, \"src\", 4, \"ngIf\"], [1, \"card-header\"], [1, \"card-data\", 2, \"display\", \"inline\"], [1, \"card-category-tag\", 3, \"ngClass\"], [1, \"card-category\", 2, \"display\", \"inline\"], [1, \"card-title\", 2, \"margin-top\", \"20px\"], [1, \"card-writer\", 2, \"margin-top\", \"20px\"], [1, \"card-body\"], [3, \"innerHTML\"], [\"class\", \"expand-link\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"login-overlay\", 4, \"ngIf\"], [\"alt\", \"Image\", 1, \"card-img-top\", 3, \"src\"], [1, \"expand-link\", 3, \"click\"], [1, \"login-overlay\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"height\", \"1em\", \"viewBox\", \"0 0 512 512\", 2, \"float\", \"right\", \"cursor\", \"pointer\", \"margin-top\", \"400px\", \"padding-left\", \"400px\", \"margin-bottom\", \"20px\", 3, \"click\"], [\"d\", \"M256 48a208 208 0 1 1 0 416 208 208 0 1 1 0-416zm0 464A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM175 175c-9.4 9.4-9.4 24.6 0 33.9l47 47-47 47c-9.4 9.4-9.4 24.6 0 33.9s24.6 9.4 33.9 0l47-47 47 47c9.4 9.4 24.6 9.4 33.9 0s9.4-24.6 0-33.9l-47-47 47-47c9.4-9.4 9.4-24.6 0-33.9s-24.6-9.4-33.9 0l-47 47-47-47c-9.4-9.4-24.6-9.4-33.9 0z\"], [1, \"login-message\"], [\"href\", \"/login\", 2, \"color\", \"blue\"]],\n  template: function SingoloPostComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵtemplate(3, SingoloPostComponent_img_3_Template, 1, 1, \"img\", 3);\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"h6\", 5);\n      i0.ɵɵtext(6);\n      i0.ɵɵpipe(7, \"date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 6)(9, \"h6\", 7);\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"h4\", 8);\n      i0.ɵɵtext(12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"h5\", 9);\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 10);\n      i0.ɵɵelement(16, \"div\", 11);\n      i0.ɵɵtemplate(17, SingoloPostComponent_a_17_Template, 2, 0, \"a\", 12);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(18, SingoloPostComponent_div_18_Template, 10, 0, \"div\", 13);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.immagineURL);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(7, 9, ctx.post == null ? null : ctx.post.data, \"dd-MM-yyyy\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", ctx.getCategoryColors());\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.categorie);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.post == null ? null : ctx.post.titolo);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.autore);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"innerHTML\", ctx.setFormattedText(ctx.post == null ? null : ctx.post.contenuto), i0.ɵɵsanitizeHtml);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.post == null ? null : ctx.post.contenuto.length) > 100);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isUserLoggedIn);\n    }\n  },\n  dependencies: [i5.NgClass, i5.NgIf, i5.DatePipe],\n  styles: [\"#contenuto-post[_ngcontent-%COMP%] {\\n    padding-top: 20px;\\n    padding-bottom: 20px;\\n}\\n\\n.card[_ngcontent-%COMP%] {\\n    width: 330px; \\n\\n    height: 530px;\\n}\\n\\n.card-header[_ngcontent-%COMP%]{\\n    height: 150px;\\n    border-bottom-width: medium;\\n}\\n\\n.card-img-top[_ngcontent-%COMP%]{\\n    height: 160px;\\n}\\n\\n.card-writer[_ngcontent-%COMP%]{\\n    margin-top: 20px;\\n    text-align: -webkit-right;\\n    border-bottom-style: solid;\\n    font-size: smaller;\\n    font-family: math;\\n}\\n\\n.card-title[_ngcontent-%COMP%]{\\n    font-variant: petite-caps;\\n    height: 50px;\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n.card-text[_ngcontent-%COMP%] {\\n   overflow: hidden;\\n   text-overflow: ellipsis;\\n}\\n\\n.expand-link[_ngcontent-%COMP%] {\\n    position: absolute;\\n    bottom: 0;\\n    right: 0;\\n    \\n\\n    color: rgb(119, 171, 216);\\n    padding: 2px 5px;\\n    cursor: pointer;\\n    text-decoration: none;\\n}\\n\\n.expand-link[_ngcontent-%COMP%]:hover {\\n    text-decoration: underline;\\n    color: rgb(46, 132, 207);\\n}\\n\\n.badge-primary[_ngcontent-%COMP%] {\\n    background-color: #6199d4;\\n    color: #fff;\\n}\\n  \\n.badge-success[_ngcontent-%COMP%] {\\n    background-color: #28a745;\\n    color: #fff;\\n}\\n\\n.badge-europa[_ngcontent-%COMP%] {\\n    background-color: #fe7700;\\n    color: #fff;\\n}\\n\\n.badge-africa[_ngcontent-%COMP%] {\\n    background-color: #ffc250;\\n    color: #fff;\\n}\\n\\n.badge-oceania[_ngcontent-%COMP%] {\\n    background-color: #00fcc5;\\n    color: #fff;\\n}\\n\\n.badge-asia[_ngcontent-%COMP%] {\\n    background-color: #ba0000;\\n    color: #fff;\\n}\\n\\n.badge-north-america[_ngcontent-%COMP%] {\\n    background-color: #7624c2;\\n    color: #fff;\\n}\\n\\n.badge-south-america[_ngcontent-%COMP%] {\\n    background-color: #ca8cc2;\\n    color: #fff;\\n}\\n\\n.badge-central-america[_ngcontent-%COMP%] {\\n    background-color: #8c00ff;\\n    color: #fff;\\n}\\n\\n.badge-antartide[_ngcontent-%COMP%] {\\n    background-color: #e4eae5;\\n    color: #fff;\\n}\\n\\n.card-category-tag[_ngcontent-%COMP%] {\\n    display: inline;\\n    border-radius: 8px;\\n    width: 120px;\\n    text-align: center;\\n    height: 24px;\\n    margin-left: 85px;\\n}\\n\\n\\n\\n.login-overlay[_ngcontent-%COMP%] {\\n    position: absolute;\\n    top: 115px;\\n    left: 0;\\n    width: 100%;\\n    height: 338.5vh;\\n    background-color: rgba(255, 255, 255, 0.8); \\n\\n    -webkit-backdrop-filter: blur(8px);\\n            backdrop-filter: blur(8px); \\n\\n    z-index: 1000; \\n\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    justify-content: flex-start;\\n    \\n  }\\n  \\n  .login-message[_ngcontent-%COMP%] {\\n    text-align: center;\\n    font-size: 18px;\\n    color: #333;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zaW5nb2xvLXBvc3Qvc2luZ29sby1wb3N0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsb0JBQW9CO0FBQ3hCOztBQUVBO0lBQ0ksWUFBWSxFQUFFLDJDQUEyQztJQUN6RCxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLDJCQUEyQjtBQUMvQjs7QUFFQTtJQUNJLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIseUJBQXlCO0lBQ3pCLDBCQUEwQjtJQUMxQixrQkFBa0I7SUFDbEIsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLFlBQVk7QUFDaEI7O0FBRUE7Ozs7Ozs7Q0FPQztBQUNEO0dBQ0csZ0JBQWdCO0dBQ2hCLHVCQUF1QjtBQUMxQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixTQUFTO0lBQ1QsUUFBUTtJQUNSLDRCQUE0QjtJQUM1Qix5QkFBeUI7SUFDekIsZ0JBQWdCO0lBQ2hCLGVBQWU7SUFDZixxQkFBcUI7QUFDekI7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsd0JBQXdCO0FBQzVCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLFdBQVc7QUFDZjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsV0FBVztBQUNmOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLFdBQVc7QUFDZjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsV0FBVztBQUNmOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLFdBQVc7QUFDZjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsV0FBVztBQUNmOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osaUJBQWlCO0FBQ3JCOztBQUVBLGlEQUFpRDtBQUNqRDtJQUNJLGtCQUFrQjtJQUNsQixVQUFVO0lBQ1YsT0FBTztJQUNQLFdBQVc7SUFDWCxlQUFlO0lBQ2YsMENBQTBDLEVBQUUsdUJBQXVCO0lBQ25FLGtDQUEwQjtZQUExQiwwQkFBMEIsRUFBRSx5QkFBeUI7SUFDckQsYUFBYSxFQUFFLG9DQUFvQztJQUNuRCxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLG1CQUFtQjtJQUNuQiwyQkFBMkI7O0VBRTdCOztFQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixXQUFXO0VBQ2IiLCJzb3VyY2VzQ29udGVudCI6WyIjY29udGVudXRvLXBvc3Qge1xyXG4gICAgcGFkZGluZy10b3A6IDIwcHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcclxufVxyXG5cclxuLmNhcmQge1xyXG4gICAgd2lkdGg6IDMzMHB4OyAvKiBNb2RpZmljYSBxdWVzdGEgbGFyZ2hlenphIGEgdHVhIHNjZWx0YSAqL1xyXG4gICAgaGVpZ2h0OiA1MzBweDtcclxufVxyXG5cclxuLmNhcmQtaGVhZGVye1xyXG4gICAgaGVpZ2h0OiAxNTBweDtcclxuICAgIGJvcmRlci1ib3R0b20td2lkdGg6IG1lZGl1bTtcclxufVxyXG5cclxuLmNhcmQtaW1nLXRvcHtcclxuICAgIGhlaWdodDogMTYwcHg7XHJcbn1cclxuXHJcbi5jYXJkLXdyaXRlcntcclxuICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiAtd2Via2l0LXJpZ2h0O1xyXG4gICAgYm9yZGVyLWJvdHRvbS1zdHlsZTogc29saWQ7XHJcbiAgICBmb250LXNpemU6IHNtYWxsZXI7XHJcbiAgICBmb250LWZhbWlseTogbWF0aDtcclxufVxyXG5cclxuLmNhcmQtdGl0bGV7XHJcbiAgICBmb250LXZhcmlhbnQ6IHBldGl0ZS1jYXBzO1xyXG4gICAgaGVpZ2h0OiA1MHB4O1xyXG59XHJcblxyXG4vKiAgb3ZlcmZsb3c6IGhpZGRlbjs6IElsIHRlc3RvIGNoZSBzdXBlcmEgbGUgZGltZW5zaW9uaSBkZWxsJ2VsZW1lbnRvIHZlcnLDg8KgIG5hc2Nvc3RvIGUgbm9uIHNhcsODwqAgdmlzaWJpbGUgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsbCdlc3Rlcm5vIGRlbGxhIGNhcmQuIFF1ZXN0byBhc3NpY3VyYSBjaGUgaWwgdGVzdG8gY2hlIHZhIG9sdHJlIGlsIGxpbWl0ZSBzdGFiaWxpdG8gXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vbiBzYXLDg8KgIHZpc2liaWxlIGFsbCd1dGVudGUuXHJcblxyXG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7OiAgIFNlIGlsIHRlc3RvIGFsbCdpbnRlcm5vIGRlbGwnZWxlbWVudG8gc3VwZXJhIGlsIGxpbWl0ZSBlIHZpZW5lIG5hc2Nvc3RvLCB2ZXJyw4PCoCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZ2dpdW50byBcIi4uLlwiIGFsbGEgZmluZSBkZWwgdGVzdG8gdmlzaWJpbGUgcGVyIGluZGljYXJlIGFsbCd1dGVudGUgY2hlIGlsIHRlc3RvXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgw4PCqCB0cm9uY2F0by4gIFxyXG4qL1xyXG4uY2FyZC10ZXh0IHtcclxuICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbn1cclxuXHJcbi5leHBhbmQtbGluayB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIC8qY29sb3I6IHJnYig0NiwgMTMyLCAyMDcpOyovXHJcbiAgICBjb2xvcjogcmdiKDExOSwgMTcxLCAyMTYpO1xyXG4gICAgcGFkZGluZzogMnB4IDVweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxufVxyXG5cclxuLmV4cGFuZC1saW5rOmhvdmVyIHtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgY29sb3I6IHJnYig0NiwgMTMyLCAyMDcpO1xyXG59XHJcblxyXG4uYmFkZ2UtcHJpbWFyeSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjE5OWQ0O1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbn1cclxuICBcclxuLmJhZGdlLXN1Y2Nlc3Mge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzI4YTc0NTtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG59XHJcblxyXG4uYmFkZ2UtZXVyb3BhIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZTc3MDA7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxufVxyXG5cclxuLmJhZGdlLWFmcmljYSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZjMjUwO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbn1cclxuXHJcbi5iYWRnZS1vY2VhbmlhIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMGZjYzU7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxufVxyXG5cclxuLmJhZGdlLWFzaWEge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2JhMDAwMDtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG59XHJcblxyXG4uYmFkZ2Utbm9ydGgtYW1lcmljYSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNzYyNGMyO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbn1cclxuXHJcbi5iYWRnZS1zb3V0aC1hbWVyaWNhIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNjYThjYzI7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxufVxyXG5cclxuLmJhZGdlLWNlbnRyYWwtYW1lcmljYSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOGMwMGZmO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbn1cclxuXHJcbi5iYWRnZS1hbnRhcnRpZGUge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U0ZWFlNTtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG59XHJcblxyXG4uY2FyZC1jYXRlZ29yeS10YWcge1xyXG4gICAgZGlzcGxheTogaW5saW5lO1xyXG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgd2lkdGg6IDEyMHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgaGVpZ2h0OiAyNHB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDg1cHg7XHJcbn1cclxuXHJcbi8qIFNmb25kbyBzZm9jYXRvIHF1YW5kbyBsJ3V0ZW50ZSBub24gw4PCqCBsb2dnYXRvICovXHJcbi5sb2dpbi1vdmVybGF5IHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMTE1cHg7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDMzOC41dmg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7IC8qIFJlZ29sYXJlIGwnb3BhY2l0w4PCoCAqL1xyXG4gICAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDhweCk7IC8qIGxpdmVsbG8gZGkgc2ZvY2F0dXJhICovXHJcbiAgICB6LWluZGV4OiAxMDAwOyAvKiBzZm9uZG8gc29wcmEgZ2xpIGFsdHJpIGVsZW1lbnRpICovXHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgICBcclxuICB9XHJcbiAgXHJcbiAgLmxvZ2luLW1lc3NhZ2Uge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgY29sb3I6ICMzMzM7XHJcbiAgfVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["i0","ɵɵelement","ɵɵproperty","ctx_r0","immagineURL","ɵɵsanitizeUrl","ɵɵelementStart","ɵɵlistener","SingoloPostComponent_a_17_Template_a_click_0_listener","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","dettagliPost","post","id_post","ɵɵtext","ɵɵelementEnd","ɵɵnamespaceSVG","SingoloPostComponent_div_18_Template__svg_svg_click_1_listener","_r6","ctx_r5","closePopUp","ɵɵnamespaceHTML","SingoloPostComponent","constructor","route","service","serviceUtente","router","sanitizer","listaImmagini","categoryColors","isContentExpanded","isUserLoggedIn","ngOnInit","getAutorePostById","subscribe","next","response","autore","getCategoriePostById","responseCategory","categorie","getImmaginiPostById","responseImage","immaginiAssociate","i","length","url","error","console","log","getCategoryColors","toggleContentExpand","id","utente","JSON","parse","sessionStorage","getItem","window","scrollTo","top","behavior","navigate","setFormattedText","html","formattedText","substring","anteprima","bypassSecurityTrustHtml","ɵɵdirectiveInject","i1","ActivatedRoute","i2","PostService","i3","UtenteService","Router","i4","DomSanitizer","selectors","inputs","decls","vars","consts","template","SingoloPostComponent_Template","rf","ctx","ɵɵtemplate","SingoloPostComponent_img_3_Template","SingoloPostComponent_a_17_Template","SingoloPostComponent_div_18_Template","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind2","data","titolo","contenuto","ɵɵsanitizeHtml"],"sources":["C:\\Users\\gemel\\Desktop\\Federico\\Progetto Finale\\Wanderlust - FrontEnd\\Wanderlust_FrontEnd\\src\\app\\components\\singolo-post\\singolo-post.component.ts","C:\\Users\\gemel\\Desktop\\Federico\\Progetto Finale\\Wanderlust - FrontEnd\\Wanderlust_FrontEnd\\src\\app\\components\\singolo-post\\singolo-post.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Immagine } from 'src/app/model/immagine/immagine';\nimport { Post } from 'src/app/model/post/post';\nimport { Utente } from 'src/app/model/utente/utente';\nimport { PostService } from 'src/app/services/post-Service/post.service';\nimport { UtenteService } from 'src/app/services/utente-Service/utente.service';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-singolo-post',\n  templateUrl: './singolo-post.component.html',\n  styleUrls: ['./singolo-post.component.css']\n})\nexport class SingoloPostComponent implements OnInit{\n  @Input() post?: Post;\n  autore?: String;\n  categorie?: String;\n  listaImmagini: Immagine[] = [];\n  immagineURL?: string;\n  utente?: Utente;\n\n  constructor(private route: ActivatedRoute, private service: PostService, private serviceUtente: UtenteService , \n    private router: Router, private sanitizer: DomSanitizer) { }\n  \n  ngOnInit(): void {\n    this.service.getAutorePostById(this.post!.id_post!)\n    .subscribe({\n      next: (response) => {\n        this.autore = response;\n\n        this.service.getCategoriePostById(this.post!.id_post!)\n          .subscribe({\n            next: (responseCategory) => {\n              this.categorie = responseCategory;\n              \n              /*  Nel caso di piu categorie\n                  \n                  const keys = Object.keys(responseCategory);\n                  for (let i = 0; i < keys.length; i++) {\n                    const key = keys[i];\n                    this[`categoria${i + 1}`] = responseCategory[key];\n                  }\n               * \n               */\n\n              this.service.getImmaginiPostById(this.post!.id_post!)\n                .subscribe({\n                  next: (responseImage) => {\n                    this.listaImmagini = responseImage.immaginiAssociate!;\n                    for (let i = 0; i < this.listaImmagini.length; i++) {\n                      if(this.immagineURL !== 'null'){ //credo qui vada corretto con this.listaImmagini[i]\n                        this.immagineURL = this.listaImmagini[i].url;\n                        break; // Per prendere solo la prima immagine non-null\n                      }\n                    }\n                    \n                  },\n                  error: (error) => console.log(error)\n                });                                                 \n            },\n\n            error: (error) => console.log(error)\n          });\n      },\n\n      error: (error) => console.log(error)\n    });\n  }\n\n  // Se categorie è definito e rappresenta una categoria valida, viene restituito un oggetto con due proprietà \n  // booleane: 'card-category-tag' impostata a true (per applicare lo stile di base al tag della categoria) e la \n  // classe CSS corrispondente all'oggetto categoryColors basato sulla categoria corrente. Se categorie non è \n  // definito o non è una stringa, viene restituito un oggetto con la sola proprietà 'card-category-tag' impostata \n  // a true.\n  getCategoryColors(): any {\n    return this.categorie && typeof this.categorie === 'string'\n      ? { 'card-category-tag': true, [this.categoryColors[this.categorie]]: true }\n      : { 'card-category-tag': true };\n  }\n\n  // oggetto categoryColors che serve come mappatura tra le categorie dei post (es. \"Città\", \"Natura\") e le \n  // classi CSS corrispondenti che si desidera applicare \n  categoryColors: { [key: string]: string } = {\n    'Città': 'badge-primary',\n    'Natura': 'badge-success',\n    'Europa': 'badge-europa',\n    'Africa': 'badge-africa',\n    'Oceania': 'badge-oceania',\n    'Asia': 'badge-asia',\n    'America del Nord': 'badge-north-america',\n    'America del Sud': 'badge-south-america',\n    'America Centrale': 'badge-central-america',\n    'Antartide': 'badge-antartide',\n  };\n\n  isContentExpanded: boolean = false;\n\n  toggleContentExpand(): void {\n    this.isContentExpanded = !this.isContentExpanded;\n  }\n\n  isUserLoggedIn: boolean = true;\n\n  dettagliPost(id?: number){\n    this.utente = JSON.parse(sessionStorage.getItem('utenteloggato')!);\n\n    if(!this.utente){\n      this.isUserLoggedIn = false;\n      window.scrollTo({\n        top: 200,\n        behavior: 'smooth' // Scorrimento verso l'alto della pagina\n      });\n      return;\n    }\n    else{\n      this.router.navigate([\"dettaglipost\", id]);      \n    }    \n  }\n\n  closePopUp(){\n    this.isUserLoggedIn = true;\n  }\n\n  formattedText?: string;\n  anteprima?: SafeHtml;\n\n  setFormattedText(html: string): SafeHtml {\n    this.formattedText = html.substring(0,250) + '  [...]';\n    return this.anteprima = this.sanitizer.bypassSecurityTrustHtml(this.formattedText);\n  }\n\n\n}\n","<div id=\"contenuto-post\">\n  <div class=\"col\">\n    <div class=\"card\" >\n\n      <img *ngIf=\"immagineURL\" [src]=\"immagineURL\" class=\"card-img-top\" alt=\"Image\"/>\n\n      <div class=\"card-header\">\n        <!-- Usiamo il pipes Date di Angular per fornire una formattazione diversa dal tipo passato -->\n        <h6 class=\"card-data\" style=\"display: inline;\">{{post?.data | date: 'dd-MM-yyyy'}}</h6>\n        <div [ngClass]=\"getCategoryColors()\" class=\"card-category-tag\">\n          <h6 class=\"card-category\" style=\"display: inline;\">{{categorie}}</h6>\n        </div>\n        \n        <h4 class=\"card-title\" style=\"margin-top: 20px;\">{{post?.titolo}}</h4>\n        <h5 class=\"card-writer\" style=\"margin-top: 20px;\">{{autore}}</h5>        \n      </div>\n\n      <div class=\"card-body\">\n\n        <div [innerHTML]=\"setFormattedText(post?.contenuto!)\"></div>\n        <!-- Il pulsante compare solo se il post supera i 100 caratteri -->\n        <a class=\"expand-link\" *ngIf=\"post?.contenuto!.length > 100\" (click)=\"dettagliPost(post?.id_post)\">Leggi di più</a>\n\n        <!-- Indichiamo di mostrare il contenuto del post, ma se il contenuto del testo supera i 100 caratteri \n          di mostrare poi i \"...\" per indicare che il testo continua e al click sulla card aprire la pagina di \n          riferimento del singolo post. mettendo slice il troncamento già avviene ma con le greffe successive\n          possiamo impostare i [...] \n          <p class=\"card-text\">{{post?.contenuto| slice:0:260}}{{post?.contenuto!.length > 100 ? ' [...]' : ''}}</p> \n        -->\n      </div> \n      \n    </div>\n  </div>\n\n  <div class=\"login-overlay\" *ngIf=\"!isUserLoggedIn\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"0 0 512 512\" style=\"float: right; cursor: pointer; margin-top: 400px; padding-left: 400px; margin-bottom: 20px;\" (click)=\"closePopUp()\">\n      <path d=\"M256 48a208 208 0 1 1 0 416 208 208 0 1 1 0-416zm0 464A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM175 175c-9.4 9.4-9.4 24.6 0 33.9l47 47-47 47c-9.4 9.4-9.4 24.6 0 33.9s24.6 9.4 33.9 0l47-47 47 47c9.4 9.4 24.6 9.4 33.9 0s9.4-24.6 0-33.9l-47-47 47-47c9.4-9.4 9.4-24.6 0-33.9s-24.6-9.4-33.9 0l-47 47-47-47c-9.4-9.4-24.6-9.4-33.9 0z\"/>\n    </svg> \n    <p class=\"login-message\">E' necessario effettuare il Login per vedere i dettagli del post.</p>\n    <p class=\"login-message\">\n      Clicca\n      <a href=\"/login\" style=\"color: blue;\">qui</a>      \n      per accedere.\n    </p>    \n  </div>\n\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}