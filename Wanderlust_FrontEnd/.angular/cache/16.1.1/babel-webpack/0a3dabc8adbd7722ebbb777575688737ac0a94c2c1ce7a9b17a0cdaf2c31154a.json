{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/post-Service/post.service\";\nimport * as i3 from \"src/app/services/utente-Service/utente.service\";\nexport class SingoloPostComponent {\n  constructor(route, service, serviceUtente, router) {\n    this.route = route;\n    this.service = service;\n    this.serviceUtente = serviceUtente;\n    this.router = router;\n    this.listaImmagini = [];\n    this.isContentExpanded = false;\n  }\n  ngOnInit() {\n    this.service.getAutorePostById(this.post.id_post).subscribe({\n      next: response => {\n        this.autore = response;\n        this.service.getCategoriePostById(this.post.id_post).subscribe({\n          next: responseCategory => {\n            this.categorie = responseCategory;\n            /*  Nel caso di piu categorie\n                \n                const keys = Object.keys(responseCategory);\n                for (let i = 0; i < keys.length; i++) {\n                  const key = keys[i];\n                  this[`categoria${i + 1}`] = responseCategory[key];\n                }\n             *\n             */\n            this.service.getImmaginiPostById(this.post.id_post).subscribe({\n              next: responseImage => {\n                this.listaImmagini = responseImage.immaginiAssociate;\n                for (let i = 0; i < this.listaImmagini.length; i++) {\n                  if (this.immagineURL !== 'null') {\n                    this.immagineURL = this.listaImmagini[i].url;\n                    break; // Per assegnare solo la prima immagine non-null\n                  }\n                }\n              },\n\n              error: error => console.log(error)\n            });\n          },\n          error: error => console.log(error)\n        });\n      },\n      error: error => console.log(error)\n    });\n  }\n  toggleContentExpand() {\n    this.isContentExpanded = !this.isContentExpanded;\n  }\n}\nSingoloPostComponent.ɵfac = function SingoloPostComponent_Factory(t) {\n  return new (t || SingoloPostComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.PostService), i0.ɵɵdirectiveInject(i3.UtenteService), i0.ɵɵdirectiveInject(i1.Router));\n};\nSingoloPostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SingoloPostComponent,\n  selectors: [[\"app-singolo-post\"]],\n  inputs: {\n    post: \"post\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function SingoloPostComponent_Template(rf, ctx) {},\n  styles: [\"#contenuto-post[_ngcontent-%COMP%] {\\n    padding-top: 20px;\\n    padding-bottom: 20px;\\n}\\n\\n.card[_ngcontent-%COMP%] {\\n    max-width: 400px;\\n  }\\n  \\n  .card-body[_ngcontent-%COMP%] {\\n    overflow: hidden;\\n  }\\n  \\n  .card-text.expandable[_ngcontent-%COMP%] {\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: -webkit-box;\\n    -webkit-line-clamp: 3; \\n\\n    -webkit-box-orient: vertical;\\n  }\\n  \\n  .card-actions[_ngcontent-%COMP%] {\\n    text-align: center;\\n    margin-top: 10px;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zaW5nb2xvLXBvc3Qvc2luZ29sby1wb3N0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsb0JBQW9CO0FBQ3hCOztBQUVBO0lBQ0ksZ0JBQWdCO0VBQ2xCOztFQUVBO0lBQ0UsZ0JBQWdCO0VBQ2xCOztFQUVBO0lBQ0UsZ0JBQWdCO0lBQ2hCLHVCQUF1QjtJQUN2QixvQkFBb0I7SUFDcEIscUJBQXFCLEVBQUUsb0VBQW9FO0lBQzNGLDRCQUE0QjtFQUM5Qjs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQixnQkFBZ0I7RUFDbEIiLCJzb3VyY2VzQ29udGVudCI6WyIjY29udGVudXRvLXBvc3Qge1xyXG4gICAgcGFkZGluZy10b3A6IDIwcHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcclxufVxyXG5cclxuLmNhcmQge1xyXG4gICAgbWF4LXdpZHRoOiA0MDBweDtcclxuICB9XHJcbiAgXHJcbiAgLmNhcmQtYm9keSB7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIH1cclxuICBcclxuICAuY2FyZC10ZXh0LmV4cGFuZGFibGUge1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XHJcbiAgICAtd2Via2l0LWxpbmUtY2xhbXA6IDM7IC8qIEltcG9zdGEgaWwgbnVtZXJvIG1hc3NpbW8gZGkgcmlnaGUgY2hlIHNpIGRlc2lkZXJhIHZpc3VhbGl6emFyZSAqL1xyXG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcclxuICB9XHJcbiAgXHJcbiAgLmNhcmQtYWN0aW9ucyB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["SingoloPostComponent","constructor","route","service","serviceUtente","router","listaImmagini","isContentExpanded","ngOnInit","getAutorePostById","post","id_post","subscribe","next","response","autore","getCategoriePostById","responseCategory","categorie","getImmaginiPostById","responseImage","immaginiAssociate","i","length","immagineURL","url","error","console","log","toggleContentExpand","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","PostService","i3","UtenteService","Router","selectors","inputs","decls","vars","template","SingoloPostComponent_Template","rf","ctx","styles"],"sources":["C:\\Users\\gemel\\Desktop\\Federico\\Progetto Finale\\Wanderlust - FrontEnd\\Wanderlust_FrontEnd\\src\\app\\components\\singolo-post\\singolo-post.component.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Immagine } from 'src/app/model/immagine/immagine';\nimport { Post } from 'src/app/model/post/post';\nimport { Utente } from 'src/app/model/utente/utente';\nimport { PostService } from 'src/app/services/post-Service/post.service';\nimport { UtenteService } from 'src/app/services/utente-Service/utente.service';\n\n@Component({\n  selector: 'app-singolo-post',\n  templateUrl: './singolo-post.component.html',\n  styleUrls: ['./singolo-post.component.css']\n})\nexport class SingoloPostComponent implements OnInit{\n  @Input() post?: Post;\n  autore?: String;\n  categorie?: String;\n  listaImmagini: Immagine[] = [];\n  immagineURL?: string;\n\n  constructor(private route: ActivatedRoute, private service: PostService, private serviceUtente: UtenteService , \n    private router: Router) { }\n  \n  ngOnInit(): void {\n    this.service.getAutorePostById(this.post!.id_post!)\n    .subscribe({\n      next: (response) => {\n        this.autore = response;\n\n        this.service.getCategoriePostById(this.post!.id_post!)\n          .subscribe({\n            next: (responseCategory) => {\n              this.categorie = responseCategory;\n              \n              /*  Nel caso di piu categorie\n                  \n                  const keys = Object.keys(responseCategory);\n                  for (let i = 0; i < keys.length; i++) {\n                    const key = keys[i];\n                    this[`categoria${i + 1}`] = responseCategory[key];\n                  }\n               * \n               */\n\n              this.service.getImmaginiPostById(this.post!.id_post!)\n                .subscribe({\n                  next: (responseImage) => {\n                    this.listaImmagini = responseImage.immaginiAssociate!;\n                    for (let i = 0; i < this.listaImmagini.length; i++) {\n                      if(this.immagineURL !== 'null'){\n                        this.immagineURL = this.listaImmagini[i].url;\n                        break; // Per assegnare solo la prima immagine non-null\n                      }\n                    }\n                    \n                  },\n                  error: (error) => console.log(error)\n                });                                                 \n            },\n\n            error: (error) => console.log(error)\n          });\n      },\n\n      error: (error) => console.log(error)\n    });\n  }\n\n  isContentExpanded: boolean = false;\n\n  toggleContentExpand(): void {\n    this.isContentExpanded = !this.isContentExpanded;\n  }\n\n}\n"],"mappings":";;;;AAaA,OAAM,MAAOA,oBAAoB;EAO/BC,YAAoBC,KAAqB,EAAUC,OAAoB,EAAUC,aAA4B,EACnGC,MAAc;IADJ,KAAAH,KAAK,GAALA,KAAK;IAA0B,KAAAC,OAAO,GAAPA,OAAO;IAAuB,KAAAC,aAAa,GAAbA,aAAa;IACpF,KAAAC,MAAM,GAANA,MAAM;IAJhB,KAAAC,aAAa,GAAe,EAAE;IAmD9B,KAAAC,iBAAiB,GAAY,KAAK;EA/CN;EAE5BC,QAAQA,CAAA;IACN,IAAI,CAACL,OAAO,CAACM,iBAAiB,CAAC,IAAI,CAACC,IAAK,CAACC,OAAQ,CAAC,CAClDC,SAAS,CAAC;MACTC,IAAI,EAAGC,QAAQ,IAAI;QACjB,IAAI,CAACC,MAAM,GAAGD,QAAQ;QAEtB,IAAI,CAACX,OAAO,CAACa,oBAAoB,CAAC,IAAI,CAACN,IAAK,CAACC,OAAQ,CAAC,CACnDC,SAAS,CAAC;UACTC,IAAI,EAAGI,gBAAgB,IAAI;YACzB,IAAI,CAACC,SAAS,GAAGD,gBAAgB;YAEjC;;;;;;;;;YAUA,IAAI,CAACd,OAAO,CAACgB,mBAAmB,CAAC,IAAI,CAACT,IAAK,CAACC,OAAQ,CAAC,CAClDC,SAAS,CAAC;cACTC,IAAI,EAAGO,aAAa,IAAI;gBACtB,IAAI,CAACd,aAAa,GAAGc,aAAa,CAACC,iBAAkB;gBACrD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAChB,aAAa,CAACiB,MAAM,EAAED,CAAC,EAAE,EAAE;kBAClD,IAAG,IAAI,CAACE,WAAW,KAAK,MAAM,EAAC;oBAC7B,IAAI,CAACA,WAAW,GAAG,IAAI,CAAClB,aAAa,CAACgB,CAAC,CAAC,CAACG,GAAG;oBAC5C,MAAM,CAAC;;;cAIb,CAAC;;cACDC,KAAK,EAAGA,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK;aACpC,CAAC;UACN,CAAC;UAEDA,KAAK,EAAGA,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK;SACpC,CAAC;MACN,CAAC;MAEDA,KAAK,EAAGA,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK;KACpC,CAAC;EACJ;EAIAG,mBAAmBA,CAAA;IACjB,IAAI,CAACtB,iBAAiB,GAAG,CAAC,IAAI,CAACA,iBAAiB;EAClD;;AA3DWP,oBAAoB,C;mBAApBA,oBAAoB,EAAA8B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,aAAA,GAAAP,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAM,MAAA;AAAA;AAApBtC,oBAAoB,C;QAApBA,oBAAoB;EAAAuC,SAAA;EAAAC,MAAA;IAAA9B,IAAA;EAAA;EAAA+B,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;EAAAC,MAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}