{"ast":null,"code":"import { Utente } from 'src/app/model/utente/utente';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/post-Service/post.service\";\nimport * as i3 from \"src/app/services/utente-Service/utente.service\";\nimport * as i4 from \"src/app/services/categoria-Service/categoria.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"ngx-pagination\";\nimport * as i7 from \"../singolo-post/singolo-post.component\";\nfunction PostManagementComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"div\", 14)(2, \"h4\", 15);\n    i0.ɵɵtext(3, \"NESSUN ARTICOLO TROVATO!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5, \"No Posts were found.\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction PostManagementComponent_div_12_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 25)(1, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function PostManagementComponent_div_12_div_7_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const post_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.aggiornamentoPost(post_r2));\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(2, \"svg\", 27)(3, \"g\", 28);\n    i0.ɵɵelement(4, \"path\", 29)(5, \"path\", 30);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(6, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function PostManagementComponent_div_12_div_7_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const post_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.eliminazionePost(post_r2 == null ? null : post_r2.id_post));\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(7, \"svg\", 32);\n    i0.ɵɵelement(8, \"path\", 33);\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction PostManagementComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"div\", 17)(2, \"input\", 18);\n    i0.ɵɵlistener(\"click\", function PostManagementComponent_div_12_Template_input_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const post_r2 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.toggleMenuPost(post_r2.id_post));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\", 19);\n    i0.ɵɵelement(4, \"div\", 20)(5, \"div\", 21)(6, \"div\", 22);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(7, PostManagementComponent_div_12_div_7_Template, 9, 0, \"div\", 23);\n    i0.ɵɵelement(8, \"app-singolo-post\", 24);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const post_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"checkbox-post-\", post_r2.id_post, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"checkbox-post-\", post_r2.id_post, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.postMenuStatus[post_r2.id_post]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"post\", post_r2);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"no-posts\": a0\n  };\n};\nconst _c1 = function (a1) {\n  return {\n    itemsPerPage: 9,\n    currentPage: a1\n  };\n};\nexport class PostManagementComponent {\n  constructor(route, service, serviceUtente, router, serviceCategoria) {\n    this.route = route;\n    this.service = service;\n    this.serviceUtente = serviceUtente;\n    this.router = router;\n    this.serviceCategoria = serviceCategoria;\n    this.utente = new Utente();\n    this.listaPost = [];\n    this.listaPostBackup = [];\n    this.categorie = [];\n    this.currentPage = 1;\n    this.noPost = false;\n    //soluzione migliore per evitare un'altra chiamata al backend\n    // Creiamo una mappa che associa ad ogni postId un booleano\n    this.postMenuStatus = {};\n  }\n  ngOnInit() {\n    this.service.getAllPosts().subscribe({\n      next: response => {\n        this.listaPost = response;\n        this.listaPostBackup = response;\n        this.serviceCategoria.getAllCategorie().subscribe({\n          next: data => {\n            data.sort((a, b) => a.nome_categoria.localeCompare(b.nome_categoria)); //ordine alfabetico categorie\n            this.categorie = data;\n          },\n          error: error => console.log(error)\n        });\n      },\n      error: error => {\n        alert(error.message);\n      }\n    });\n  }\n  goBack() {\n    window.history.back();\n  }\n  ricercaPostPerTitolo(key) {\n    console.log(key);\n    const results = [];\n    for (const post of this.listaPost) {\n      if (post.titolo.toLowerCase().indexOf(key.toLowerCase()) !== -1) {\n        results.push(post);\n      }\n    }\n    //aggiorniamo i post visibili sulla pagina\n    this.listaPost = results;\n    //se non c'è alcuna ricerca effettuata o il risultato è nullo ridammi tutti i post\n    if (!key) {\n      this.noPost = false;\n      this.listaPost = this.listaPostBackup;\n    }\n    if (results.length === 0 && key) {\n      this.noPost = true;\n    }\n  }\n  eliminazionePost(id_post) {\n    if (id_post) {\n      this.service.deletePostById(id_post).subscribe({\n        next: () => {\n          console.log('Post eliminato con successo.');\n          this.router.navigate(['/', 'mieiarticoli']).then(() => window.location.reload());\n        },\n        error: error => console.log(error)\n      });\n    }\n  }\n  toggleMenuPost(postId) {\n    if (this.postMenuStatus[postId] === undefined) {\n      //se non c'è corrispondenza nella mappa allora inserisce il valore\n      this.postMenuStatus[postId] = false;\n    }\n    this.postMenuStatus[postId] = !this.postMenuStatus[postId]; //se invece è presente un valore, deve cambiarlo\n  }\n}\n\nPostManagementComponent.ɵfac = function PostManagementComponent_Factory(t) {\n  return new (t || PostManagementComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.PostService), i0.ɵɵdirectiveInject(i3.UtenteService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i4.CategoriaService));\n};\nPostManagementComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostManagementComponent,\n  selectors: [[\"app-post-management\"]],\n  decls: 16,\n  vars: 10,\n  consts: [[\"id\", \"wrapper\"], [1, \"page-header\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"height\", \"1em\", \"viewBox\", \"0 0 512 512\", 2, \"font-size\", \"x-large\", \"cursor\", \"pointer\", 3, \"click\"], [\"d\", \"M48 256a208 208 0 1 1 416 0A208 208 0 1 1 48 256zm464 0A256 256 0 1 0 0 256a256 256 0 1 0 512 0zM217.4 376.9c4.2 4.5 10.1 7.1 16.3 7.1c12.3 0 22.3-10 22.3-22.3V304h96c17.7 0 32-14.3 32-32V240c0-17.7-14.3-32-32-32H256V150.3c0-12.3-10-22.3-22.3-22.3c-6.2 0-12.1 2.6-16.3 7.1L117.5 242.2c-3.5 3.8-5.5 8.7-5.5 13.8s2 10.1 5.5 13.8l99.9 107.1z\"], [1, \"h1\", \"page-title\"], [1, \"filter-posts-container\"], [1, \"posts-column\"], [\"class\", \"col-lg-12 col-md-12 col-xl-12\", \"style\", \"width: auto; padding-left: 40px; padding-right: 40px;\", 4, \"ngIf\"], [1, \"container\", 3, \"ngClass\"], [1, \"row\"], [\"class\", \"col-12 col-md-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"pagination-container\"], [3, \"pageChange\"], [1, \"col-lg-12\", \"col-md-12\", \"col-xl-12\", 2, \"width\", \"auto\", \"padding-left\", \"40px\", \"padding-right\", \"40px\"], [\"role\", \"alert\", 1, \"alert\", \"alert-info\"], [1, \"alert-heading\"], [1, \"col-12\", \"col-md-4\"], [1, \"menu-post\"], [\"type\", \"checkbox\", 1, \"toggle-check\", 3, \"id\", \"click\"], [1, \"toggle-post\", 3, \"for\"], [\"id\", \"bar1\", 1, \"bars\"], [\"id\", \"bar2\", 1, \"bars\"], [\"id\", \"bar3\", 1, \"bars\"], [\"class\", \"container-button\", 4, \"ngIf\"], [3, \"post\"], [1, \"container-button\"], [1, \"btn-update\", 3, \"click\"], [\"fill\", \"none\", \"height\", \"24\", \"viewBox\", \"0 0 24 24\", \"width\", \"24\", \"xmlns\", \"http://www.w3.org/2000/svg\", 1, \"icon-update\"], [\"stroke\", \"black\", \"stroke-linecap\", \"round\", \"stroke-width\", \"1.5\"], [\"d\", \"m20 20h-16\"], [\"clip-rule\", \"evenodd\", \"d\", \"m14.5858 4.41422c.781-.78105 2.0474-.78105 2.8284 0 .7811.78105.7811 2.04738 0 2.82843l-8.28322 8.28325-3.03046.202.20203-3.0304z\", \"id\", \"Fill\"], [1, \"btn-delete\", 3, \"click\"], [\"viewBox\", \"0 0 15 17.5\", \"height\", \"17.5\", \"width\", \"15\", \"xmlns\", \"http://www.w3.org/2000/svg\", 1, \"icon-delete\"], [\"transform\", \"translate(-2.5 -1.25)\", \"d\", \"M15,18.75H5A1.251,1.251,0,0,1,3.75,17.5V5H2.5V3.75h15V5H16.25V17.5A1.251,1.251,0,0,1,15,18.75ZM5,5V17.5H15V5Zm7.5,10H11.25V7.5H12.5V15ZM8.75,15H7.5V7.5H8.75V15ZM12.5,2.5h-5V1.25h5V2.5Z\", \"id\", \"Fill\"]],\n  template: function PostManagementComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"header\", 1);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(2, \"svg\", 2);\n      i0.ɵɵlistener(\"click\", function PostManagementComponent_Template__svg_svg_click_2_listener() {\n        return ctx.goBack();\n      });\n      i0.ɵɵelement(3, \"path\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelementStart(4, \"h1\", 4)(5, \"span\");\n      i0.ɵɵtext(6, \"Articoli Pubblicati\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"div\", 6);\n      i0.ɵɵtemplate(9, PostManagementComponent_div_9_Template, 6, 0, \"div\", 7);\n      i0.ɵɵelementStart(10, \"div\", 8)(11, \"div\", 9);\n      i0.ɵɵtemplate(12, PostManagementComponent_div_12_Template, 9, 4, \"div\", 10);\n      i0.ɵɵpipe(13, \"paginate\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(14, \"footer\", 11)(15, \"pagination-controls\", 12);\n      i0.ɵɵlistener(\"pageChange\", function PostManagementComponent_Template_pagination_controls_pageChange_15_listener($event) {\n        return ctx.currentPage = $event;\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngIf\", ctx.noPost);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ctx.noPost));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(13, 3, ctx.listaPost, i0.ɵɵpureFunction1(8, _c1, ctx.currentPage)));\n    }\n  },\n  dependencies: [i5.NgClass, i5.NgForOf, i5.NgIf, i6.PaginationControlsComponent, i7.SingoloPostComponent, i6.PaginatePipe],\n  styles: [\"html[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\\n  height: 100%;\\n}\\n\\n#wrapper[_ngcontent-%COMP%] {\\n  position: relative;\\n  min-height: 100vh;\\n  margin: 0 auto; \\n\\n  width: 95%;\\n}\\n\\n.h1[_ngcontent-%COMP%]{\\n  margin-top: 1.5rem;\\n  margin-bottom: 1.5rem;\\n  font-weight: 500;\\n  line-height: 1.2;\\n  color: var(--bs-heading-color);\\n  font-size: 3.5rem;\\n  text-align: -webkit-center;\\n  text-transform: capitalize;\\n  font-family: revert;\\n  border-bottom-style: inset;\\n  border-top-style: outset;\\n}\\n\\n.page-header[_ngcontent-%COMP%]{\\n  padding-top: 30px;\\n}\\n\\n.no-posts[_ngcontent-%COMP%] {\\n  height: 100vh;\\n}\\n\\n.pagination-container[_ngcontent-%COMP%]{\\n  text-align: -webkit-center;    \\n}\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9wb3N0LW1hbmFnZW1lbnQvcG9zdC1tYW5hZ2VtZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0VBRUUsWUFBWTtBQUNkOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGlCQUFpQjtFQUNqQixjQUFjLEVBQUUsNEJBQTRCO0VBQzVDLFVBQVU7QUFDWjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixxQkFBcUI7RUFDckIsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQiw4QkFBOEI7RUFDOUIsaUJBQWlCO0VBQ2pCLDBCQUEwQjtFQUMxQiwwQkFBMEI7RUFDMUIsbUJBQW1CO0VBQ25CLDBCQUEwQjtFQUMxQix3QkFBd0I7QUFDMUI7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSwwQkFBMEI7QUFDNUIiLCJzb3VyY2VzQ29udGVudCI6WyJodG1sLFxyXG5ib2R5IHtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbiN3cmFwcGVyIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgbWluLWhlaWdodDogMTAwdmg7XHJcbiAgbWFyZ2luOiAwIGF1dG87IC8qIHBlciBjZW50cmFyZSBpbCB3cmFwcGVyICovXHJcbiAgd2lkdGg6IDk1JTtcclxufVxyXG5cclxuLmgxe1xyXG4gIG1hcmdpbi10b3A6IDEuNXJlbTtcclxuICBtYXJnaW4tYm90dG9tOiAxLjVyZW07XHJcbiAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICBsaW5lLWhlaWdodDogMS4yO1xyXG4gIGNvbG9yOiB2YXIoLS1icy1oZWFkaW5nLWNvbG9yKTtcclxuICBmb250LXNpemU6IDMuNXJlbTtcclxuICB0ZXh0LWFsaWduOiAtd2Via2l0LWNlbnRlcjtcclxuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcclxuICBmb250LWZhbWlseTogcmV2ZXJ0O1xyXG4gIGJvcmRlci1ib3R0b20tc3R5bGU6IGluc2V0O1xyXG4gIGJvcmRlci10b3Atc3R5bGU6IG91dHNldDtcclxufVxyXG5cclxuLnBhZ2UtaGVhZGVye1xyXG4gIHBhZGRpbmctdG9wOiAzMHB4O1xyXG59XHJcblxyXG4ubm8tcG9zdHMge1xyXG4gIGhlaWdodDogMTAwdmg7XHJcbn1cclxuXHJcbi5wYWdpbmF0aW9uLWNvbnRhaW5lcntcclxuICB0ZXh0LWFsaWduOiAtd2Via2l0LWNlbnRlcjsgICAgXHJcbn1cclxuXHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["Utente","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","PostManagementComponent_div_12_div_7_Template_button_click_1_listener","ɵɵrestoreView","_r6","post_r2","ɵɵnextContext","$implicit","ctx_r4","ɵɵresetView","aggiornamentoPost","ɵɵnamespaceSVG","ɵɵelement","ɵɵnamespaceHTML","PostManagementComponent_div_12_div_7_Template_button_click_6_listener","ctx_r7","eliminazionePost","id_post","PostManagementComponent_div_12_Template_input_click_2_listener","restoredCtx","_r10","ctx_r9","toggleMenuPost","ɵɵtemplate","PostManagementComponent_div_12_div_7_Template","ɵɵadvance","ɵɵpropertyInterpolate1","ɵɵproperty","ctx_r1","postMenuStatus","PostManagementComponent","constructor","route","service","serviceUtente","router","serviceCategoria","utente","listaPost","listaPostBackup","categorie","currentPage","noPost","ngOnInit","getAllPosts","subscribe","next","response","getAllCategorie","data","sort","a","b","nome_categoria","localeCompare","error","console","log","alert","message","goBack","window","history","back","ricercaPostPerTitolo","key","results","post","titolo","toLowerCase","indexOf","push","length","deletePostById","navigate","then","location","reload","postId","undefined","ɵɵdirectiveInject","i1","ActivatedRoute","i2","PostService","i3","UtenteService","Router","i4","CategoriaService","selectors","decls","vars","consts","template","PostManagementComponent_Template","rf","ctx","PostManagementComponent_Template__svg_svg_click_2_listener","PostManagementComponent_div_9_Template","PostManagementComponent_div_12_Template","PostManagementComponent_Template_pagination_controls_pageChange_15_listener","$event","ɵɵpureFunction1","_c0","ɵɵpipeBind2","_c1"],"sources":["C:\\Users\\gemel\\Desktop\\Federico\\Progetto Finale\\Wanderlust - FrontEnd\\Wanderlust_FrontEnd\\src\\app\\components\\post-management\\post-management.component.ts","C:\\Users\\gemel\\Desktop\\Federico\\Progetto Finale\\Wanderlust - FrontEnd\\Wanderlust_FrontEnd\\src\\app\\components\\post-management\\post-management.component.html"],"sourcesContent":["import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { throwError } from 'rxjs';\nimport { Categoria } from 'src/app/model/categoria/categoria';\nimport { Immagine } from 'src/app/model/immagine/immagine';\nimport { Post } from 'src/app/model/post/post';\nimport { Utente } from 'src/app/model/utente/utente';\nimport { CategoriaService } from 'src/app/services/categoria-Service/categoria.service';\nimport { ImmagineService } from 'src/app/services/immagine-Service/immagine.service';\nimport { PostService } from 'src/app/services/post-Service/post.service';\nimport { UtenteService } from 'src/app/services/utente-Service/utente.service';\nimport { format } from 'date-fns';\n\n@Component({\n  selector: 'app-post-management',\n  templateUrl: './post-management.component.html',\n  styleUrls: ['./post-management.component.css']\n})\nexport class PostManagementComponent implements OnInit{  \n  utente: Utente = new Utente();\n  listaPost: Post[] = [];\n  listaPostBackup: Post[] = [];\n  categorie?: Categoria[] = [];\n\n  currentPage: number = 1;\n\n  constructor(private route: ActivatedRoute, private service: PostService, private serviceUtente:UtenteService,\n    private router: Router, private serviceCategoria: CategoriaService) {}\n\n  ngOnInit(): void {\n    this.service.getAllPosts()\n    .subscribe({\n      next: (response: Post[]) => {\n        this.listaPost = response;\n        this.listaPostBackup = response;\n\n        this.serviceCategoria.getAllCategorie().subscribe({\n          next: data => {\n            data.sort((a, b) => a.nome_categoria!.localeCompare(b.nome_categoria!)); //ordine alfabetico categorie\n            this.categorie = data;\n          },\n          error: error => console.log(error)\n        })\n      },\n      error: (error: HttpErrorResponse) => {\n        alert(error.message)\n      }          \n    });      \n  }\n\n  goBack() {\n    window.history.back();\n  }\n\n  noPost: boolean = false;\n\n  ricercaPostPerTitolo(key: string): void {\n    console.log(key);\n    const results: Post[] = [];\n    for (const post of this.listaPost) {\n      if (post.titolo!.toLowerCase().indexOf(key.toLowerCase()) !== -1) {\n        results.push(post);\n      }\n    }\n    //aggiorniamo i post visibili sulla pagina\n    this.listaPost = results;\n    //se non c'è alcuna ricerca effettuata o il risultato è nullo ridammi tutti i post\n    if (!key) {\n      this.noPost = false;\n      this.listaPost = this.listaPostBackup;\n    }\n\n    if (results.length === 0 && key) {\n      this.noPost = true;\n    }\n  }\n\n  eliminazionePost(id_post?: number){\n    if (id_post) {\n      this.service.deletePostById(id_post)\n      .subscribe({\n        next: () => {\n          console.log('Post eliminato con successo.');\n          this.router.navigate(['/','mieiarticoli']).then\n              (() => window.location.reload());\n          \n        },\n        error: error => console.log(error)\n      });\n    }\n  }\n\n\n  //soluzione migliore per evitare un'altra chiamata al backend\n\n  // Creiamo una mappa che associa ad ogni postId un booleano\n  postMenuStatus: { [postId: number]: boolean } = {};\n\n  toggleMenuPost(postId: number) {\n    if (this.postMenuStatus[postId] === undefined) { //se non c'è corrispondenza nella mappa allora inserisce il valore\n        this.postMenuStatus[postId] = false;\n    }\n    this.postMenuStatus[postId] = !this.postMenuStatus[postId]; //se invece è presente un valore, deve cambiarlo\n  }\n\n}\n","<section id=\"wrapper\">\n\n  <header class=\"page-header\">\n    \n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"0 0 512 512\" style=\"font-size: x-large; cursor: pointer;\" (click)=\"goBack()\">\n      <path d=\"M48 256a208 208 0 1 1 416 0A208 208 0 1 1 48 256zm464 0A256 256 0 1 0 0 256a256 256 0 1 0 512 0zM217.4 376.9c4.2 4.5 10.1 7.1 16.3 7.1c12.3 0 22.3-10 22.3-22.3V304h96c17.7 0 32-14.3 32-32V240c0-17.7-14.3-32-32-32H256V150.3c0-12.3-10-22.3-22.3-22.3c-6.2 0-12.1 2.6-16.3 7.1L117.5 242.2c-3.5 3.8-5.5 8.7-5.5 13.8s2 10.1 5.5 13.8l99.9 107.1z\"/>\n    </svg>\n    \n    <h1 class=\"h1 page-title\">\n      <span>Articoli Pubblicati</span>\n    </h1>\n        \n  </header>\n\n    <!-- Parte centrale Post -->\n  <div class=\"filter-posts-container\">\n\n    <div class=\"posts-column\">\n      \n      <!-- Messaggio Nessun Post trovato -->\n      <div *ngIf=\"noPost\" class=\"col-lg-12 col-md-12 col-xl-12\" style=\"width: auto; padding-left: 40px; padding-right: 40px;\">\n        <div class=\"alert alert-info\" role=\"alert\">\n          <h4 class=\"alert-heading\">NESSUN ARTICOLO TROVATO!</h4>\n          <p>No Posts were found.</p>\n        </div>\n      </div>\n\n      <!-- tramite la angular class indichiamo che la classe cambia nel momento in cui no-posts diventa true\n      e noPost diventa true quando non ci sono posts da mostrare. -->\n      <div class=\"container\" [ngClass]=\"{'no-posts': noPost}\">\n        <div class=\"row\">\n          <!-- paginate: Questa è la pipe di paginazione fornita dal modulo ngx-pagination. Una pipe è una funzione\n            che può essere utilizzata per trasformare i dati prima di visualizzarli. La pipe paginate gestisce la\n            suddivisione dei dati in pagine in base ai parametri specificati. L'oggetto che passiamo alla pipe è tra le {} -->\n          <div class=\"col-12 col-md-4\" *ngFor=\"let post of (listaPost | paginate: { itemsPerPage: 9, currentPage: currentPage })!\">\n\n            <div class=\"menu-post\">\n              <input class=\"toggle-check\" id=\"checkbox-post-{{post.id_post}}\" type=\"checkbox\" (click)=\"toggleMenuPost(post.id_post!)\">\n                  <label class=\"toggle-post\" for=\"checkbox-post-{{post.id_post}}\">\n                      <div id=\"bar1\" class=\"bars\"></div>\n                      <div id=\"bar2\" class=\"bars\"></div>\n                      <div id=\"bar3\" class=\"bars\"></div>\n                  </label>\n          </div>\n\n          <div class=\"container-button\" *ngIf=\"postMenuStatus[post.id_post!]\">\n\n              <!-- Edit -->\n              <button class=\"btn-update\" (click)=\"aggiornamentoPost(post)\">\n                  <svg class=\"icon-update\" fill=\"none\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <g stroke=\"black\" stroke-linecap=\"round\" stroke-width=\"1.5\">\n                          <path d=\"m20 20h-16\"></path>\n                          <path clip-rule=\"evenodd\" d=\"m14.5858 4.41422c.781-.78105 2.0474-.78105 2.8284 0 .7811.78105.7811 2.04738 0 2.82843l-8.28322 8.28325-3.03046.202.20203-3.0304z\" id=\"Fill\"></path>\n                      </g>\n                  </svg>\n              </button>\n\n              <!-- Delete -->\n              <button class=\"btn-delete\" (click)=\"eliminazionePost(post?.id_post)\">\n                  <svg viewBox=\"0 0 15 17.5\" height=\"17.5\" width=\"15\" xmlns=\"http://www.w3.org/2000/svg\" class=\"icon-delete\">\n                      <path transform=\"translate(-2.5 -1.25)\" d=\"M15,18.75H5A1.251,1.251,0,0,1,3.75,17.5V5H2.5V3.75h15V5H16.25V17.5A1.251,1.251,0,0,1,15,18.75ZM5,5V17.5H15V5Zm7.5,10H11.25V7.5H12.5V15ZM8.75,15H7.5V7.5H8.75V15ZM12.5,2.5h-5V1.25h5V2.5Z\" id=\"Fill\"></path>\n                  </svg>\n              </button>\n\n          </div>\n          \n            <app-singolo-post [post]=\"post\"></app-singolo-post>\n\n          </div>\n\n        </div>\n      </div>\n\n    </div>\n\n  </div>\n\n  <footer class=\"pagination-container\">\n    <pagination-controls (pageChange)=\"currentPage = $event\"></pagination-controls>\n  </footer>\n\n</section>\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}