{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Utente } from 'src/app/model/utente/utente';\nexport let InfoUtenteComponent = class InfoUtenteComponent {\n  constructor(route, service, router) {\n    this.route = route;\n    this.service = service;\n    this.router = router;\n    this.utente = new Utente();\n    this.id = 0;\n    this.showPassword = false;\n    this.showNewPassword = false;\n    this.showMessage = false;\n    this.showErrorMessage = false;\n    this.showSecondErrorMessage = false;\n  }\n  ngOnInit() {\n    this.showInfoUtente();\n  }\n  showInfoUtente() {\n    this.id = this.route.snapshot.params['id'];\n    this.service.getUtenteById(this.id).subscribe({\n      next: data => {\n        console.log(data);\n        this.utente = data;\n      },\n      error: error => console.log(error)\n    });\n  }\n  togglePasswordVisibility() {\n    this.showPassword = !this.showPassword;\n  }\n  toggleNewPasswordVisibility() {\n    this.showNewPassword = !this.showNewPassword;\n  }\n  updateUser() {\n    if (this.utente.newPassword) {\n      this.utente.password = this.utente.newPassword;\n    }\n    this.service.updateUtente(this.utente).subscribe({\n      next: data => {\n        console.log(data);\n        this.utente = data;\n        this.showUpdateMessage();\n      },\n      error: err => {\n        switch (err.status) {\n          case 409:\n            this.showErrorEmailMessage();\n            break;\n          case 406:\n            this.showErrorPasswordMessage();\n        }\n      }\n    });\n  }\n  showUpdateMessage() {\n    this.showMessage = true;\n    // Il messaggio scompare dopo 5 secondi\n    setTimeout(() => {\n      this.showMessage = false;\n    }, 5000);\n  }\n  showErrorPasswordMessage() {\n    this.showErrorMessage = true;\n    // Il messaggio scompare dopo 5 secondi\n    setTimeout(() => {\n      this.showErrorMessage = false;\n    }, 5000);\n  }\n  showErrorEmailMessage() {\n    this.showSecondErrorMessage = true;\n    // Il messaggio scompare dopo 5 secondi\n    setTimeout(() => {\n      this.showSecondErrorMessage = false;\n    }, 5000);\n  }\n  deleteAccount() {\n    this.service.deleteUtenteById(this.id).subscribe({\n      next: data => {\n        console.log(\"Utente eliminato con successo\");\n        sessionStorage.removeItem('utenteloggato');\n        this.router.navigate(['/', 'homepage']).then(() => window.location.reload());\n      },\n      error: err => console.log(err)\n    });\n  }\n};\nInfoUtenteComponent = __decorate([Component({\n  selector: 'app-info-utente',\n  templateUrl: './info-utente.component.html',\n  styleUrls: ['./info-utente.component.css']\n})], InfoUtenteComponent);","map":{"version":3,"names":["Component","Utente","InfoUtenteComponent","constructor","route","service","router","utente","id","showPassword","showNewPassword","showMessage","showErrorMessage","showSecondErrorMessage","ngOnInit","showInfoUtente","snapshot","params","getUtenteById","subscribe","next","data","console","log","error","togglePasswordVisibility","toggleNewPasswordVisibility","updateUser","newPassword","password","updateUtente","showUpdateMessage","err","status","showErrorEmailMessage","showErrorPasswordMessage","setTimeout","deleteAccount","deleteUtenteById","sessionStorage","removeItem","navigate","then","window","location","reload","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\gemel\\Desktop\\Federico\\Progetto Finale\\Wanderlust - FrontEnd\\Wanderlust_FrontEnd\\src\\app\\components\\info-utente\\info-utente.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Utente } from 'src/app/model/utente/utente';\nimport { UtenteService } from 'src/app/services/utente-Service/utente.service';\n\n@Component({\n  selector: 'app-info-utente',\n  templateUrl: './info-utente.component.html',\n  styleUrls: ['./info-utente.component.css']\n})\nexport class InfoUtenteComponent implements OnInit{\n  utente: Utente = new Utente();\n  private id = 0;\n\n  constructor(private route: ActivatedRoute, private service: UtenteService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.showInfoUtente();    \n  }\n\n  private showInfoUtente(){\n    this.id = this.route.snapshot.params['id'];    \n    this.service\n      .getUtenteById(this.id)\n      .subscribe(\n        {\n          next: data => {\n                  console.log(data);\n                  this.utente = data;\n                },\n          error: error => console.log(error)\n        }\n      );\n  }\n\n  showPassword: boolean = false;\n\n  togglePasswordVisibility() {\n    this.showPassword = !this.showPassword;\n  }\n\n  showNewPassword: boolean = false;\n\n  toggleNewPasswordVisibility() {\n    this.showNewPassword = !this.showNewPassword;\n  }\n\n  \n  updateUser(){\n    if(this.utente.newPassword){\n      this.utente.password=this.utente.newPassword;\n    }\n    \n    this.service\n      .updateUtente(this.utente)\n      .subscribe(\n        {\n          next: data => {\n                  console.log(data);\n                  this.utente = data;\n                  this.showUpdateMessage();\n                },\n          error: (err) => {\n            switch(err.status){\n              case 409:\n                this.showErrorEmailMessage();\n                break;\n              case 406:\n                this.showErrorPasswordMessage();\n            }\n          }\n        }\n      );\n  }\n\n  showMessage: boolean = false;\n\n  showUpdateMessage(): void {\n    this.showMessage = true;\n    // Il messaggio scompare dopo 5 secondi\n    setTimeout(() => {\n      this.showMessage = false;\n    }, 5000);\n  }\n\n  showErrorMessage: boolean = false;\n\n  showErrorPasswordMessage(){\n    this.showErrorMessage = true;\n      // Il messaggio scompare dopo 5 secondi\n      setTimeout(() => {\n        this.showErrorMessage = false;\n      }, 5000);\n  }\n\n  showSecondErrorMessage: boolean = false;\n\n  showErrorEmailMessage(){\n    this.showSecondErrorMessage = true;\n      // Il messaggio scompare dopo 5 secondi\n      setTimeout(() => {\n        this.showSecondErrorMessage = false;\n      }, 5000);\n  }\n\n  deleteAccount(){\n    this.service.deleteUtenteById(this.id)\n    .subscribe({\n      next: data => {\n        console.log(\"Utente eliminato con successo\");\n        sessionStorage.removeItem('utenteloggato');\n        this.router.navigate(['/','homepage']).then\n              (() => window.location.reload());\n      },\n      error: (err) => console.log(err)\n    });\n    \n  }\n\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}