{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Post } from 'src/app/model/post/post';\nexport let IMieiPostComponent = class IMieiPostComponent {\n  constructor(route, service, servicePost, serviceCategoria, router, http) {\n    this.route = route;\n    this.service = service;\n    this.servicePost = servicePost;\n    this.serviceCategoria = serviceCategoria;\n    this.router = router;\n    this.http = http;\n    this.newPost = new Post();\n    this.categorie = [];\n    this.imageUrls = [];\n    this.activateAddPost = false;\n    this.activateUpdatePost = false;\n  }\n  ngOnInit() {\n    this.utente = JSON.parse(sessionStorage.getItem('utenteloggato'));\n    this.service.getArticoliUtenteById(this.utente.id_utente).subscribe({\n      next: data => {\n        console.log(data);\n        this.utente = data;\n      },\n      error: error => console.log(error)\n    });\n    this.serviceCategoria.getAllCategorie().subscribe({\n      next: data => {\n        console.log(data);\n        this.categorie = data;\n      },\n      error: error => console.log(error)\n    });\n  }\n  aggiuntaPost() {\n    this.activateAddPost = true;\n  }\n  aggiornamentoPost(postVecchio) {\n    this.currentPost = postVecchio;\n    this.activateUpdatePost = true;\n  }\n  eliminazionePost(id_post) {\n    if (id_post) {\n      this.servicePost.deletePostById(id_post).subscribe({\n        next: () => {\n          console.log('Post eliminato con successo.');\n          this.router.navigate(['/', 'mieiarticoli']).then(() => window.location.reload());\n        },\n        error: error => console.log(error)\n      });\n    }\n  }\n  onSubmit() {}\n  // Funzione chiamata quando l'utente seleziona i file\n  onFileSelected(event) {\n    const files = event.target.files;\n    if (files) {\n      // Itera sui file selezionati\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        // Esegui l'upload del file sul server\n        this.uploadFile(file);\n      }\n    }\n  }\n  // Funzione per l'upload del file sul server\n  uploadFile(file) {\n    const formData = new FormData();\n    formData.append('file', file);\n    // Effettua la chiamata HTTP per l'upload del file\n    this.http.post('URL_DEL_TUO_ENDPOINT_DI_UPLOAD', formData).subscribe(response => {\n      // Salva l'URL dell'immagine nella variabile imageUrls\n      this.imageUrls.push(response.imageUrl);\n    }, error => {\n      console.log(error);\n    });\n  }\n};\nIMieiPostComponent = __decorate([Component({\n  selector: 'app-i-miei-post',\n  templateUrl: './i-miei-post.component.html',\n  styleUrls: ['./i-miei-post.component.css']\n})], IMieiPostComponent);","map":{"version":3,"names":["Component","Post","IMieiPostComponent","constructor","route","service","servicePost","serviceCategoria","router","http","newPost","categorie","imageUrls","activateAddPost","activateUpdatePost","ngOnInit","utente","JSON","parse","sessionStorage","getItem","getArticoliUtenteById","id_utente","subscribe","next","data","console","log","error","getAllCategorie","aggiuntaPost","aggiornamentoPost","postVecchio","currentPost","eliminazionePost","id_post","deletePostById","navigate","then","window","location","reload","onSubmit","onFileSelected","event","files","target","i","length","file","uploadFile","formData","FormData","append","post","response","push","imageUrl","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\gemel\\Desktop\\Federico\\Progetto Finale\\Wanderlust - FrontEnd\\Wanderlust_FrontEnd\\src\\app\\components\\i-miei-post\\i-miei-post.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Categoria } from 'src/app/model/categoria/categoria';\nimport { Post } from 'src/app/model/post/post';\nimport { Utente } from 'src/app/model/utente/utente';\nimport { CategoriaService } from 'src/app/services/categoria-Service/categoria.service';\nimport { PostService } from 'src/app/services/post-Service/post.service';\nimport { UtenteService } from 'src/app/services/utente-Service/utente.service';\n\n@Component({\n  selector: 'app-i-miei-post',\n  templateUrl: './i-miei-post.component.html',\n  styleUrls: ['./i-miei-post.component.css']\n})\nexport class IMieiPostComponent implements OnInit{\n  utente?: Utente;\n  currentPost?: Post;\n  newPost: Post = new Post();\n  categorie?: Categoria[] = [];\n  imageUrls: string[] = [];\n  imageUrl?: string;\n  \n  constructor(private route: ActivatedRoute, private service: UtenteService, private servicePost: PostService, \n    private serviceCategoria: CategoriaService, private router: Router, private http: HttpClient) {}\n\n  ngOnInit(): void {\n    this.utente = JSON.parse(sessionStorage.getItem('utenteloggato')!)\n    this.service\n      .getArticoliUtenteById(this.utente!.id_utente!)\n      .subscribe(\n        {\n          next: data => {\n                  console.log(data);\n                  this.utente = data;\n                },\n          error: error => console.log(error)\n        }\n      );\n\n      this.serviceCategoria.getAllCategorie().subscribe({\n        next: data => {\n          console.log(data);\n          this.categorie = data;\n        },\n        error: error => console.log(error)\n      })    \n  }\n\n  activateAddPost: boolean = false;\n\n  aggiuntaPost(){    \n    this.activateAddPost = true;\n  }  \n\n  activateUpdatePost: boolean = false;\n\n  aggiornamentoPost(postVecchio: Post){\n    this.currentPost = postVecchio;\n    this.activateUpdatePost = true;\n  }\n\n  eliminazionePost(id_post?: number){\n    if (id_post) {\n      this.servicePost.deletePostById(id_post).subscribe({\n        next: () => {\n          console.log('Post eliminato con successo.');\n          this.router.navigate(['/','mieiarticoli']).then\n              (() => window.location.reload());\n          \n        },\n        error: error => console.log(error)\n      });\n    }\n  }\n\n  onSubmit(){\n\n  }\n\n  // Funzione chiamata quando l'utente seleziona i file\nonFileSelected(event: any) {\n  const files = event.target.files;\n  if (files) {\n    // Itera sui file selezionati\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      // Esegui l'upload del file sul server\n      this.uploadFile(file);\n    }\n  }\n}\n\n// Funzione per l'upload del file sul server\nuploadFile(file: File) {\n  const formData = new FormData();\n  formData.append('file', file);\n\n  // Effettua la chiamata HTTP per l'upload del file\n  this.http.post<any>('URL_DEL_TUO_ENDPOINT_DI_UPLOAD', formData).subscribe(\n    (response) => {\n      // Salva l'URL dell'immagine nella variabile imageUrls\n      this.imageUrls.push(response.imageUrl);\n    },\n    (error) => {\n      console.log(error);\n    }\n  );\n}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}