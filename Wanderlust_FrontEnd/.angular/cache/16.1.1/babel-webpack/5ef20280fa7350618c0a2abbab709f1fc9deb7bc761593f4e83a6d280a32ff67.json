{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Post } from 'src/app/model/post/post';\nexport let IMieiPostComponent = class IMieiPostComponent {\n  constructor(route, service, servicePost, serviceCategoria, router, http) {\n    this.route = route;\n    this.service = service;\n    this.servicePost = servicePost;\n    this.serviceCategoria = serviceCategoria;\n    this.router = router;\n    this.http = http;\n    this.newPost = new Post();\n    this.categorie = [];\n    this.activateAddPost = false;\n    this.activateUpdatePost = false;\n  }\n  ngOnInit() {\n    this.utente = JSON.parse(sessionStorage.getItem('utenteloggato'));\n    this.service.getArticoliUtenteById(this.utente.id_utente).subscribe({\n      next: data => {\n        console.log(data);\n        this.utente = data;\n      },\n      error: error => console.log(error)\n    });\n    this.serviceCategoria.getAllCategorie().subscribe({\n      next: data => {\n        console.log(data);\n        this.categorie = data;\n      },\n      error: error => console.log(error)\n    });\n  }\n  aggiuntaPost() {\n    this.activateAddPost = true;\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth' // Scorrimento fluido\n    });\n  }\n\n  aggiornamentoPost(postVecchio) {\n    this.currentPost = postVecchio;\n    this.activateUpdatePost = true;\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth' // Scorrimento fluido\n    });\n  }\n\n  eliminazionePost(id_post) {\n    if (id_post) {\n      this.servicePost.deletePostById(id_post).subscribe({\n        next: () => {\n          console.log('Post eliminato con successo.');\n          this.router.navigate(['/', 'mieiarticoli']).then(() => window.location.reload());\n        },\n        error: error => console.log(error)\n      });\n    }\n  }\n  onSubmitAdd() {\n    console.log(this.newPost);\n    this.savePost();\n  }\n  savePost() {\n    this.newPost.data = this.getCurrentDate();\n    this.servicePost.addPost(this.newPost, this.utente.id_utente).subscribe({\n      next: data => {\n        console.log(data);\n        this.newPost = new Post();\n        //aggiunta della categoria al nuovo post\n        this.servicePost.addCategoriePostById(data.id_post, this.selectedCategory).subscribe({\n          next: postData => {\n            console.log('Categoria assegnata al post:', postData);\n            this.router.navigate(['/', 'mieiarticoli']).then(() => window.location.reload());\n          },\n          error: err => console.log(err)\n        });\n      },\n      error: err => console.log(err)\n    });\n  }\n  getCurrentDate() {\n    return new Date();\n  }\n  onSubmitUpdate() {\n    console.log(this.currentPost);\n    this.aggiornaPost();\n  }\n  aggiornaPost() {\n    this.servicePost.updatePost(this.currentPost, this.utente.id_utente).subscribe({\n      next: data => {\n        console.log(data);\n        this.currentPost = data;\n        //aggiornamento della categoria al post\n        this.servicePost.addCategoriePostById(data.id_post, this.updatedCategoria).subscribe({\n          next: postData => {\n            console.log('Categoria aggiornata al post:', postData);\n            this.router.navigate(['/', 'mieiarticoli']).then(() => window.location.reload());\n          },\n          error: err => console.log(err)\n        });\n        this.router.navigate(['/', 'mieiarticoli']).then(() => window.location.reload());\n      },\n      error: err => console.log(err)\n    });\n  }\n  closePopUp() {\n    this.activateUpdatePost = false;\n    this.activateAddPost = false;\n  }\n};\nIMieiPostComponent = __decorate([Component({\n  selector: 'app-i-miei-post',\n  templateUrl: './i-miei-post.component.html',\n  styleUrls: ['./i-miei-post.component.css']\n})], IMieiPostComponent);","map":{"version":3,"names":["Component","Post","IMieiPostComponent","constructor","route","service","servicePost","serviceCategoria","router","http","newPost","categorie","activateAddPost","activateUpdatePost","ngOnInit","utente","JSON","parse","sessionStorage","getItem","getArticoliUtenteById","id_utente","subscribe","next","data","console","log","error","getAllCategorie","aggiuntaPost","window","scrollTo","top","behavior","aggiornamentoPost","postVecchio","currentPost","eliminazionePost","id_post","deletePostById","navigate","then","location","reload","onSubmitAdd","savePost","getCurrentDate","addPost","addCategoriePostById","selectedCategory","postData","err","Date","onSubmitUpdate","aggiornaPost","updatePost","updatedCategoria","closePopUp","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\gemel\\Desktop\\Federico\\Progetto Finale\\Wanderlust - FrontEnd\\Wanderlust_FrontEnd\\src\\app\\components\\i-miei-post\\i-miei-post.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Categoria } from 'src/app/model/categoria/categoria';\nimport { Post } from 'src/app/model/post/post';\nimport { Utente } from 'src/app/model/utente/utente';\nimport { CategoriaService } from 'src/app/services/categoria-Service/categoria.service';\nimport { ImmagineService } from 'src/app/services/immagine-Service/immagine.service';\nimport { PostService } from 'src/app/services/post-Service/post.service';\nimport { UtenteService } from 'src/app/services/utente-Service/utente.service';\n\n\n@Component({\n  selector: 'app-i-miei-post',\n  templateUrl: './i-miei-post.component.html',\n  styleUrls: ['./i-miei-post.component.css']\n})\nexport class IMieiPostComponent implements OnInit{\n  utente?: Utente;\n  currentPost?: Post;\n  newPost: Post = new Post();\n  categorie?: Categoria[] = [];\n  \n  constructor(private route: ActivatedRoute, private service: UtenteService, private servicePost: PostService, \n    private serviceCategoria: CategoriaService, private router: Router, private http: HttpClient) {}\n\n  ngOnInit(): void {\n    this.utente = JSON.parse(sessionStorage.getItem('utenteloggato')!)\n    this.service\n      .getArticoliUtenteById(this.utente!.id_utente!)\n      .subscribe(\n        {\n          next: data => {\n                  console.log(data);\n                  this.utente = data;\n                },\n          error: error => console.log(error)\n        }\n      );\n\n      this.serviceCategoria.getAllCategorie().subscribe({\n        next: data => {\n          console.log(data);\n          this.categorie = data;\n        },\n        error: error => console.log(error)\n      })    \n  }\n\n  activateAddPost: boolean = false;\n\n  aggiuntaPost(){    \n    this.activateAddPost = true;\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth' // Scorrimento fluido\n    });\n  }  \n\n  activateUpdatePost: boolean = false;\n\n  aggiornamentoPost(postVecchio: Post){\n    this.currentPost = postVecchio;\n    this.activateUpdatePost = true;\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth' // Scorrimento fluido\n    });\n  }\n\n  eliminazionePost(id_post?: number){\n    if (id_post) {\n      this.servicePost.deletePostById(id_post)\n      .subscribe({\n        next: () => {\n          console.log('Post eliminato con successo.');\n          this.router.navigate(['/','mieiarticoli']).then\n              (() => window.location.reload());\n          \n        },\n        error: error => console.log(error)\n      });\n    }\n  }\n\n  onSubmitAdd(){\n    console.log(this.newPost);\n    this.savePost();\n  }\n\n  selectedCategory!: Categoria;\n\n  savePost(){\n    this.newPost.data = this.getCurrentDate();\n    this.servicePost.addPost(this.newPost, this.utente!.id_utente!)\n          .subscribe({\n            next: (data) => {\n              console.log(data);\n              this.newPost = new Post();\n              \n              //aggiunta della categoria al nuovo post\n              this.servicePost.addCategoriePostById(data.id_post!, this.selectedCategory)\n                .subscribe({\n                  next: (postData) => {\n                    console.log('Categoria assegnata al post:', postData);\n                    this.router.navigate(['/','mieiarticoli']).then\n                    (() => window.location.reload());\n                  },\n                  error: (err) => console.log(err)\n                });\n\n            },\n            error: (err) => console.log(err)\n          });\n  }\n\n  getCurrentDate(): Date {\n    return new Date();\n  }\n\n  onSubmitUpdate(){\n    console.log(this.currentPost);\n    this.aggiornaPost();\n  }\n\n  updatedCategoria!: Categoria;\n\n  aggiornaPost(){\n    this.servicePost.updatePost(this.currentPost!, this.utente!.id_utente!)\n      .subscribe(\n        {\n          next: data => {\n                  console.log(data);\n                  this.currentPost = data;\n\n                  //aggiornamento della categoria al post\n                  this.servicePost.addCategoriePostById(data.id_post!, this.updatedCategoria)\n                  .subscribe({\n                    next: (postData) => {\n                      console.log('Categoria aggiornata al post:', postData);\n                      this.router.navigate(['/','mieiarticoli']).then\n                      (() => window.location.reload());\n                    },\n                    error: (err) => console.log(err)\n                  });\n\n                  this.router.navigate(['/','mieiarticoli']).then\n                  (() => window.location.reload());\n                },\n          error: (err) => console.log(err)\n        }\n      );\n  }\n\n  closePopUp(){\n    this.activateUpdatePost = false;\n    this.activateAddPost = false;\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}