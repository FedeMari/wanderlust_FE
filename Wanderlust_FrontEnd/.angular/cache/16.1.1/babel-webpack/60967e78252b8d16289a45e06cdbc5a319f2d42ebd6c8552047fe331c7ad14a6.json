{"ast":null,"code":"import { Post } from 'src/app/model/post/post';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/post-Service/post.service\";\nimport * as i3 from \"@angular/common\";\nexport class InfoPostComponent {\n  constructor(route, service, router) {\n    this.route = route;\n    this.service = service;\n    this.router = router;\n    this.post = new Post();\n    this.id = 0;\n    this.listaImmagini = [];\n  }\n  ngOnInit() {\n    // snapshot è una proprietà dell'oggetto route che rappresenta uno snapshot dell'attuale stato dell'URL \n    // dell'applicazione in un dato momento. Consente di accedere ai parametri presenti nell'URL.\n    // la stringa di codice assegna il valore del parametro \"id\" presente nell'URL corrente alla \n    // proprietà id dell'oggetto corrente\n    this.id = this.route.snapshot.params['id'];\n    this.service.getAutorePostById(this.id).subscribe({\n      next: response => {\n        this.autore = response;\n        this.service.getImmaginiPostById(this.id).subscribe({\n          next: responseImage => {\n            this.listaImmagini = responseImage.immaginiAssociate;\n            for (let i = 0; i < this.listaImmagini.length; i++) {\n              if (this.immagineURL !== 'null') {\n                //credo qui vada corretto con this.listaImmagini[i]\n                this.immagineURL = this.listaImmagini[i].url;\n                break; // Per assegnare solo la prima immagine non-null\n              }\n            }\n          },\n\n          error: error => console.log(error)\n        });\n      },\n      error: error => console.log(error)\n    });\n    this.showInfoPost();\n  }\n  showInfoPost() {\n    this.service.getPostById(this.id).subscribe({\n      next: data => {\n        console.log(data);\n        this.post = data;\n      },\n      error: error => console.log(error)\n    });\n  }\n  gotoListaPost() {\n    this.router.navigate(['/listapost']);\n  }\n}\nInfoPostComponent.ɵfac = function InfoPostComponent_Factory(t) {\n  return new (t || InfoPostComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.PostService), i0.ɵɵdirectiveInject(i1.Router));\n};\nInfoPostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: InfoPostComponent,\n  selectors: [[\"app-info-post\"]],\n  decls: 11,\n  vars: 6,\n  consts: [[\"id\", \"wrapper\"], [1, \"page-header\", 2, \"padding-top\", \"30px\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"height\", \"1em\", \"viewBox\", \"0 0 512 512\"], [\"d\", \"M48 256a208 208 0 1 1 416 0A208 208 0 1 1 48 256zm464 0A256 256 0 1 0 0 256a256 256 0 1 0 512 0zM217.4 376.9c4.2 4.5 10.1 7.1 16.3 7.1c12.3 0 22.3-10 22.3-22.3V304h96c17.7 0 32-14.3 32-32V240c0-17.7-14.3-32-32-32H256V150.3c0-12.3-10-22.3-22.3-22.3c-6.2 0-12.1 2.6-16.3 7.1L117.5 242.2c-3.5 3.8-5.5 8.7-5.5 13.8s2 10.1 5.5 13.8l99.9 107.1z\"], [1, \"h1\", \"page-title\"], [1, \"p\", \"page-incipit\"], [2, \"font-family\", \"monospace\", \"font-size\", \"smaller\"]],\n  template: function InfoPostComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"header\", 1);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(2, \"svg\", 2);\n      i0.ɵɵelement(3, \"path\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelementStart(4, \"h1\", 4)(5, \"span\");\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"p\", 5)(8, \"span\", 6);\n      i0.ɵɵtext(9);\n      i0.ɵɵpipe(10, \"date\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate(ctx.post == null ? null : ctx.post.titolo);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate2(\"Written by \", ctx.autore, \" - Last Updated \", i0.ɵɵpipeBind2(10, 3, ctx.post == null ? null : ctx.post.data, \"dd MMMM, yyyy\"), \" \");\n    }\n  },\n  dependencies: [i3.DatePipe],\n  styles: [\"#wrapper[_ngcontent-%COMP%] {\\n    position: relative;\\n    min-height: 100vh;\\n    margin: 0 auto; \\n\\n    width: 80%; \\n}\\n\\n.h1[_ngcontent-%COMP%]{\\n    margin-bottom: 1.5rem;\\n    margin-bottom: 1.5rem;\\n    font-weight: 500;\\n    line-height: 1.2;\\n    color: var(--bs-heading-color);\\n    font-size: 3.5rem;\\n    text-align: -webkit-center;\\n    text-transform: capitalize;\\n    font-family: revert;\\n    border-bottom-style: inset;\\n    border-top-style: outset;\\n}\\n\\n.p[_ngcontent-%COMP%]{\\n    text-align: -webkit-center;\\n    text-transform: capitalize;\\n    font-family: revert;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9pbmZvLXBvc3QvaW5mby1wb3N0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsaUJBQWlCO0lBQ2pCLGNBQWMsRUFBRSw0QkFBNEI7SUFDNUMsVUFBVTtBQUNkOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLHFCQUFxQjtJQUNyQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLDhCQUE4QjtJQUM5QixpQkFBaUI7SUFDakIsMEJBQTBCO0lBQzFCLDBCQUEwQjtJQUMxQixtQkFBbUI7SUFDbkIsMEJBQTBCO0lBQzFCLHdCQUF3QjtBQUM1Qjs7QUFFQTtJQUNJLDBCQUEwQjtJQUMxQiwwQkFBMEI7SUFDMUIsbUJBQW1CO0FBQ3ZCIiwic291cmNlc0NvbnRlbnQiOlsiI3dyYXBwZXIge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbWluLWhlaWdodDogMTAwdmg7XHJcbiAgICBtYXJnaW46IDAgYXV0bzsgLyogcGVyIGNlbnRyYXJlIGlsIHdyYXBwZXIgKi9cclxuICAgIHdpZHRoOiA4MCU7IFxyXG59XHJcblxyXG4uaDF7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxLjVyZW07XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxLjVyZW07XHJcbiAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuMjtcclxuICAgIGNvbG9yOiB2YXIoLS1icy1oZWFkaW5nLWNvbG9yKTtcclxuICAgIGZvbnQtc2l6ZTogMy41cmVtO1xyXG4gICAgdGV4dC1hbGlnbjogLXdlYmtpdC1jZW50ZXI7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcclxuICAgIGZvbnQtZmFtaWx5OiByZXZlcnQ7XHJcbiAgICBib3JkZXItYm90dG9tLXN0eWxlOiBpbnNldDtcclxuICAgIGJvcmRlci10b3Atc3R5bGU6IG91dHNldDtcclxufVxyXG5cclxuLnB7XHJcbiAgICB0ZXh0LWFsaWduOiAtd2Via2l0LWNlbnRlcjtcclxuICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xyXG4gICAgZm9udC1mYW1pbHk6IHJldmVydDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["Post","InfoPostComponent","constructor","route","service","router","post","id","listaImmagini","ngOnInit","snapshot","params","getAutorePostById","subscribe","next","response","autore","getImmaginiPostById","responseImage","immaginiAssociate","i","length","immagineURL","url","error","console","log","showInfoPost","getPostById","data","gotoListaPost","navigate","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","PostService","Router","selectors","decls","vars","consts","template","InfoPostComponent_Template","rf","ctx","ɵɵelementStart","ɵɵnamespaceSVG","ɵɵelement","ɵɵelementEnd","ɵɵnamespaceHTML","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate","titolo","ɵɵtextInterpolate2","ɵɵpipeBind2"],"sources":["C:\\Users\\gemel\\Desktop\\Federico\\Progetto Finale\\Wanderlust - FrontEnd\\Wanderlust_FrontEnd\\src\\app\\components\\info-post\\info-post.component.ts","C:\\Users\\gemel\\Desktop\\Federico\\Progetto Finale\\Wanderlust - FrontEnd\\Wanderlust_FrontEnd\\src\\app\\components\\info-post\\info-post.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Immagine } from 'src/app/model/immagine/immagine';\nimport { Post } from 'src/app/model/post/post';\nimport { PostService } from 'src/app/services/post-Service/post.service';\nimport { UtenteService } from 'src/app/services/utente-Service/utente.service';\n\n@Component({\n  selector: 'app-info-post',\n  templateUrl: './info-post.component.html',\n  styleUrls: ['./info-post.component.css']\n})\nexport class InfoPostComponent implements OnInit{\n  post?: Post = new Post();\n  private id = 0;\n\n  autore?: String;\n  listaImmagini: Immagine[] = [];\n  immagineURL?: string;\n\n  constructor(private route: ActivatedRoute, private service: PostService, private router: Router) {}\n\n\n  ngOnInit(): void {\n    // snapshot è una proprietà dell'oggetto route che rappresenta uno snapshot dell'attuale stato dell'URL \n    // dell'applicazione in un dato momento. Consente di accedere ai parametri presenti nell'URL.\n    // la stringa di codice assegna il valore del parametro \"id\" presente nell'URL corrente alla \n    // proprietà id dell'oggetto corrente\n    this.id = this.route.snapshot.params['id'];\n\n    this.service.getAutorePostById(this.id)\n    .subscribe({\n      next: (response) => {\n        this.autore = response;\n\n        this.service.getImmaginiPostById(this.id)\n                .subscribe({\n                  next: (responseImage) => {\n                    this.listaImmagini = responseImage.immaginiAssociate!;\n                    for (let i = 0; i < this.listaImmagini.length; i++) {\n                      if(this.immagineURL !== 'null'){ //credo qui vada corretto con this.listaImmagini[i]\n                        this.immagineURL = this.listaImmagini[i].url;\n                        break; // Per assegnare solo la prima immagine non-null\n                      }\n                    }\n                    \n                  },                  \n                  error: (error) => console.log(error)\n                });\n\n      },\n      error: (error) => console.log(error)\n    });\n\n    this.showInfoPost();\n  }\n\n  showInfoPost(){\n    this.service\n      .getPostById(this.id)\n      .subscribe(\n        {\n          next: data => {\n                  console.log(data);\n                  this.post = data;\n                },\n          error: error => console.log(error)\n        }\n      );\n\n  }\n\n  gotoListaPost() {\n    this.router.navigate(['/listapost']);\n  }\n\n}\n","<section id=\"wrapper\">\n\n    <header class=\"page-header\" style=\"padding-top: 30px;\">        \n        \n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"0 0 512 512\">\n            <path d=\"M48 256a208 208 0 1 1 416 0A208 208 0 1 1 48 256zm464 0A256 256 0 1 0 0 256a256 256 0 1 0 512 0zM217.4 376.9c4.2 4.5 10.1 7.1 16.3 7.1c12.3 0 22.3-10 22.3-22.3V304h96c17.7 0 32-14.3 32-32V240c0-17.7-14.3-32-32-32H256V150.3c0-12.3-10-22.3-22.3-22.3c-6.2 0-12.1 2.6-16.3 7.1L117.5 242.2c-3.5 3.8-5.5 8.7-5.5 13.8s2 10.1 5.5 13.8l99.9 107.1z\"/>\n        </svg>\n\n        <h1 class=\"h1 page-title\">\n          <span>{{post?.titolo}}</span>\n        </h1>\n\n        <p class=\"p page-incipit\">\n            <span style=\"font-family: monospace; font-size: smaller;\">Written by {{autore}} - Last Updated {{post?.data | date: 'dd MMMM, yyyy'}} </span>\n        </p>\n\n    </header>\n\n    \n\n</section>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}