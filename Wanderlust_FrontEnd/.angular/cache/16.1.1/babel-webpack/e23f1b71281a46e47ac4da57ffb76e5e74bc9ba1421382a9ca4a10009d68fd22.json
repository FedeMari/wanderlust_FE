{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/post-Service/post.service\";\nimport * as i3 from \"src/app/services/utente-Service/utente.service\";\nimport * as i4 from \"@angular/common\";\nfunction SingoloPostComponent_img_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 12);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r0.immagineURL, i0.ɵɵsanitizeUrl);\n  }\n}\nexport class SingoloPostComponent {\n  constructor(route, service, serviceUtente, router) {\n    this.route = route;\n    this.service = service;\n    this.serviceUtente = serviceUtente;\n    this.router = router;\n    this.listaImmagini = [];\n  }\n  ngOnInit() {\n    this.service.getAutorePostById(this.post.id_post).subscribe({\n      next: response => {\n        this.autore = response;\n        this.service.getCategoriePostById(this.post.id_post).subscribe({\n          next: responseCategory => {\n            this.categorie = responseCategory;\n            /*  Nel caso di piu categorie\n                \n                const keys = Object.keys(responseCategory);\n                for (let i = 0; i < keys.length; i++) {\n                  const key = keys[i];\n                  this[`categoria${i + 1}`] = responseCategory[key];\n                }\n             *\n             */\n            this.service.getImmaginiPostById(this.post.id_post).subscribe({\n              next: responseImage => {\n                this.listaImmagini = responseImage.immaginiAssociate;\n                for (let i = 0; i < this.listaImmagini.length; i++) {\n                  if (this.immagineURL !== 'null') {\n                    this.immagineURL = this.listaImmagini[i].url;\n                    break; // Per assegnare solo la prima immagine non-null\n                  }\n                }\n              },\n\n              error: error => console.log(error)\n            });\n          },\n          error: error => console.log(error)\n        });\n      },\n      error: error => console.log(error)\n    });\n  }\n}\nSingoloPostComponent.ɵfac = function SingoloPostComponent_Factory(t) {\n  return new (t || SingoloPostComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.PostService), i0.ɵɵdirectiveInject(i3.UtenteService), i0.ɵɵdirectiveInject(i1.Router));\n};\nSingoloPostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SingoloPostComponent,\n  selectors: [[\"app-singolo-post\"]],\n  inputs: {\n    post: \"post\"\n  },\n  decls: 18,\n  vars: 6,\n  consts: [[\"id\", \"contenuto-post\"], [1, \"col\"], [1, \"card\", 2, \"max-width\", \"400px\"], [1, \"row\", \"no-gutters\"], [1, \"col-md-4\"], [\"class\", \"card-img\", \"alt\", \"Image\", 3, \"src\", 4, \"ngIf\"], [1, \"col-md-8\"], [1, \"card-body\"], [1, \"card-data\"], [1, \"card-title\"], [1, \"card-writer\"], [1, \"card-text\"], [\"alt\", \"Image\", 1, \"card-img\", 3, \"src\"]],\n  template: function SingoloPostComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4);\n      i0.ɵɵtemplate(5, SingoloPostComponent_img_5_Template, 1, 1, \"img\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 6)(7, \"div\", 7)(8, \"h6\", 8);\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"h6\", 8);\n      i0.ɵɵtext(11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"h5\", 9);\n      i0.ɵɵtext(13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"h5\", 10);\n      i0.ɵɵtext(15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"p\", 11);\n      i0.ɵɵtext(17);\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.immagineURL);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.post == null ? null : ctx.post.data);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.categorie);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.post == null ? null : ctx.post.titolo);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.autore);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.post == null ? null : ctx.post.contenuto);\n    }\n  },\n  dependencies: [i4.NgIf],\n  styles: [\"#contenuto-post[_ngcontent-%COMP%] {\\n    padding-top: 20px;\\n    padding-bottom: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zaW5nb2xvLXBvc3Qvc2luZ29sby1wb3N0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsb0JBQW9CO0FBQ3hCIiwic291cmNlc0NvbnRlbnQiOlsiI2NvbnRlbnV0by1wb3N0IHtcclxuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDIwcHg7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["i0","ɵɵelement","ɵɵproperty","ctx_r0","immagineURL","ɵɵsanitizeUrl","SingoloPostComponent","constructor","route","service","serviceUtente","router","listaImmagini","ngOnInit","getAutorePostById","post","id_post","subscribe","next","response","autore","getCategoriePostById","responseCategory","categorie","getImmaginiPostById","responseImage","immaginiAssociate","i","length","url","error","console","log","ɵɵdirectiveInject","i1","ActivatedRoute","i2","PostService","i3","UtenteService","Router","selectors","inputs","decls","vars","consts","template","SingoloPostComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtemplate","SingoloPostComponent_img_5_Template","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate","data","titolo","contenuto"],"sources":["C:\\Users\\gemel\\Desktop\\Federico\\Progetto Finale\\Wanderlust - FrontEnd\\Wanderlust_FrontEnd\\src\\app\\components\\singolo-post\\singolo-post.component.ts","C:\\Users\\gemel\\Desktop\\Federico\\Progetto Finale\\Wanderlust - FrontEnd\\Wanderlust_FrontEnd\\src\\app\\components\\singolo-post\\singolo-post.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Immagine } from 'src/app/model/immagine/immagine';\nimport { Post } from 'src/app/model/post/post';\nimport { Utente } from 'src/app/model/utente/utente';\nimport { PostService } from 'src/app/services/post-Service/post.service';\nimport { UtenteService } from 'src/app/services/utente-Service/utente.service';\n\n@Component({\n  selector: 'app-singolo-post',\n  templateUrl: './singolo-post.component.html',\n  styleUrls: ['./singolo-post.component.css']\n})\nexport class SingoloPostComponent implements OnInit{\n  @Input() post?: Post;\n  autore?: String;\n  categorie?: String;\n  listaImmagini: Immagine[] = [];\n  immagineURL?: string;\n\n  constructor(private route: ActivatedRoute, private service: PostService, private serviceUtente: UtenteService , \n    private router: Router) { }\n  \n  ngOnInit(): void {\n    this.service.getAutorePostById(this.post!.id_post!)\n    .subscribe({\n      next: (response) => {\n        this.autore = response;\n\n        this.service.getCategoriePostById(this.post!.id_post!)\n          .subscribe({\n            next: (responseCategory) => {\n              this.categorie = responseCategory;\n              \n              /*  Nel caso di piu categorie\n                  \n                  const keys = Object.keys(responseCategory);\n                  for (let i = 0; i < keys.length; i++) {\n                    const key = keys[i];\n                    this[`categoria${i + 1}`] = responseCategory[key];\n                  }\n               * \n               */\n\n              this.service.getImmaginiPostById(this.post!.id_post!)\n                .subscribe({\n                  next: (responseImage) => {\n                    this.listaImmagini = responseImage.immaginiAssociate!;\n                    for (let i = 0; i < this.listaImmagini.length; i++) {\n                      if(this.immagineURL !== 'null'){\n                        this.immagineURL = this.listaImmagini[i].url;\n                        break; // Per assegnare solo la prima immagine non-null\n                      }\n                    }\n                    \n                  },\n                  error: (error) => console.log(error)\n                });                                                 \n            },\n\n            error: (error) => console.log(error)\n          });\n      },\n\n      error: (error) => console.log(error)\n    });\n  }\n\n}\n","<!-- <div id=\"contenuto-post\"> -->\n  <!-- <div class=\"row row-cols-1 row-cols-md-2 g-4\">  ATTIVALO SOLO SE RIMETTI COME INIZIALMENTE-->\n  \n    <!-- <div class=\"col\">\n      <div class=\"card\">\n\n        <img *ngIf=\"immagineURL\" [src]=\"immagineURL\" class=\"card-img-top\" alt=\"Image\"/>\n  \n        <div class=\"card-header\">\n          <h6 class=\"card-data\">{{post?.data}}</h6>\n          <h6 class=\"card-data\">{{categorie}}</h6>\n          <h5 class=\"card-title\">{{post?.titolo}}</h5>\n          <h5 class=\"card-writer\">{{autore}}</h5>        \n        </div>\n  \n        <div class=\"card-body\">\n          <p class=\"card-text\">{{post?.contenuto}}</p>\n        </div>\n  \n      </div>\n    </div> -->\n    \n  <!-- </div> -->\n<!-- </div> -->\n\n\n<div id=\"contenuto-post\">\n  <div class=\"col\">\n    <div class=\"card\" style=\"max-width: 400px;\">\n      <div class=\"row no-gutters\">\n        <div class=\"col-md-4\">\n          <img *ngIf=\"immagineURL\" [src]=\"immagineURL\" class=\"card-img\" alt=\"Image\" />\n        </div>\n        <div class=\"col-md-8\">\n          <div class=\"card-body\">\n            <h6 class=\"card-data\">{{ post?.data }}</h6>\n            <h6 class=\"card-data\">{{ categorie }}</h6>\n            <h5 class=\"card-title\">{{ post?.titolo }}</h5>\n            <h5 class=\"card-writer\">{{ autore }}</h5>\n            <p class=\"card-text\">{{ post?.contenuto }}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>"],"mappings":";;;;;;;IC+BUA,EAAA,CAAAC,SAAA,cAA4E;;;;IAAnDD,EAAA,CAAAE,UAAA,QAAAC,MAAA,CAAAC,WAAA,EAAAJ,EAAA,CAAAK,aAAA,CAAmB;;;ADlBtD,OAAM,MAAOC,oBAAoB;EAO/BC,YAAoBC,KAAqB,EAAUC,OAAoB,EAAUC,aAA4B,EACnGC,MAAc;IADJ,KAAAH,KAAK,GAALA,KAAK;IAA0B,KAAAC,OAAO,GAAPA,OAAO;IAAuB,KAAAC,aAAa,GAAbA,aAAa;IACpF,KAAAC,MAAM,GAANA,MAAM;IAJhB,KAAAC,aAAa,GAAe,EAAE;EAIF;EAE5BC,QAAQA,CAAA;IACN,IAAI,CAACJ,OAAO,CAACK,iBAAiB,CAAC,IAAI,CAACC,IAAK,CAACC,OAAQ,CAAC,CAClDC,SAAS,CAAC;MACTC,IAAI,EAAGC,QAAQ,IAAI;QACjB,IAAI,CAACC,MAAM,GAAGD,QAAQ;QAEtB,IAAI,CAACV,OAAO,CAACY,oBAAoB,CAAC,IAAI,CAACN,IAAK,CAACC,OAAQ,CAAC,CACnDC,SAAS,CAAC;UACTC,IAAI,EAAGI,gBAAgB,IAAI;YACzB,IAAI,CAACC,SAAS,GAAGD,gBAAgB;YAEjC;;;;;;;;;YAUA,IAAI,CAACb,OAAO,CAACe,mBAAmB,CAAC,IAAI,CAACT,IAAK,CAACC,OAAQ,CAAC,CAClDC,SAAS,CAAC;cACTC,IAAI,EAAGO,aAAa,IAAI;gBACtB,IAAI,CAACb,aAAa,GAAGa,aAAa,CAACC,iBAAkB;gBACrD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACf,aAAa,CAACgB,MAAM,EAAED,CAAC,EAAE,EAAE;kBAClD,IAAG,IAAI,CAACvB,WAAW,KAAK,MAAM,EAAC;oBAC7B,IAAI,CAACA,WAAW,GAAG,IAAI,CAACQ,aAAa,CAACe,CAAC,CAAC,CAACE,GAAG;oBAC5C,MAAM,CAAC;;;cAIb,CAAC;;cACDC,KAAK,EAAGA,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK;aACpC,CAAC;UACN,CAAC;UAEDA,KAAK,EAAGA,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK;SACpC,CAAC;MACN,CAAC;MAEDA,KAAK,EAAGA,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK;KACpC,CAAC;EACJ;;AArDWxB,oBAAoB,C;mBAApBA,oBAAoB,EAAAN,EAAA,CAAAiC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAnC,EAAA,CAAAiC,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAArC,EAAA,CAAAiC,iBAAA,CAAAK,EAAA,CAAAC,aAAA,GAAAvC,EAAA,CAAAiC,iBAAA,CAAAC,EAAA,CAAAM,MAAA;AAAA;AAApBlC,oBAAoB,C;QAApBA,oBAAoB;EAAAmC,SAAA;EAAAC,MAAA;IAAA3B,IAAA;EAAA;EAAA4B,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCajChD,EAAA,CAAAkD,cAAA,aAAyB;MAKflD,EAAA,CAAAmD,UAAA,IAAAC,mCAAA,iBAA4E;MAC9EpD,EAAA,CAAAqD,YAAA,EAAM;MACNrD,EAAA,CAAAkD,cAAA,aAAsB;MAEIlD,EAAA,CAAAsD,MAAA,GAAgB;MAAAtD,EAAA,CAAAqD,YAAA,EAAK;MAC3CrD,EAAA,CAAAkD,cAAA,aAAsB;MAAAlD,EAAA,CAAAsD,MAAA,IAAe;MAAAtD,EAAA,CAAAqD,YAAA,EAAK;MAC1CrD,EAAA,CAAAkD,cAAA,aAAuB;MAAAlD,EAAA,CAAAsD,MAAA,IAAkB;MAAAtD,EAAA,CAAAqD,YAAA,EAAK;MAC9CrD,EAAA,CAAAkD,cAAA,cAAwB;MAAAlD,EAAA,CAAAsD,MAAA,IAAY;MAAAtD,EAAA,CAAAqD,YAAA,EAAK;MACzCrD,EAAA,CAAAkD,cAAA,aAAqB;MAAAlD,EAAA,CAAAsD,MAAA,IAAqB;MAAAtD,EAAA,CAAAqD,YAAA,EAAI;;;MAR1CrD,EAAA,CAAAuD,SAAA,GAAiB;MAAjBvD,EAAA,CAAAE,UAAA,SAAA+C,GAAA,CAAA7C,WAAA,CAAiB;MAICJ,EAAA,CAAAuD,SAAA,GAAgB;MAAhBvD,EAAA,CAAAwD,iBAAA,CAAAP,GAAA,CAAAlC,IAAA,kBAAAkC,GAAA,CAAAlC,IAAA,CAAA0C,IAAA,CAAgB;MAChBzD,EAAA,CAAAuD,SAAA,GAAe;MAAfvD,EAAA,CAAAwD,iBAAA,CAAAP,GAAA,CAAA1B,SAAA,CAAe;MACdvB,EAAA,CAAAuD,SAAA,GAAkB;MAAlBvD,EAAA,CAAAwD,iBAAA,CAAAP,GAAA,CAAAlC,IAAA,kBAAAkC,GAAA,CAAAlC,IAAA,CAAA2C,MAAA,CAAkB;MACjB1D,EAAA,CAAAuD,SAAA,GAAY;MAAZvD,EAAA,CAAAwD,iBAAA,CAAAP,GAAA,CAAA7B,MAAA,CAAY;MACfpB,EAAA,CAAAuD,SAAA,GAAqB;MAArBvD,EAAA,CAAAwD,iBAAA,CAAAP,GAAA,CAAAlC,IAAA,kBAAAkC,GAAA,CAAAlC,IAAA,CAAA4C,SAAA,CAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}