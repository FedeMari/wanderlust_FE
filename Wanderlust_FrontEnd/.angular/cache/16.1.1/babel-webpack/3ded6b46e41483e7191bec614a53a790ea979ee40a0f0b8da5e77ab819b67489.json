{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PostService {\n  // angular dependency injection - di tipo constructor injection\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8080/api/v2';\n  }\n  addPost(post, utenteId) {\n    return this.http.post(`${this.baseUrl}/add/p/${postId}`, post);\n  }\n  getAllPosts() {\n    return this.http.get(`${this.baseUrl}/posts`);\n  }\n  getPostById(postId) {\n    return this.http.get(`${this.baseUrl}/post/${postId}`);\n  }\n  updatePost(post) {\n    return this.http.put(`${this.baseUrl}/update/p`, post);\n  }\n  deletePostById(postId) {\n    return this.http.delete(`${this.baseUrl}/delete/p/${postId}`);\n  }\n}\nPostService.ɵfac = function PostService_Factory(t) {\n  return new (t || PostService)(i0.ɵɵinject(i1.HttpClient));\n};\nPostService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PostService,\n  factory: PostService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["PostService","constructor","http","baseUrl","addPost","post","utenteId","postId","getAllPosts","get","getPostById","updatePost","put","deletePostById","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\gemel\\Desktop\\Federico\\Progetto Finale\\Wanderlust - FrontEnd\\Wanderlust_FrontEnd\\src\\app\\services\\post-Service\\post.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Post } from 'src/app/model/post/post';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  private baseUrl = 'http://localhost:8080/api/v2';\n  \n  // angular dependency injection - di tipo constructor injection\n  constructor(private http: HttpClient) { }\n\n  addPost(post: Post, utenteId: number): Observable<Post> {\n    return this.http.post<Post>(`${this.baseUrl}/add/p/${postId}`, post);\n  }\n\n  public getAllPosts(): Observable<Post[]>{\n    return this.http.get<Post[]>(`${this.baseUrl}/posts`);\n  }\n\n  getPostById(postId: number): Observable<Post>{\n    return this.http.get<Post>(`${this.baseUrl}/post/${postId}`);\n  }\n\n  updatePost(post: Post): Observable<Post> {\n    return this.http.put<Post>(`${this.baseUrl}/update/p`, post);\n  }\n\n  deletePostById(postId: number): Observable<void> {\n    return this.http.delete<void>(`${this.baseUrl}/delete/p/${postId}`);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAItB;EACAC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,OAAO,GAAG,8BAA8B;EAGR;EAExCC,OAAOA,CAACC,IAAU,EAAEC,QAAgB;IAClC,OAAO,IAAI,CAACJ,IAAI,CAACG,IAAI,CAAO,GAAG,IAAI,CAACF,OAAO,UAAUI,MAAM,EAAE,EAAEF,IAAI,CAAC;EACtE;EAEOG,WAAWA,CAAA;IAChB,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAS,GAAG,IAAI,CAACN,OAAO,QAAQ,CAAC;EACvD;EAEAO,WAAWA,CAACH,MAAc;IACxB,OAAO,IAAI,CAACL,IAAI,CAACO,GAAG,CAAO,GAAG,IAAI,CAACN,OAAO,SAASI,MAAM,EAAE,CAAC;EAC9D;EAEAI,UAAUA,CAACN,IAAU;IACnB,OAAO,IAAI,CAACH,IAAI,CAACU,GAAG,CAAO,GAAG,IAAI,CAACT,OAAO,WAAW,EAAEE,IAAI,CAAC;EAC9D;EAEAQ,cAAcA,CAACN,MAAc;IAC3B,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,OAAO,aAAaI,MAAM,EAAE,CAAC;EACrE;;AAzBWP,WAAW,C;mBAAXA,WAAW,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXlB,WAAW,C;SAAXA,WAAW;EAAAmB,OAAA,EAAXnB,WAAW,CAAAoB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}