{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AdminFilterService {\n  constructor(router) {\n    this.router = router;\n  }\n  canActivate(route, state) {\n    //se non ci sta l'oggetto ti ramanda a login\n    if (!sessionStorage.getItem('administrator')) {\n      this.router.navigate(['homepage']);\n    }\n    return true;\n  }\n}\nAdminFilterService.ɵfac = function AdminFilterService_Factory(t) {\n  return new (t || AdminFilterService)(i0.ɵɵinject(i1.Router));\n};\nAdminFilterService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AdminFilterService,\n  factory: AdminFilterService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AdminFilterService","constructor","router","canActivate","route","state","sessionStorage","getItem","navigate","i0","ɵɵinject","i1","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\gemel\\Desktop\\Federico\\Progetto Finale\\Wanderlust - FrontEnd\\Wanderlust_FrontEnd\\src\\app\\utilities\\admin-filter\\admin-filter.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminFilterService {\n\n  constructor(private router: Router) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean>|Promise<boolean>|boolean {\n    //se non ci sta l'oggetto ti ramanda a login\n    if (!sessionStorage.getItem('administrator')) {\n      this.router.navigate(['homepage']);\n    }\n    return true;\n  }\n\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,kBAAkB;EAE7BC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;EAAY;EAEtCC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IAE1B;IACA,IAAI,CAACC,cAAc,CAACC,OAAO,CAAC,eAAe,CAAC,EAAE;MAC5C,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;;IAEpC,OAAO,IAAI;EACb;;AAbWR,kBAAkB,C;mBAAlBA,kBAAkB,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;AAAA;AAAlBZ,kBAAkB,C;SAAlBA,kBAAkB;EAAAa,OAAA,EAAlBb,kBAAkB,CAAAc,IAAA;EAAAC,UAAA,EAFjB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}