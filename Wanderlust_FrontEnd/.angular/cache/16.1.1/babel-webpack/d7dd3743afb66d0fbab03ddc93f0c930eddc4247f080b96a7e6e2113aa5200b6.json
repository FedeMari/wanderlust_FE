{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nexport let SingoloPostComponent = class SingoloPostComponent {\n  constructor(route, service, router) {\n    this.route = route;\n    this.service = service;\n    this.router = router;\n  }\n  ngOnInit() {}\n  aggiuntaPost() {}\n  aggiornamentoPost() {}\n  eliminazionePost(id_post) {\n    if (id_post) {\n      this.service.deletePostById(id_post).subscribe({\n        next: () => {\n          console.log('Post eliminato con successo.');\n          this.reloadData(); // Aggiorna la lista degli utenti dopo l'eliminazione\n        },\n\n        error: error => console.log(error)\n      });\n    }\n  }\n};\n__decorate([Input()], SingoloPostComponent.prototype, \"post\", void 0);\nSingoloPostComponent = __decorate([Component({\n  selector: 'app-singolo-post',\n  templateUrl: './singolo-post.component.html',\n  styleUrls: ['./singolo-post.component.css']\n})], SingoloPostComponent);","map":{"version":3,"names":["Component","Input","SingoloPostComponent","constructor","route","service","router","ngOnInit","aggiuntaPost","aggiornamentoPost","eliminazionePost","id_post","deletePostById","subscribe","next","console","log","reloadData","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\gemel\\Desktop\\Federico\\Progetto Finale\\Wanderlust - FrontEnd\\Wanderlust_FrontEnd\\src\\app\\components\\singolo-post\\singolo-post.component.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Post } from 'src/app/model/post/post';\nimport { UtenteService } from 'src/app/services/utente-Service/utente.service';\n\n@Component({\n  selector: 'app-singolo-post',\n  templateUrl: './singolo-post.component.html',\n  styleUrls: ['./singolo-post.component.css']\n})\nexport class SingoloPostComponent implements OnInit{\n  @Input() post?: Post;\n\n  constructor(private route: ActivatedRoute, private service: , private router: Router) { }\n  \n  ngOnInit(): void {\n  }\n\n  aggiuntaPost(){\n    \n  }  \n\n  aggiornamentoPost(){\n  }\n\n  eliminazionePost(id_post?: number){\n    if (id_post) {\n      this.service.deletePostById(id_post).subscribe({\n        next: () => {\n          console.log('Post eliminato con successo.');\n          this.reloadData(); // Aggiorna la lista degli utenti dopo l'eliminazione\n        },\n        error: error => console.log(error)\n      });\n    }\n\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,QAAgB,eAAe;AAUjD,WAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAG/BC,YAAoBC,KAAqB,EAAUC,OAAQ,EAAWC,MAAc;IAAhE,KAAAF,KAAK,GAALA,KAAK;IAA0B,KAAAC,OAAO,GAAPA,OAAO;IAAY,KAAAC,MAAM,GAANA,MAAM;EAAY;EAExFC,QAAQA,CAAA,GACR;EAEAC,YAAYA,CAAA,GAEZ;EAEAC,iBAAiBA,CAAA,GACjB;EAEAC,gBAAgBA,CAACC,OAAgB;IAC/B,IAAIA,OAAO,EAAE;MACX,IAAI,CAACN,OAAO,CAACO,cAAc,CAACD,OAAO,CAAC,CAACE,SAAS,CAAC;QAC7CC,IAAI,EAAEA,CAAA,KAAK;UACTC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;UAC3C,IAAI,CAACC,UAAU,EAAE,CAAC,CAAC;QACrB,CAAC;;QACDC,KAAK,EAAEA,KAAK,IAAIH,OAAO,CAACC,GAAG,CAACE,KAAK;OAClC,CAAC;;EAGN;CAED;AA3BUC,UAAA,EAARlB,KAAK,EAAE,C,iDAAa;AADVC,oBAAoB,GAAAiB,UAAA,EALhCnB,SAAS,CAAC;EACToB,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACWpB,oBAAoB,CA4BhC"},"metadata":{},"sourceType":"module","externalDependencies":[]}