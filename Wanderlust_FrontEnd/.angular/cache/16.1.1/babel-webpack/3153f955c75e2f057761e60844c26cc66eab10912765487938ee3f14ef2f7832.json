{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Utente } from 'src/app/model/utente/utente';\nexport let LoginUtenteComponent = class LoginUtenteComponent {\n  constructor(service, router) {\n    this.service = service;\n    this.router = router;\n    this.utente = new Utente();\n    this.showLoginForm = true;\n  }\n  ngOnInit() {\n    const video = document.getElementById('background-video');\n    video.play();\n  }\n  onSubmit() {\n    console.log(this.utente);\n    this.accessoUtente();\n  }\n  accessoUtente() {\n    this.service.loginUtente(this.utente).subscribe({\n      next: data => {\n        console.log(data);\n        sessionStorage.setItem('utenteloggato', JSON.stringify(data));\n        this.utente = new Utente();\n        this.router.navigate(['/', 'homepage']).then(() => window.location.reload());\n      },\n      error: error => console.log(error)\n    });\n  }\n  toggleForms() {\n    this.showLoginForm = !this.showLoginForm;\n  }\n};\nLoginUtenteComponent = __decorate([Component({\n  selector: 'app-login-utente',\n  templateUrl: './login-utente.component.html',\n  styleUrls: ['./login-utente.component.css']\n})], LoginUtenteComponent);","map":{"version":3,"names":["Component","Utente","LoginUtenteComponent","constructor","service","router","utente","showLoginForm","ngOnInit","video","document","getElementById","play","onSubmit","console","log","accessoUtente","loginUtente","subscribe","next","data","sessionStorage","setItem","JSON","stringify","navigate","then","window","location","reload","error","toggleForms","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\gemel\\Desktop\\Federico\\Progetto Finale\\Wanderlust - FrontEnd\\Wanderlust_FrontEnd\\src\\app\\components\\login-utente\\login-utente.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Utente } from 'src/app/model/utente/utente';\nimport { UtenteService } from 'src/app/services/utente-Service/utente.service';\n\n@Component({\n  selector: 'app-login-utente',\n  templateUrl: './login-utente.component.html',\n  styleUrls: ['./login-utente.component.css']\n})\nexport class LoginUtenteComponent implements OnInit{\n  utente: Utente = new Utente();\n\n  constructor(private service: UtenteService, private router: Router) { }\n\n  ngOnInit(): void {\n    const video = document.getElementById('background-video') as HTMLVideoElement;\n    video.play();\n  }\n\n  onSubmit() : void {\n    console.log(this.utente);\n    this.accessoUtente();\n  }\n\n  private accessoUtente() {\n      this.service.loginUtente(this.utente)\n          .subscribe({\n            next: data => {\n              console.log(data);\n              sessionStorage.setItem('utenteloggato', JSON.stringify(data))\n              this.utente = new Utente();\n              this.router.navigate(['/','homepage']).then\n              (() => window.location.reload());\n            },\n            error: error => console.log(error)\n          });\n  }\n  \n  showLoginForm: boolean = true;\n\n  toggleForms() {\n    this.showLoginForm = !this.showLoginForm;\n  }\n  \n  //mi serve un metodo per dire che quando la pagina si ricarica con refresh il video deve ripartire\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAASC,MAAM,QAAQ,6BAA6B;AAQ7C,WAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAG/BC,YAAoBC,OAAsB,EAAUC,MAAc;IAA9C,KAAAD,OAAO,GAAPA,OAAO;IAAyB,KAAAC,MAAM,GAANA,MAAM;IAF1D,KAAAC,MAAM,GAAW,IAAIL,MAAM,EAAE;IA4B7B,KAAAM,aAAa,GAAY,IAAI;EA1ByC;EAEtEC,QAAQA,CAAA;IACN,MAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAqB;IAC7EF,KAAK,CAACG,IAAI,EAAE;EACd;EAEAC,QAAQA,CAAA;IACNC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,MAAM,CAAC;IACxB,IAAI,CAACU,aAAa,EAAE;EACtB;EAEQA,aAAaA,CAAA;IACjB,IAAI,CAACZ,OAAO,CAACa,WAAW,CAAC,IAAI,CAACX,MAAM,CAAC,CAChCY,SAAS,CAAC;MACTC,IAAI,EAAEC,IAAI,IAAG;QACXN,OAAO,CAACC,GAAG,CAACK,IAAI,CAAC;QACjBC,cAAc,CAACC,OAAO,CAAC,eAAe,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;QAC7D,IAAI,CAACd,MAAM,GAAG,IAAIL,MAAM,EAAE;QAC1B,IAAI,CAACI,MAAM,CAACoB,QAAQ,CAAC,CAAC,GAAG,EAAC,UAAU,CAAC,CAAC,CAACC,IAAI,CAC1C,MAAMC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE,CAAC;MAClC,CAAC;MACDC,KAAK,EAAEA,KAAK,IAAIhB,OAAO,CAACC,GAAG,CAACe,KAAK;KAClC,CAAC;EACV;EAIAC,WAAWA,CAAA;IACT,IAAI,CAACxB,aAAa,GAAG,CAAC,IAAI,CAACA,aAAa;EAC1C;CAGD;AApCYL,oBAAoB,GAAA8B,UAAA,EALhChC,SAAS,CAAC;EACTiC,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACWjC,oBAAoB,CAoChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}