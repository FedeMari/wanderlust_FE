{"ast":null,"code":"import { forkJoin } from 'rxjs';\nimport { Utente } from 'src/app/model/utente/utente';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/post-Service/post.service\";\nimport * as i3 from \"src/app/services/utente-Service/utente.service\";\nimport * as i4 from \"src/app/services/categoria-Service/categoria.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"ngx-pagination\";\nimport * as i8 from \"../singolo-post/singolo-post.component\";\nfunction ListaPostComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 45);\n    i0.ɵɵlistener(\"click\", function ListaPostComponent_div_23_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.cambioOrdine(ctx_r7.orderBy));\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 46);\n    i0.ɵɵelement(2, \"path\", 47);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ListaPostComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 48);\n    i0.ɵɵlistener(\"click\", function ListaPostComponent_div_24_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.cambioOrdine(ctx_r9.orderBy));\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 46);\n    i0.ɵɵelement(2, \"path\", 49);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ListaPostComponent_ng_container_57_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"option\", 50);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const categoria_r11 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngValue\", categoria_r11.nome_categoria);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(categoria_r11.nome_categoria);\n  }\n}\nfunction ListaPostComponent_div_62_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 51)(1, \"div\", 52)(2, \"h4\", 53);\n    i0.ɵɵtext(3, \"NESSUN ARTICOLO TROVATO!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5, \"No Posts were found.\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction ListaPostComponent_div_65_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 57)(1, \"button\", 58);\n    i0.ɵɵlistener(\"click\", function ListaPostComponent_div_65_div_2_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const post_r12 = i0.ɵɵnextContext().$implicit;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.aggiungiPreferito(post_r12));\n    });\n    i0.ɵɵtext(2, \"Aggiungi ai Preferiti\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ListaPostComponent_div_65_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 54);\n    i0.ɵɵelement(1, \"app-singolo-post\", 55);\n    i0.ɵɵtemplate(2, ListaPostComponent_div_65_div_2_Template, 3, 0, \"div\", 56);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const post_r12 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"post\", post_r12);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.utente);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"no-posts\": a0\n  };\n};\nconst _c1 = function (a1) {\n  return {\n    itemsPerPage: 9,\n    currentPage: a1\n  };\n};\nexport class ListaPostComponent {\n  constructor(route, service, serviceUtente, router, serviceCategoria) {\n    // l'attributo [(ngModel)] sta tentando di legare il valore selezionato nel <select> con la variabile \n    // searchCategoria nella tua componente Angular. Quando si utilizza l'approccio di two-way data binding con \n    // [(ngModel)], l'opzione con disabled selected può non funzionare correttamente per l'opzione predefinita \n    // del select.\n    this.route = route;\n    this.service = service;\n    this.serviceUtente = serviceUtente;\n    this.router = router;\n    this.serviceCategoria = serviceCategoria;\n    this.listaPost = [];\n    this.utente = new Utente();\n    this.listaPostBackup = [];\n    this.categorie = [];\n    this.currentPage = 1;\n    this.noPost = false;\n    this.cresc = false;\n    this.espandiFiltri = false;\n    // Per risolvere il problema, puoi provare a inizializzare la variabile searchCategoria con un valore \n    // predefinito nella componente Angular o nel suo costruttore. In questo modo, il valore corrispondente \n    // sarà selezionato di default nel select.\n    this.searchCategoria = ''; //risolviamo con valore di Default\n  }\n\n  ngOnInit() {\n    this.utente = JSON.parse(sessionStorage.getItem('utenteloggato'));\n    this.service.getAllPosts().subscribe({\n      next: response => {\n        this.listaPost = response;\n        this.listaPostBackup = response;\n        this.serviceCategoria.getAllCategorie().subscribe({\n          next: data => {\n            console.log(data);\n            this.categorie = data;\n          },\n          error: error => console.log(error)\n        });\n      },\n      error: error => {\n        alert(error.message);\n      }\n    });\n  }\n  aggiungiPreferito(post) {\n    this.serviceUtente.addPreferitoUtenteById(post, this.utente.id_utente).subscribe({\n      next: () => {\n        console.log('Post aggiunto ai preferiti con successo.');\n        this.router.navigate(['/', 'listapost']).then(() => window.location.reload());\n      },\n      error: error => console.log(error)\n    });\n  }\n  ricercaPostPerTitolo(key) {\n    console.log(key);\n    const results = [];\n    for (const post of this.listaPost) {\n      if (post.titolo.toLowerCase().indexOf(key.toLowerCase()) !== -1) {\n        results.push(post);\n      }\n    }\n    //aggiorniamo i post visibili sulla pagina\n    this.listaPost = results;\n    //se non c'è alcuna ricerca effettuata o il risultato è nullo ridammi tutti i post\n    if (!key) {\n      this.noPost = false;\n      this.listaPost = this.listaPostBackup;\n    }\n    if (results.length === 0 && key) {\n      this.noPost = true;\n    }\n  }\n  // forkJoin è un operatore di combinazione in RxJS che combina gli ultimi valori emessi da più Observable in \n  // un unico Observable, ma solo quando tutti gli Observable hanno completato. In pratica, attende che tutti gli \n  // Observable passati come argomenti abbiano emesso un valore e siano stati completati prima di restituire i \n  // risultati combinati.\n  // Nel contesto del tuo codice, forkJoin viene utilizzato per affrontare il problema delle chiamate asincrone \n  // sovrapposte all'interno del ciclo for nel metodo ricercaPostPerAutore.\n  // ogni chiamata asincrona a this.service.getAutorePostById otterrà i dati relativi a un post specifico. \n  // Quando tutti i dati saranno stati ottenuti, l'Observable restituito da forkJoin emetterà un array con tutti \n  // i nomi degli autori corrispondenti ai post\n  ricercaPostPerAutore(key) {\n    console.log(key);\n    //risulta necessario posizionarlo prima\n    if (!key) {\n      this.noPost = false;\n      this.listaPost = this.listaPostBackup;\n    }\n    const observables = this.listaPost.map(post => this.service.getAutorePostById(post.id_post));\n    forkJoin(observables).subscribe({\n      next: autori => {\n        //costante di appoggio per creare la lista e travasare il risultato in listaPost\n        const results = [];\n        for (let i = 0; i < autori.length; i++) {\n          const autore = autori[i].trim(); //perchè io nel JSON faccio restituire esplicitamente nome + \" \" + cognome\n          console.log(autore);\n          if (autore.toLowerCase().indexOf(key.toLowerCase()) !== -1) {\n            results.push(this.listaPost[i]);\n          }\n        }\n        this.listaPost = results;\n        if (results.length === 0 && key) {\n          this.noPost = true;\n        }\n      },\n      error: err => console.log(err)\n    });\n  }\n  ricercaPostPerCategoria(key) {\n    console.log(key);\n    const results = [];\n    const observables = this.listaPost.map(post => this.service.getCategoriePostById(post.id_post));\n    forkJoin(observables).subscribe({\n      next: categorie => {\n        for (let i = 0; i < categorie.length; i++) {\n          this.categoryPost = categorie[i];\n          if (this.categoryPost.toLowerCase().indexOf(key.toLowerCase()) !== -1) {\n            results.push(this.listaPost[i]);\n          }\n        }\n        //aggiorniamo i post visibili sulla pagina\n        this.listaPost = results;\n        //se non c'è alcuna ricerca effettuata o il risultato è nullo ridammi tutti i post\n        if (!key) {\n          this.listaPost = this.listaPostBackup;\n        }\n        if (results.length === 0 && key) {\n          this.noPost = true;\n        } else {\n          this.noPost = false;\n        }\n      },\n      error: err => console.log(err)\n    });\n  }\n  ordinamentoPost(tipoOrdinamento) {\n    if (tipoOrdinamento === 'position' && this.cresc === true) {\n      this.listaPost.sort((a, b) => a.id_post - b.id_post);\n    } else if (tipoOrdinamento === 'position' && this.cresc === false) {\n      this.listaPost.sort((a, b) => b.id_post - a.id_post);\n    }\n    if (tipoOrdinamento === 'name' && this.cresc === true) {\n      this.listaPost.sort((a, b) => b.titolo.localeCompare(a.titolo));\n      // confronto lessicografico di stringhe in ordine crescente\n    } else if (tipoOrdinamento === 'name' && this.cresc === false) {\n      this.listaPost.sort((a, b) => a.titolo.localeCompare(b.titolo));\n      // confronto lessicografico di stringhe in ordine decrescente\n    }\n\n    if (tipoOrdinamento === 'date' && this.cresc === false) {\n      this.listaPost.sort((a, b) => {\n        const dateA = new Date(a.data).getTime();\n        const dateB = new Date(b.data).getTime();\n        console.log('Date A:', dateA, 'Date B:', dateB);\n        return dateB - dateA; //prima il piu recente così\n        //Quando si sottrae dateA da dateB, il risultato sarà un valore positivo se la data di dateB è \n        //successiva a dateA. Questo significa che, nell'ordinamento decrescente, i post con la data di \n        //inserimento più recente verranno posizionati prima nella lista.\n      });\n    } else if (tipoOrdinamento === 'date' && this.cresc === true) {\n      this.listaPost.sort((a, b) => {\n        const dateA = new Date(a.data).getTime();\n        const dateB = new Date(b.data).getTime();\n        return dateA - dateB; //prima il piu recente così\n        //Quando si sottrae dateA da dateB, il risultato sarà un valore positivo se la data di dateB è \n        //successiva a dateA. Questo significa che, nell'ordinamento decrescente, i post con la data di \n        //inserimento più recente verranno posizionati prima nella lista.\n      });\n    }\n  }\n\n  cambioOrdine(changeOrder) {\n    if (this.cresc === true) {\n      this.cresc = false;\n    } else if (this.cresc === false) {\n      this.cresc = true;\n    }\n    this.ordinamentoPost(changeOrder);\n  }\n  openFilter() {\n    this.espandiFiltri = true;\n  }\n  closeFilter() {\n    this.espandiFiltri = false;\n  }\n}\nListaPostComponent.ɵfac = function ListaPostComponent_Factory(t) {\n  return new (t || ListaPostComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.PostService), i0.ɵɵdirectiveInject(i3.UtenteService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i4.CategoriaService));\n};\nListaPostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListaPostComponent,\n  selectors: [[\"app-lista-post\"]],\n  decls: 69,\n  vars: 15,\n  consts: [[\"id\", \"wrapper\"], [1, \"page-header\"], [1, \"h1\", \"page-title\"], [1, \"d-flex\", 2, \"align-items\", \"center\", \"padding-bottom\", \"30px\"], [2, \"padding-left\", \"20px\", \"display\", \"flex\", \"align-items\", \"center\"], [1, \"learn-more\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"circle\"], [1, \"icon\", \"arrow\"], [1, \"button-text\"], [1, \"flex-grow-1\"], [1, \"toolbar-sorter\", \"sorter\"], [\"for\", \"sorter\", 1, \"sorter-label\"], [\"id\", \"sorter\", \"data-role\", \"sorter\", \"required\", \"\", 1, \"sorter-options\", 2, \"margin-right\", \"20px\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"value\", \"position\", \"selected\", \"selected\", 1, \"sorter-option\"], [\"value\", \"name\", 1, \"sorter-option\"], [\"value\", \"date\", 1, \"sorter-option\"], [\"class\", \"change-order\", 3, \"click\", 4, \"ngIf\"], [\"style\", \"cursor: pointer; display: contents; padding-right: 20px;\", 3, \"click\", 4, \"ngIf\"], [1, \"filter-posts-container\"], [1, \"filters-column\"], [1, \"close-filter\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"height\", \"1em\", \"viewBox\", \"0 0 512 512\", 2, \"float\", \"right\", \"cursor\", \"pointer\", 3, \"click\"], [\"d\", \"M256 48a208 208 0 1 1 0 416 208 208 0 1 1 0-416zm0 464A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM175 175c-9.4 9.4-9.4 24.6 0 33.9l47 47-47 47c-9.4 9.4-9.4 24.6 0 33.9s24.6 9.4 33.9 0l47-47 47 47c9.4 9.4 24.6 9.4 33.9 0s9.4-24.6 0-33.9l-47-47 47-47c9.4-9.4 9.4-24.6 0-33.9s-24.6-9.4-33.9 0l-47 47-47-47c-9.4-9.4-24.6-9.4-33.9 0z\"], [1, \"containerSearch\"], [1, \"labelSearch\"], [1, \"form\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"key\", \"id\", \"searchTitolo\", \"placeholder\", \"Ricerca per Titolo\", \"required\", \"\", 1, \"input\", 3, \"ngModelChange\"], [\"key\", \"ngModel\"], [1, \"input-border\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"key2\", \"id\", \"searchAutore\", \"placeholder\", \"Ricerca per Autore\", \"required\", \"\", 1, \"input\", 3, \"ngModelChange\"], [\"key2\", \"ngModel\"], [1, \"form-inline\", \"my-2\", \"my-lg-0\", 2, \"display\", \"inline\"], [\"name\", \"subject\", \"aria-label\", \"Subject\", \"required\", \"\", \"id\", \"selectCategoria\", 1, \"form-select\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"\", \"disabled\", \"\", \"selected\", \"\", \"hidden\", \"\"], [\"value\", \"\", \"disabled\", \"\", \"selected\", \"\"], [4, \"ngFor\", \"ngForOf\"], [2, \"padding-top\", \"15px\", \"text-align-last\", \"center\"], [1, \"button-16\", 3, \"click\"], [1, \"posts-column\"], [\"class\", \"col-lg-12 col-md-12 col-xl-12\", 4, \"ngIf\"], [1, \"container\", 3, \"ngClass\"], [1, \"row\"], [\"class\", \"col-12 col-md-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"pagination-container\"], [3, \"pageChange\"], [1, \"change-order\", 3, \"click\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"height\", \"1em\", \"viewBox\", \"0 0 576 512\", 2, \"padding-right\", \"20px\"], [\"d\", \"M151.6 42.4C145.5 35.8 137 32 128 32s-17.5 3.8-23.6 10.4l-88 96c-11.9 13-11.1 33.3 2 45.2s33.3 11.1 45.2-2L96 146.3V448c0 17.7 14.3 32 32 32s32-14.3 32-32V146.3l32.4 35.4c11.9 13 32.2 13.9 45.2 2s13.9-32.2 2-45.2l-88-96zM320 480h32c17.7 0 32-14.3 32-32s-14.3-32-32-32H320c-17.7 0-32 14.3-32 32s14.3 32 32 32zm0-128h96c17.7 0 32-14.3 32-32s-14.3-32-32-32H320c-17.7 0-32 14.3-32 32s14.3 32 32 32zm0-128H480c17.7 0 32-14.3 32-32s-14.3-32-32-32H320c-17.7 0-32 14.3-32 32s14.3 32 32 32zm0-128H544c17.7 0 32-14.3 32-32s-14.3-32-32-32H320c-17.7 0-32 14.3-32 32s14.3 32 32 32z\"], [2, \"cursor\", \"pointer\", \"display\", \"contents\", \"padding-right\", \"20px\", 3, \"click\"], [\"d\", \"M151.6 469.6C145.5 476.2 137 480 128 480s-17.5-3.8-23.6-10.4l-88-96c-11.9-13-11.1-33.3 2-45.2s33.3-11.1 45.2 2L96 365.7V64c0-17.7 14.3-32 32-32s32 14.3 32 32V365.7l32.4-35.4c11.9-13 32.2-13.9 45.2-2s13.9 32.2 2 45.2l-88 96zM320 480c-17.7 0-32-14.3-32-32s14.3-32 32-32h32c17.7 0 32 14.3 32 32s-14.3 32-32 32H320zm0-128c-17.7 0-32-14.3-32-32s14.3-32 32-32h96c17.7 0 32 14.3 32 32s-14.3 32-32 32H320zm0-128c-17.7 0-32-14.3-32-32s14.3-32 32-32H480c17.7 0 32 14.3 32 32s-14.3 32-32 32H320zm0-128c-17.7 0-32-14.3-32-32s14.3-32 32-32H544c17.7 0 32 14.3 32 32s-14.3 32-32 32H320z\"], [3, \"ngValue\"], [1, \"col-lg-12\", \"col-md-12\", \"col-xl-12\"], [\"role\", \"alert\", 1, \"alert\", \"alert-info\"], [1, \"alert-heading\"], [1, \"col-12\", \"col-md-4\"], [3, \"post\"], [\"id\", \"contenuto\", \"style\", \"margin-left: 5px;\", 4, \"ngIf\"], [\"id\", \"contenuto\", 2, \"margin-left\", \"5px\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-success\", 3, \"click\"]],\n  template: function ListaPostComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r17 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"header\", 1)(2, \"h1\", 2)(3, \"span\");\n      i0.ɵɵtext(4, \"I Racconti dei Viaggiatori\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4)(7, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function ListaPostComponent_Template_button_click_7_listener() {\n        return ctx.openFilter();\n      });\n      i0.ɵɵelementStart(8, \"span\", 6);\n      i0.ɵɵelement(9, \"span\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"span\", 8);\n      i0.ɵɵtext(11, \"Search\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(12, \"div\", 9);\n      i0.ɵɵelementStart(13, \"div\", 10)(14, \"label\", 11);\n      i0.ɵɵtext(15, \"Ordina articoli per \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"select\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function ListaPostComponent_Template_select_ngModelChange_16_listener($event) {\n        return ctx.orderBy = $event;\n      })(\"change\", function ListaPostComponent_Template_select_change_16_listener() {\n        return ctx.ordinamentoPost(ctx.orderBy);\n      });\n      i0.ɵɵelementStart(17, \"option\", 13);\n      i0.ɵɵtext(18, \"Posizione\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"option\", 14);\n      i0.ɵɵtext(20, \"Titolo Articolo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"option\", 15);\n      i0.ɵɵtext(22, \"Data Inserimento\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(23, ListaPostComponent_div_23_Template, 3, 0, \"div\", 16);\n      i0.ɵɵtemplate(24, ListaPostComponent_div_24_Template, 3, 0, \"div\", 17);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"div\", 18)(26, \"div\", 19)(27, \"div\", 20);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(28, \"svg\", 21);\n      i0.ɵɵlistener(\"click\", function ListaPostComponent_Template__svg_svg_click_28_listener() {\n        return ctx.closeFilter();\n      });\n      i0.ɵɵelement(29, \"path\", 22);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelementStart(30, \"div\", 23)(31, \"div\", 24)(32, \"strong\");\n      i0.ɵɵtext(33, \" Titolo \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(34, \"div\", 25)(35, \"input\", 26, 27);\n      i0.ɵɵlistener(\"ngModelChange\", function ListaPostComponent_Template_input_ngModelChange_35_listener() {\n        i0.ɵɵrestoreView(_r17);\n        const _r2 = i0.ɵɵreference(36);\n        return i0.ɵɵresetView(ctx.ricercaPostPerTitolo(_r2.value));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(37, \"span\", 28);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(38, \"div\", 23)(39, \"div\", 24)(40, \"strong\");\n      i0.ɵɵtext(41, \" Autore \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(42, \"div\", 25)(43, \"input\", 29, 30);\n      i0.ɵɵlistener(\"ngModelChange\", function ListaPostComponent_Template_input_ngModelChange_43_listener() {\n        i0.ɵɵrestoreView(_r17);\n        const _r3 = i0.ɵɵreference(44);\n        return i0.ɵɵresetView(ctx.ricercaPostPerAutore(_r3.value));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(45, \"span\", 28);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(46, \"div\", 23)(47, \"div\", 24)(48, \"strong\");\n      i0.ɵɵtext(49, \" Categoria \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(50, \"div\")(51, \"form\", 31)(52, \"select\", 32);\n      i0.ɵɵlistener(\"ngModelChange\", function ListaPostComponent_Template_select_ngModelChange_52_listener($event) {\n        return ctx.searchCategoria = $event;\n      });\n      i0.ɵɵelementStart(53, \"option\", 33);\n      i0.ɵɵtext(54, \"Ricerca per Categoria\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(55, \"option\", 34);\n      i0.ɵɵtext(56, \"Seleziona una Categoria\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(57, ListaPostComponent_ng_container_57_Template, 3, 2, \"ng-container\", 35);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(58, \"div\", 36)(59, \"button\", 37);\n      i0.ɵɵlistener(\"click\", function ListaPostComponent_Template_button_click_59_listener() {\n        return ctx.ricercaPostPerCategoria(ctx.searchCategoria);\n      });\n      i0.ɵɵtext(60, \"Cerca\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(61, \"div\", 38);\n      i0.ɵɵtemplate(62, ListaPostComponent_div_62_Template, 6, 0, \"div\", 39);\n      i0.ɵɵelementStart(63, \"div\", 40)(64, \"div\", 41);\n      i0.ɵɵtemplate(65, ListaPostComponent_div_65_Template, 3, 2, \"div\", 42);\n      i0.ɵɵpipe(66, \"paginate\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(67, \"footer\", 43)(68, \"pagination-controls\", 44);\n      i0.ɵɵlistener(\"pageChange\", function ListaPostComponent_Template_pagination_controls_pageChange_68_listener($event) {\n        return ctx.currentPage = $event;\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngModel\", ctx.orderBy);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", !ctx.cresc);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.cresc);\n      i0.ɵɵadvance(28);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchCategoria);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.categorie);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.noPost);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, ctx.noPost));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(66, 8, ctx.listaPost, i0.ɵɵpureFunction1(13, _c1, ctx.currentPage)));\n    }\n  },\n  dependencies: [i5.NgClass, i5.NgForOf, i5.NgIf, i6.ɵNgNoValidate, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i6.DefaultValueAccessor, i6.SelectControlValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.RequiredValidator, i6.NgModel, i6.NgForm, i7.PaginationControlsComponent, i8.SingoloPostComponent, i7.PaginatePipe],\n  styles: [\"#wrapper[_ngcontent-%COMP%] {\\n    position: relative;\\n    min-height: 100vh;\\n}\\n\\n#contenuto[_ngcontent-%COMP%] {\\n    padding-bottom: 50px;\\n}\\n\\n.no-posts[_ngcontent-%COMP%] {\\n    height: 100vh;\\n  }\\n\\n.pagination-container[_ngcontent-%COMP%]{\\n    text-align: -webkit-center;    \\n}\\n\\n.h1[_ngcontent-%COMP%]{\\n    margin-top: 18px;\\n    margin-bottom: 2.5rem;\\n    font-weight: 500;\\n    line-height: 1.2;\\n    color: var(--bs-heading-color);\\n    font-size: 3.5rem;\\n    text-align: -webkit-center;\\n    text-transform: capitalize;\\n    font-family: monospace;\\n}\\n\\n#searchTitolo[_ngcontent-%COMP%]{\\n    width: 100%;\\n}\\n\\n#searchAutore[_ngcontent-%COMP%]{\\n    width: 100%;\\n}\\n\\n#searchCategoria[_ngcontent-%COMP%]{\\n    width: 100%;\\n}\\n\\n\\n.button-16[_ngcontent-%COMP%] {\\n  background-color: #f8f9fa;\\n  border: 1px solid #f8f9fa;\\n  border-radius: 4px;\\n  color: #3c4043;\\n  cursor: pointer;\\n  font-family: arial,sans-serif;\\n  font-size: 14px;\\n  height: 36px;\\n  line-height: 27px;\\n  min-width: 54px;\\n  padding: 0 16px;\\n  text-align: center;\\n  user-select: none;\\n  -webkit-user-select: none;\\n  touch-action: manipulation;\\n  white-space: pre;\\n}\\n\\n.button-16[_ngcontent-%COMP%]:hover {\\n  border-color: #dadce0;\\n  box-shadow: rgba(0, 0, 0, .1) 0 1px 1px;\\n  color: #202124;\\n}\\n\\n.button-16[_ngcontent-%COMP%]:focus {\\n  border-color: #4285f4;\\n  outline: none;\\n}\\n\\n\\n\\n\\n.filter-posts-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: flex-start; \\n\\n}\\n\\n.filters-column[_ngcontent-%COMP%] {\\n  flex: 0.4; \\n\\n  padding: 10px; \\n\\n  border-right: 1px solid #ccc; \\n\\n}\\n\\n.posts-column[_ngcontent-%COMP%] {\\n  flex: 2; \\n\\n}\\n\\n\\n\\nbutton.learn-more[_ngcontent-%COMP%] {\\n  width: 10rem;\\n  position: relative;\\n  display: inline-block;\\n  cursor: pointer;\\n  border: 0;\\n  vertical-align: middle;\\n  text-decoration: none;\\n  background: transparent;\\n  font-size: inherit;\\n  font-family: ui-monospace;\\n}\\n \\nbutton.learn-more[_ngcontent-%COMP%]   .circle[_ngcontent-%COMP%] {\\n  transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);\\n  position: relative;\\n  display: block;\\n  margin: 0;\\n  width: 2rem;\\n  height: 2rem;\\n  background: #282936;\\n  border-radius: 1.625rem;\\n}\\n \\nbutton.learn-more[_ngcontent-%COMP%]   .circle[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%] {\\n  transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  margin: auto;\\n  background: #fff;\\n}\\n \\nbutton.learn-more[_ngcontent-%COMP%]   .circle[_ngcontent-%COMP%]   .icon.arrow[_ngcontent-%COMP%] {\\n  transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);\\n  left: 0.125rem;\\n  width: 1.125rem;\\n  height: 0.125rem;\\n  background: none;\\n}\\n \\nbutton.learn-more[_ngcontent-%COMP%]   .circle[_ngcontent-%COMP%]   .icon.arrow[_ngcontent-%COMP%]::before {\\n  position: absolute;\\n  content: \\\"\\\";\\n  top: -0.29rem;\\n  right: 0.0625rem;\\n  width: 0.625rem;\\n  height: 0.625rem;\\n  border-top: 0.125rem solid #fff;\\n  border-right: 0.125rem solid #fff;\\n  transform: rotate(45deg);\\n}\\n \\nbutton.learn-more[_ngcontent-%COMP%]   .button-text[_ngcontent-%COMP%] {\\n  transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  padding: 0.75rem 0;\\n  color: black;\\n  line-height: 0.6;\\n  text-align: center;\\n  font-size: larger;\\n\\n}\\n \\nbutton.learn-more[_ngcontent-%COMP%]:hover   .circle[_ngcontent-%COMP%] {\\n  width: 80%;\\n}\\n \\nbutton.learn-more[_ngcontent-%COMP%]:hover   .circle[_ngcontent-%COMP%]   .icon.arrow[_ngcontent-%COMP%] {\\n  background: #fff;\\n  transform: translate(1rem, 0);\\n  \\n}\\n \\nbutton.learn-more[_ngcontent-%COMP%]:hover   .button-text[_ngcontent-%COMP%] {\\n  color: #fff;  \\n  text-decoration: underline;\\n  \\n}\\n\\n\\n\\n\\n.sorter-label[_ngcontent-%COMP%]{\\n  font-family: ui-monospace; \\n  padding-right: 20px; \\n  font-size: larger;\\n}\\n\\n.sorter-option[_ngcontent-%COMP%]{\\n  font-family: ui-monospace;   \\n  font-size: medium;\\n}\\n\\n\\n\\n.sorter-options[_ngcontent-%COMP%] {\\n  border: 1;\\n  width: 14em;\\n  height: 1.5em;\\n  padding: 0 4em 0 0.5em;\\n  color: rgb(0, 0, 0);\\n  border-radius: 0.25em;\\n  box-shadow: 0 0 1em 0 rgba(0, 0, 0, 0.2);\\n  cursor: pointer;\\n}\\n\\n.change-order[_ngcontent-%COMP%]{\\n  cursor: pointer; \\n  display: contents;\\n}\\n\\n.close-filter[_ngcontent-%COMP%]{\\n  padding-bottom: 20px;\\n}\\n\\n.containerSearch[_ngcontent-%COMP%]{\\n  border-bottom: double;\\n  padding-bottom: 15px;\\n  padding-top: 15px;\\n}\\n\\n.labelSearch[_ngcontent-%COMP%]{\\n  padding-bottom: 15px;\\n}\\n\\n\\n\\n\\n.form[_ngcontent-%COMP%] {\\n  --width-of-input: 200px;\\n  --border-height: 1px;\\n  --border-before-color: rgba(221, 221, 221, 0.39);\\n  --border-after-color: #5891ff;\\n  --input-hovered-color: #4985e01f;\\n  position: relative;\\n}\\n\\n\\n\\n.input[_ngcontent-%COMP%] {\\n  color: #000000;\\n  font-size: 0.9rem;\\n  background-color: whitesmoke;\\n  width: 100%;\\n  box-sizing: border-box;\\n  padding-inline: 0.5em;\\n  padding-block: 0.7em;\\n  border: none;\\n  border-bottom: var(--border-height) solid var(--border-before-color);\\n}\\n\\n\\n\\n.input-border[_ngcontent-%COMP%] {\\n  position: absolute;\\n  background: var(--border-after-color);\\n  width: 0%;\\n  height: 2px;\\n  bottom: 0;\\n  left: 0;\\n  transition: 0.3s;\\n}\\n\\n\\n\\ninput[_ngcontent-%COMP%]:hover {\\n  background: var(--input-hovered-color);\\n}\\n \\ninput[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n}\\n\\ninput[_ngcontent-%COMP%]:valid    ~ .input-border[_ngcontent-%COMP%]{\\n   width: 100%;\\n} \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n});","map":{"version":3,"names":["forkJoin","Utente","i0","ɵɵelementStart","ɵɵlistener","ListaPostComponent_div_23_Template_div_click_0_listener","ɵɵrestoreView","_r8","ctx_r7","ɵɵnextContext","ɵɵresetView","cambioOrdine","orderBy","ɵɵnamespaceSVG","ɵɵelement","ɵɵelementEnd","ListaPostComponent_div_24_Template_div_click_0_listener","_r10","ctx_r9","ɵɵelementContainerStart","ɵɵtext","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","categoria_r11","nome_categoria","ɵɵtextInterpolate","ListaPostComponent_div_65_div_2_Template_button_click_1_listener","_r16","post_r12","$implicit","ctx_r14","aggiungiPreferito","ɵɵtemplate","ListaPostComponent_div_65_div_2_Template","ctx_r6","utente","ListaPostComponent","constructor","route","service","serviceUtente","router","serviceCategoria","listaPost","listaPostBackup","categorie","currentPage","noPost","cresc","espandiFiltri","searchCategoria","ngOnInit","JSON","parse","sessionStorage","getItem","getAllPosts","subscribe","next","response","getAllCategorie","data","console","log","error","alert","message","post","addPreferitoUtenteById","id_utente","navigate","then","window","location","reload","ricercaPostPerTitolo","key","results","titolo","toLowerCase","indexOf","push","length","ricercaPostPerAutore","observables","map","getAutorePostById","id_post","autori","i","autore","trim","err","ricercaPostPerCategoria","getCategoriePostById","categoryPost","ordinamentoPost","tipoOrdinamento","sort","a","b","localeCompare","dateA","Date","getTime","dateB","changeOrder","openFilter","closeFilter","ɵɵdirectiveInject","i1","ActivatedRoute","i2","PostService","i3","UtenteService","Router","i4","CategoriaService","selectors","decls","vars","consts","template","ListaPostComponent_Template","rf","ctx","ListaPostComponent_Template_button_click_7_listener","ListaPostComponent_Template_select_ngModelChange_16_listener","$event","ListaPostComponent_Template_select_change_16_listener","ListaPostComponent_div_23_Template","ListaPostComponent_div_24_Template","ListaPostComponent_Template__svg_svg_click_28_listener","ɵɵnamespaceHTML","ListaPostComponent_Template_input_ngModelChange_35_listener","_r17","_r2","ɵɵreference","value","ListaPostComponent_Template_input_ngModelChange_43_listener","_r3","ListaPostComponent_Template_select_ngModelChange_52_listener","ListaPostComponent_ng_container_57_Template","ListaPostComponent_Template_button_click_59_listener","ListaPostComponent_div_62_Template","ListaPostComponent_div_65_Template","ListaPostComponent_Template_pagination_controls_pageChange_68_listener","ɵɵpureFunction1","_c0","ɵɵpipeBind2","_c1"],"sources":["C:\\Users\\gemel\\Desktop\\Federico\\Progetto Finale\\Wanderlust - FrontEnd\\Wanderlust_FrontEnd\\src\\app\\components\\lista-post\\lista-post.component.ts","C:\\Users\\gemel\\Desktop\\Federico\\Progetto Finale\\Wanderlust - FrontEnd\\Wanderlust_FrontEnd\\src\\app\\components\\lista-post\\lista-post.component.html"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { forkJoin } from 'rxjs';\nimport { Categoria } from 'src/app/model/categoria/categoria';\nimport { Post } from 'src/app/model/post/post';\nimport { Utente } from 'src/app/model/utente/utente';\nimport { CategoriaService } from 'src/app/services/categoria-Service/categoria.service';\nimport { PostService } from 'src/app/services/post-Service/post.service';\nimport { UtenteService } from 'src/app/services/utente-Service/utente.service';\n\n@Component({\n  selector: 'app-lista-post',\n  templateUrl: './lista-post.component.html',\n  styleUrls: ['./lista-post.component.css']\n})\n\nexport class ListaPostComponent implements OnInit{\n  listaPost: Post[] = [];\n  utente: Utente = new Utente();\n  listaPostBackup: Post[] = [];\n  categorie?: Categoria[] = [];\n\n  currentPage: number = 1;\n\n  constructor(private route: ActivatedRoute, private service: PostService, private serviceUtente:UtenteService,\n     private router: Router, private serviceCategoria: CategoriaService){\n\n      // l'attributo [(ngModel)] sta tentando di legare il valore selezionato nel <select> con la variabile \n      // searchCategoria nella tua componente Angular. Quando si utilizza l'approccio di two-way data binding con \n      // [(ngModel)], l'opzione con disabled selected può non funzionare correttamente per l'opzione predefinita \n      // del select.\n\n      // Per risolvere il problema, puoi provare a inizializzare la variabile searchCategoria con un valore \n      // predefinito nella componente Angular o nel suo costruttore. In questo modo, il valore corrispondente \n      // sarà selezionato di default nel select.\n      this.searchCategoria = ''; //risolviamo con valore di Default\n\n  }\n  ngOnInit(): void {\n    this.utente = JSON.parse(sessionStorage.getItem('utenteloggato')!);\n    this.service.getAllPosts()\n      .subscribe(\n        {\n          next: (response: Post[]) => {\n            this.listaPost = response;\n            this.listaPostBackup = response;\n\n            this.serviceCategoria.getAllCategorie().subscribe({\n              next: data => {\n                console.log(data);\n                this.categorie = data;\n              },\n              error: error => console.log(error)\n            })\n          },\n          error: (error: HttpErrorResponse) => {\n            alert(error.message)\n          }\n        }\n      );\n  }\n\n  aggiungiPreferito(post: Post){\n    this.serviceUtente.addPreferitoUtenteById(post, this.utente!.id_utente!)\n    .subscribe({\n      next: () => {\n        console.log('Post aggiunto ai preferiti con successo.');\n        this.router.navigate(['/','listapost']).then\n            (() => window.location.reload());        \n      },\n      error: error => console.log(error)\n    });\n  }\n\n  \n  noPost: boolean = false;\n\n  ricercaPostPerTitolo(key: string): void {\n    console.log(key);\n    const results: Post[] = [];\n    for (const post of this.listaPost) {\n      if (post.titolo!.toLowerCase().indexOf(key.toLowerCase()) !== -1) {\n        results.push(post);\n      }\n    }\n    //aggiorniamo i post visibili sulla pagina\n    this.listaPost = results;\n    //se non c'è alcuna ricerca effettuata o il risultato è nullo ridammi tutti i post\n    if (!key) {\n      this.noPost = false;\n      this.listaPost = this.listaPostBackup;\n    }\n\n    if (results.length === 0 && key) {\n      this.noPost = true;\n    }\n  }\n\n  // forkJoin è un operatore di combinazione in RxJS che combina gli ultimi valori emessi da più Observable in \n  // un unico Observable, ma solo quando tutti gli Observable hanno completato. In pratica, attende che tutti gli \n  // Observable passati come argomenti abbiano emesso un valore e siano stati completati prima di restituire i \n  // risultati combinati.\n\n  // Nel contesto del tuo codice, forkJoin viene utilizzato per affrontare il problema delle chiamate asincrone \n  // sovrapposte all'interno del ciclo for nel metodo ricercaPostPerAutore.\n\n  // ogni chiamata asincrona a this.service.getAutorePostById otterrà i dati relativi a un post specifico. \n  // Quando tutti i dati saranno stati ottenuti, l'Observable restituito da forkJoin emetterà un array con tutti \n  // i nomi degli autori corrispondenti ai post\n  \n  ricercaPostPerAutore(key: string): void {\n    console.log(key);\n\n    //risulta necessario posizionarlo prima\n    if (!key) {\n      this.noPost = false;      \n      this.listaPost = this.listaPostBackup;\n    }\n\n    const observables = this.listaPost.map(post => this.service.getAutorePostById(post.id_post!));\n\n    forkJoin(observables).subscribe({\n      next: (autori: string[]) => {\n        //costante di appoggio per creare la lista e travasare il risultato in listaPost\n        const results: Post[] = [];\n        for (let i = 0; i < autori.length; i++) {\n          const autore = autori[i].trim(); //perchè io nel JSON faccio restituire esplicitamente nome + \" \" + cognome\n          console.log(autore);\n  \n          if (autore.toLowerCase().indexOf(key.toLowerCase()) !== -1) {\n            results.push(this.listaPost[i]);\n          }\n        }\n\n        this.listaPost = results;\n        \n        if (results.length === 0  && key) {\n          this.noPost = true;\n        }\n        \n      },\n      error: (err) => console.log(err)\n    });\n  }\n\n  categoryPost?: string;\n  searchCategoria?: string;\n  \n  ricercaPostPerCategoria(key: string): void {\n    console.log(key);\n    const results: Post[] = [];\n    const observables = this.listaPost.map(post => this.service.getCategoriePostById(post.id_post!));\n\n    forkJoin(observables).subscribe({\n      next: (categorie: string[]) => {\n        for (let i = 0; i < categorie.length; i++) {\n          this.categoryPost = categorie[i];\n\n          if (this.categoryPost!.toLowerCase().indexOf(key.toLowerCase()) !== -1) {\n            results.push(this.listaPost[i]);\n          }\n        }\n\n        //aggiorniamo i post visibili sulla pagina\n        this.listaPost = results;\n\n        //se non c'è alcuna ricerca effettuata o il risultato è nullo ridammi tutti i post\n        if (!key) {\n          this.listaPost = this.listaPostBackup;\n        }\n\n        if (results.length === 0 && key) {\n          this.noPost = true;\n        } else {\n          this.noPost = false;\n        }\n      },\n      error: (err) => console.log(err)\n    });\n  }\n\n  orderBy?: string;\n  cresc?: boolean = false;\n\n  ordinamentoPost(tipoOrdinamento: string) {\n    if (tipoOrdinamento === 'position' && this.cresc === true) {\n      this.listaPost.sort((a, b) => a.id_post! - b.id_post!);\n    } else if(tipoOrdinamento === 'position' && this.cresc === false){\n      this.listaPost.sort((a, b) => b.id_post! - a.id_post!);\n    }\n\n    if (tipoOrdinamento === 'name' && this.cresc === true) {\n      this.listaPost.sort((a, b) => b.titolo!.localeCompare(a.titolo!)); \n      // confronto lessicografico di stringhe in ordine crescente\n    } else if (tipoOrdinamento === 'name' && this.cresc === false) {\n      this.listaPost.sort((a, b) => a.titolo!.localeCompare(b.titolo!)); \n      // confronto lessicografico di stringhe in ordine decrescente\n    }\n\n    if (tipoOrdinamento === 'date' && this.cresc === false) {\n      this.listaPost.sort((a, b) => {\n        const dateA = new Date(a.data!).getTime();\n        const dateB = new Date(b.data!).getTime();\n        console.log('Date A:', dateA, 'Date B:', dateB);\n        return dateB - dateA; //prima il piu recente così\n        //Quando si sottrae dateA da dateB, il risultato sarà un valore positivo se la data di dateB è \n        //successiva a dateA. Questo significa che, nell'ordinamento decrescente, i post con la data di \n        //inserimento più recente verranno posizionati prima nella lista.\n      });\n    } else if (tipoOrdinamento === 'date' && this.cresc === true) {\n      this.listaPost.sort((a, b) => {\n        const dateA = new Date(a.data!).getTime();\n        const dateB = new Date(b.data!).getTime();\n        return dateA - dateB; //prima il piu recente così\n        //Quando si sottrae dateA da dateB, il risultato sarà un valore positivo se la data di dateB è \n        //successiva a dateA. Questo significa che, nell'ordinamento decrescente, i post con la data di \n        //inserimento più recente verranno posizionati prima nella lista.\n      });\n    }\n  }\n\n  cambioOrdine(changeOrder: string){\n    if(this.cresc === true){\n      this.cresc = false;\n    } else if(this.cresc === false){\n      this.cresc = true;\n    }\n\n    this.ordinamentoPost(changeOrder);\n  }\n\n  espandiFiltri?: boolean = false;\n\n  openFilter(){\n    this.espandiFiltri = true;\n  }\n\n  closeFilter(){\n    this.espandiFiltri = false;\n  }\n    \n}\n","<section id=\"wrapper\">\n\n  <header class=\"page-header\">\n    <h1 class=\"h1 page-title\">\n      <span>I Racconti dei Viaggiatori</span>\n    </h1>\n  </header>\n\n  <div class=\"d-flex\" style=\"align-items: center; padding-bottom: 30px;\">\n\n    <!-- Filtri a sinistra -->\n    <div style=\"padding-left: 20px; display: flex; align-items: center;\">\n      <button class=\"learn-more\" (click)=\"openFilter()\">\n        <span class=\"circle\" aria-hidden=\"true\">\n        <span class=\"icon arrow\"></span>\n        </span>\n        <span class=\"button-text\">Search</span>\n      </button>\n    </div>\n\n    <!-- Spazio flessibile vuoto per separare i filtri dall'ordinamento -->\n    <div class=\"flex-grow-1\"></div>\n\n    <!-- Ordinamento a destra -->\n    <div class=\"toolbar-sorter sorter\">\n\n        <label class=\"sorter-label\" for=\"sorter\" >Ordina articoli per </label>\n\n        <select id=\"sorter\" data-role=\"sorter\" class=\"sorter-options\" required [(ngModel)]=\"orderBy\" (change)=\"ordinamentoPost(orderBy!)\" style=\"margin-right: 20px;\">\n            <option class=\"sorter-option\" value=\"position\" selected=\"selected\">Posizione</option>\n            <option class=\"sorter-option\" value=\"name\">Titolo Articolo</option>\n            <option class=\"sorter-option\" value=\"date\">Data Inserimento</option>\n        </select>\n\n        <div *ngIf=\"!cresc\" class=\"change-order\" (click)=\"cambioOrdine(orderBy!)\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"0 0 576 512\" style=\"padding-right: 20px;\">\n              <path d=\"M151.6 42.4C145.5 35.8 137 32 128 32s-17.5 3.8-23.6 10.4l-88 96c-11.9 13-11.1 33.3 2 45.2s33.3 11.1 45.2-2L96 146.3V448c0 17.7 14.3 32 32 32s32-14.3 32-32V146.3l32.4 35.4c11.9 13 32.2 13.9 45.2 2s13.9-32.2 2-45.2l-88-96zM320 480h32c17.7 0 32-14.3 32-32s-14.3-32-32-32H320c-17.7 0-32 14.3-32 32s14.3 32 32 32zm0-128h96c17.7 0 32-14.3 32-32s-14.3-32-32-32H320c-17.7 0-32 14.3-32 32s14.3 32 32 32zm0-128H480c17.7 0 32-14.3 32-32s-14.3-32-32-32H320c-17.7 0-32 14.3-32 32s14.3 32 32 32zm0-128H544c17.7 0 32-14.3 32-32s-14.3-32-32-32H320c-17.7 0-32 14.3-32 32s14.3 32 32 32z\"/>\n            </svg>\n        </div>\n\n        <div *ngIf=\"cresc\" style=\"cursor: pointer; display: contents; padding-right: 20px;\" (click)=\"cambioOrdine(orderBy!)\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"0 0 576 512\" style=\"padding-right: 20px;\">\n              <path d=\"M151.6 469.6C145.5 476.2 137 480 128 480s-17.5-3.8-23.6-10.4l-88-96c-11.9-13-11.1-33.3 2-45.2s33.3-11.1 45.2 2L96 365.7V64c0-17.7 14.3-32 32-32s32 14.3 32 32V365.7l32.4-35.4c11.9-13 32.2-13.9 45.2-2s13.9 32.2 2 45.2l-88 96zM320 480c-17.7 0-32-14.3-32-32s14.3-32 32-32h32c17.7 0 32 14.3 32 32s-14.3 32-32 32H320zm0-128c-17.7 0-32-14.3-32-32s14.3-32 32-32h96c17.7 0 32 14.3 32 32s-14.3 32-32 32H320zm0-128c-17.7 0-32-14.3-32-32s14.3-32 32-32H480c17.7 0 32 14.3 32 32s-14.3 32-32 32H320zm0-128c-17.7 0-32-14.3-32-32s14.3-32 32-32H544c17.7 0 32 14.3 32 32s-14.3 32-32 32H320z\"/>\n            </svg>\n        </div>\n\n    </div>\n\n  </div>\n\n  <!-- Parte centrale Filtri/Post -->\n  <div class=\"filter-posts-container\">\n\n    <div class=\"filters-column\" style=\"espandiFiltri\">\n\n      <div class=\"close-filter\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"0 0 512 512\" style=\"float: right; cursor: pointer;\" (click)=\"closeFilter()\">\n          <path d=\"M256 48a208 208 0 1 1 0 416 208 208 0 1 1 0-416zm0 464A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM175 175c-9.4 9.4-9.4 24.6 0 33.9l47 47-47 47c-9.4 9.4-9.4 24.6 0 33.9s24.6 9.4 33.9 0l47-47 47 47c9.4 9.4 24.6 9.4 33.9 0s9.4-24.6 0-33.9l-47-47 47-47c9.4-9.4 9.4-24.6 0-33.9s-24.6-9.4-33.9 0l-47 47-47-47c-9.4-9.4-24.6-9.4-33.9 0z\"/>\n        </svg> \n      </div>\n\n      <div class=\"containerSearch\">\n        \n        <div class=\"labelSearch\">\n          <strong>\n            Titolo\n          </strong>\n        </div>\n\n        <div class=\"form\">\n          <input type=\"text\" (ngModelChange)=\"ricercaPostPerTitolo(key.value)\" #key=\"ngModel\" ngModel\n           name=\"key\" id=\"searchTitolo\" class=\"input\" placeholder=\"Ricerca per Titolo\" required>\n          <span class=\"input-border\"></span>\n        </div>\n\n      </div>\n\n      <div class=\"containerSearch\">\n        \n        <div class=\"labelSearch\">\n          <strong>\n            Autore\n          </strong>\n        </div>\n\n        <div class=\"form\">\n            <input type=\"text\" (ngModelChange)=\"ricercaPostPerAutore(key2.value)\" #key2=\"ngModel\" ngModel\n             name=\"key2\" id=\"searchAutore\" class=\"input\" placeholder=\"Ricerca per Autore\" required>\n             <span class=\"input-border\"></span>\n        </div>\n\n      </div>\n\n      <div class=\"containerSearch\">\n        \n        <div class=\"labelSearch\">\n          <strong>\n            Categoria\n          </strong>\n        </div>\n\n        <div>\n          <form class=\"form-inline my-2 my-lg-0\" style=\"display: inline;\">\n              <select class=\"form-select\" name=\"subject\" aria-label=\"Subject\" required [(ngModel)]=\"searchCategoria\" id=\"selectCategoria\">\n                <option value=\"\" disabled selected hidden>Ricerca per Categoria</option>\n                <option value=\"\" disabled selected >Seleziona una Categoria</option>\n                <ng-container *ngFor=\"let categoria of categorie\">\n                  <option [ngValue]=\"categoria.nome_categoria\">{{categoria!.nome_categoria}}</option>\n                </ng-container>\n              </select>\n          </form>\n        </div>\n\n        <div style=\"padding-top: 15px; text-align-last: center;\">\n          <button class=\"button-16\" (click)=\"ricercaPostPerCategoria(searchCategoria!)\">Cerca</button>\n        </div>\n\n      </div>\n\n    </div>\n\n    <div class=\"posts-column\">\n\n      <!-- Messaggio Nessun Post trovato -->\n      <div *ngIf=\"noPost\" class=\"col-lg-12 col-md-12 col-xl-12\">\n        <div class=\"alert alert-info\" role=\"alert\">\n          <h4 class=\"alert-heading\">NESSUN ARTICOLO TROVATO!</h4>\n          <p>No Posts were found.</p>\n        </div>\n      </div>\n\n      <!-- tramite la angular class indichiamo che la classe cambia nel momento in cui no-posts diventa true\n      e noPost diventa true quando non ci sono posts da mostrare. -->\n      <div class=\"container\" [ngClass]=\"{'no-posts': noPost}\">\n        <div class=\"row\">\n          <!-- paginate: Questa è la pipe di paginazione fornita dal modulo ngx-pagination. Una pipe è una funzione\n            che può essere utilizzata per trasformare i dati prima di visualizzarli. La pipe paginate gestisce la\n            suddivisione dei dati in pagine in base ai parametri specificati. L'oggetto che passiamo alla pipe è tra le {} -->\n          <div class=\"col-12 col-md-4\" *ngFor=\"let post of (listaPost | paginate: { itemsPerPage: 9, currentPage: currentPage })!\">\n\n            <app-singolo-post [post]=\"post\"></app-singolo-post>\n\n            <div *ngIf=\"this.utente\" id=\"contenuto\" style=\"margin-left: 5px;\">\n              <button type=\"button\" class=\"btn btn-outline-success\" (click)=\"aggiungiPreferito(post)\">Aggiungi ai Preferiti</button>\n            </div>\n\n          </div>\n\n        </div>\n      </div>\n\n    </div>\n\n  </div>\n\n  <footer class=\"pagination-container\">\n    <pagination-controls (pageChange)=\"currentPage = $event\"></pagination-controls>\n  </footer>\n\n</section>\n\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}