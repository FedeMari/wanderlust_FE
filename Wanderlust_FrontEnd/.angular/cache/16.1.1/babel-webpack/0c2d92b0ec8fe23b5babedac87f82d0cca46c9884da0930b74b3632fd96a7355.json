{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/post-Service/post.service\";\nimport * as i3 from \"src/app/services/utente-Service/utente.service\";\nimport * as i4 from \"@angular/platform-browser\";\nimport * as i5 from \"@angular/common\";\nfunction SingoloPostComponent_img_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 14);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r0.immagineURL, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction SingoloPostComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.safeFormattedText);\n  }\n}\nfunction SingoloPostComponent_p_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 15);\n    i0.ɵɵtext(1, \"Caricamento del testo...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SingoloPostComponent_a_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 16);\n    i0.ɵɵlistener(\"click\", function SingoloPostComponent_a_18_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.dettagliPost(ctx_r5.post == null ? null : ctx_r5.post.id_post));\n    });\n    i0.ɵɵtext(1, \"Leggi di pi\\u00F9\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SingoloPostComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 18);\n    i0.ɵɵlistener(\"click\", function SingoloPostComponent_div_19_Template__svg_svg_click_1_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.closePopUp());\n    });\n    i0.ɵɵelement(2, \"path\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(3, \"p\", 20);\n    i0.ɵɵtext(4, \"E' necessario effettuare il Login per vedere i dettagli del post.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 20);\n    i0.ɵɵtext(6, \" Clicca \");\n    i0.ɵɵelementStart(7, \"a\", 21);\n    i0.ɵɵtext(8, \"qui\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \" per accedere. \");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class SingoloPostComponent {\n  constructor(route, service, serviceUtente, router, sanitizer) {\n    this.route = route;\n    this.service = service;\n    this.serviceUtente = serviceUtente;\n    this.router = router;\n    this.sanitizer = sanitizer;\n    this.listaImmagini = [];\n    // oggetto categoryColors che serve come mappatura tra le categorie dei post (es. \"Città\", \"Natura\") e le \n    // classi CSS corrispondenti che si desidera applicare \n    this.categoryColors = {\n      'Città': 'badge-primary',\n      'Natura': 'badge-success'\n    };\n    this.isContentExpanded = false;\n    this.isUserLoggedIn = true;\n  }\n  ngOnInit() {\n    this.service.getAutorePostById(this.post.id_post).subscribe({\n      next: response => {\n        this.autore = response;\n        this.setFormattedText(this.post?.contenuto);\n        this.service.getCategoriePostById(this.post.id_post).subscribe({\n          next: responseCategory => {\n            this.categorie = responseCategory;\n            /*  Nel caso di piu categorie\n                \n                const keys = Object.keys(responseCategory);\n                for (let i = 0; i < keys.length; i++) {\n                  const key = keys[i];\n                  this[`categoria${i + 1}`] = responseCategory[key];\n                }\n             *\n             */\n            this.service.getImmaginiPostById(this.post.id_post).subscribe({\n              next: responseImage => {\n                this.listaImmagini = responseImage.immaginiAssociate;\n                for (let i = 0; i < this.listaImmagini.length; i++) {\n                  if (this.immagineURL !== 'null') {\n                    //credo qui vada corretto con this.listaImmagini[i]\n                    this.immagineURL = this.listaImmagini[i].url;\n                    break; // Per assegnare solo la prima immagine non-null\n                  }\n                }\n              },\n\n              error: error => console.log(error)\n            });\n          },\n          error: error => console.log(error)\n        });\n      },\n      error: error => console.log(error)\n    });\n  }\n  // Se categorie è definito e rappresenta una categoria valida, viene restituito un oggetto con due proprietà \n  // booleane: 'card-category-tag' impostata a true (per applicare lo stile di base al tag della categoria) e la \n  // classe CSS corrispondente all'oggetto categoryColors basato sulla categoria corrente. Se categorie non è \n  // definito o non è una stringa, viene restituito un oggetto con la sola proprietà 'card-category-tag' impostata \n  // a true.\n  getCategoryColors() {\n    return this.categorie && typeof this.categorie === 'string' ? {\n      'card-category-tag': true,\n      [this.categoryColors[this.categorie]]: true\n    } : {\n      'card-category-tag': true\n    };\n  }\n  toggleContentExpand() {\n    this.isContentExpanded = !this.isContentExpanded;\n  }\n  dettagliPost(id) {\n    this.utente = JSON.parse(sessionStorage.getItem('utenteloggato'));\n    if (!this.utente) {\n      this.isUserLoggedIn = false;\n      window.scrollTo({\n        top: 200,\n        behavior: 'smooth' // Scorrimento verso l'alto della pagina\n      });\n\n      return;\n    } else {\n      this.router.navigate([\"dettaglipost\", id]);\n    }\n  }\n  closePopUp() {\n    this.isUserLoggedIn = true;\n  }\n  setFormattedText(html) {\n    this.formattedText = html;\n    this.safeFormattedText = this.sanitizer.bypassSecurityTrustHtml(this.formattedText);\n  }\n}\nSingoloPostComponent.ɵfac = function SingoloPostComponent_Factory(t) {\n  return new (t || SingoloPostComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.PostService), i0.ɵɵdirectiveInject(i3.UtenteService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i4.DomSanitizer));\n};\nSingoloPostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SingoloPostComponent,\n  selectors: [[\"app-singolo-post\"]],\n  inputs: {\n    post: \"post\"\n  },\n  decls: 20,\n  vars: 13,\n  consts: [[\"id\", \"contenuto-post\"], [1, \"col\"], [1, \"card\"], [\"class\", \"card-img-top\", \"alt\", \"Image\", 3, \"src\", 4, \"ngIf\"], [1, \"card-header\"], [1, \"card-data\", 2, \"display\", \"inline\", \"margin-right\", \"140px\"], [1, \"card-category-tag\", 3, \"ngClass\"], [1, \"card-category\", 2, \"display\", \"inline\"], [1, \"card-title\", 2, \"margin-top\", \"20px\"], [1, \"card-writer\", 2, \"margin-top\", \"20px\"], [1, \"card-body\"], [\"class\", \"card-text\", 4, \"ngIf\"], [\"class\", \"expand-link\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"login-overlay\", 4, \"ngIf\"], [\"alt\", \"Image\", 1, \"card-img-top\", 3, \"src\"], [1, \"card-text\"], [1, \"expand-link\", 3, \"click\"], [1, \"login-overlay\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"height\", \"1em\", \"viewBox\", \"0 0 512 512\", 2, \"float\", \"right\", \"cursor\", \"pointer\", \"margin-top\", \"400px\", \"padding-left\", \"400px\", \"margin-bottom\", \"20px\", 3, \"click\"], [\"d\", \"M256 48a208 208 0 1 1 0 416 208 208 0 1 1 0-416zm0 464A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM175 175c-9.4 9.4-9.4 24.6 0 33.9l47 47-47 47c-9.4 9.4-9.4 24.6 0 33.9s24.6 9.4 33.9 0l47-47 47 47c9.4 9.4 24.6 9.4 33.9 0s9.4-24.6 0-33.9l-47-47 47-47c9.4-9.4 9.4-24.6 0-33.9s-24.6-9.4-33.9 0l-47 47-47-47c-9.4-9.4-24.6-9.4-33.9 0z\"], [1, \"login-message\"], [\"href\", \"/login\", 2, \"color\", \"blue\"]],\n  template: function SingoloPostComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵtemplate(3, SingoloPostComponent_img_3_Template, 1, 1, \"img\", 3);\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"h6\", 5);\n      i0.ɵɵtext(6);\n      i0.ɵɵpipe(7, \"date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 6)(9, \"h6\", 7);\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"h4\", 8);\n      i0.ɵɵtext(12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"h5\", 9);\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 10);\n      i0.ɵɵtemplate(16, SingoloPostComponent_div_16_Template, 2, 1, \"div\", 11);\n      i0.ɵɵtemplate(17, SingoloPostComponent_p_17_Template, 2, 0, \"p\", 11);\n      i0.ɵɵtemplate(18, SingoloPostComponent_a_18_Template, 2, 0, \"a\", 12);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(19, SingoloPostComponent_div_19_Template, 10, 0, \"div\", 13);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.immagineURL);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(7, 10, ctx.post == null ? null : ctx.post.data, \"dd-MM-yyyy\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", ctx.getCategoryColors());\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.categorie);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.post == null ? null : ctx.post.titolo);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.autore);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.safeFormattedText);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.safeFormattedText);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.post == null ? null : ctx.post.contenuto.length) > 100);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isUserLoggedIn);\n    }\n  },\n  dependencies: [i5.NgClass, i5.NgIf, i5.DatePipe],\n  styles: [\"#contenuto-post[_ngcontent-%COMP%] {\\n    padding-top: 20px;\\n    padding-bottom: 20px;\\n}\\n\\n.card[_ngcontent-%COMP%] {\\n    width: 330px; \\n\\n    height: 530px;\\n}\\n\\n.card-header[_ngcontent-%COMP%]{\\n    height: 150px;\\n    border-bottom-width: medium;\\n}\\n\\n.card-img-top[_ngcontent-%COMP%]{\\n    height: 160px;\\n}\\n\\n.card-writer[_ngcontent-%COMP%]{\\n    margin-top: 20px;\\n    text-align: -webkit-right;\\n    border-bottom-style: solid;\\n    font-size: smaller;\\n    font-family: math;\\n}\\n\\n.card-title[_ngcontent-%COMP%]{\\n    font-variant: petite-caps;\\n    height: 50px;\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n.card-text[_ngcontent-%COMP%] {\\n   overflow: hidden;\\n   text-overflow: ellipsis;\\n}\\n\\n.expand-link[_ngcontent-%COMP%] {\\n    position: absolute;\\n    bottom: 0;\\n    right: 0;\\n    \\n\\n    color: rgb(119, 171, 216);\\n    padding: 2px 5px;\\n    cursor: pointer;\\n    text-decoration: none;\\n}\\n\\n.expand-link[_ngcontent-%COMP%]:hover {\\n    text-decoration: underline;\\n    color: rgb(46, 132, 207);\\n}\\n\\n.badge-primary[_ngcontent-%COMP%] {\\n    background-color: #007bff;\\n    color: #fff;\\n}\\n  \\n.badge-success[_ngcontent-%COMP%] {\\n    background-color: #28a745;\\n    color: #fff;\\n}\\n\\n.card-category-tag[_ngcontent-%COMP%] {\\n    display: inline-block;\\n    border-radius: 8px;\\n    width: 60px;\\n    text-align: center;\\n    height: 24px;\\n}\\n\\n\\n\\n.login-overlay[_ngcontent-%COMP%] {\\n    position: absolute;\\n    top: 115px;\\n    left: 0;\\n    width: 100%;\\n    height: 338.5vh;\\n    background-color: rgba(255, 255, 255, 0.8); \\n\\n    -webkit-backdrop-filter: blur(8px);\\n            backdrop-filter: blur(8px); \\n\\n    z-index: 1000; \\n\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    justify-content: flex-start;\\n    \\n  }\\n  \\n  .login-message[_ngcontent-%COMP%] {\\n    text-align: center;\\n    font-size: 18px;\\n    color: #333;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zaW5nb2xvLXBvc3Qvc2luZ29sby1wb3N0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsb0JBQW9CO0FBQ3hCOztBQUVBO0lBQ0ksWUFBWSxFQUFFLDJDQUEyQztJQUN6RCxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLDJCQUEyQjtBQUMvQjs7QUFFQTtJQUNJLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIseUJBQXlCO0lBQ3pCLDBCQUEwQjtJQUMxQixrQkFBa0I7SUFDbEIsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLFlBQVk7QUFDaEI7O0FBRUE7Ozs7Ozs7Q0FPQztBQUNEO0dBQ0csZ0JBQWdCO0dBQ2hCLHVCQUF1QjtBQUMxQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixTQUFTO0lBQ1QsUUFBUTtJQUNSLDRCQUE0QjtJQUM1Qix5QkFBeUI7SUFDekIsZ0JBQWdCO0lBQ2hCLGVBQWU7SUFDZixxQkFBcUI7QUFDekI7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsd0JBQXdCO0FBQzVCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLFdBQVc7QUFDZjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsWUFBWTtBQUNoQjs7QUFFQSxpREFBaUQ7QUFDakQ7SUFDSSxrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLE9BQU87SUFDUCxXQUFXO0lBQ1gsZUFBZTtJQUNmLDBDQUEwQyxFQUFFLHVCQUF1QjtJQUNuRSxrQ0FBMEI7WUFBMUIsMEJBQTBCLEVBQUUseUJBQXlCO0lBQ3JELGFBQWEsRUFBRSxvQ0FBb0M7SUFDbkQsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIsMkJBQTJCOztFQUU3Qjs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsV0FBVztFQUNiIiwic291cmNlc0NvbnRlbnQiOlsiI2NvbnRlbnV0by1wb3N0IHtcclxuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDIwcHg7XHJcbn1cclxuXHJcbi5jYXJkIHtcclxuICAgIHdpZHRoOiAzMzBweDsgLyogTW9kaWZpY2EgcXVlc3RhIGxhcmdoZXp6YSBhIHR1YSBzY2VsdGEgKi9cclxuICAgIGhlaWdodDogNTMwcHg7XHJcbn1cclxuXHJcbi5jYXJkLWhlYWRlcntcclxuICAgIGhlaWdodDogMTUwcHg7XHJcbiAgICBib3JkZXItYm90dG9tLXdpZHRoOiBtZWRpdW07XHJcbn1cclxuXHJcbi5jYXJkLWltZy10b3B7XHJcbiAgICBoZWlnaHQ6IDE2MHB4O1xyXG59XHJcblxyXG4uY2FyZC13cml0ZXJ7XHJcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gICAgdGV4dC1hbGlnbjogLXdlYmtpdC1yaWdodDtcclxuICAgIGJvcmRlci1ib3R0b20tc3R5bGU6IHNvbGlkO1xyXG4gICAgZm9udC1zaXplOiBzbWFsbGVyO1xyXG4gICAgZm9udC1mYW1pbHk6IG1hdGg7XHJcbn1cclxuXHJcbi5jYXJkLXRpdGxle1xyXG4gICAgZm9udC12YXJpYW50OiBwZXRpdGUtY2FwcztcclxuICAgIGhlaWdodDogNTBweDtcclxufVxyXG5cclxuLyogIG92ZXJmbG93OiBoaWRkZW47OiBJbCB0ZXN0byBjaGUgc3VwZXJhIGxlIGRpbWVuc2lvbmkgZGVsbCdlbGVtZW50byB2ZXJyw4PCoCBuYXNjb3N0byBlIG5vbiBzYXLDg8KgIHZpc2liaWxlIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBhbGwnZXN0ZXJubyBkZWxsYSBjYXJkLiBRdWVzdG8gYXNzaWN1cmEgY2hlIGlsIHRlc3RvIGNoZSB2YSBvbHRyZSBpbCBsaW1pdGUgc3RhYmlsaXRvIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBub24gc2Fyw4PCoCB2aXNpYmlsZSBhbGwndXRlbnRlLlxyXG5cclxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOzogICBTZSBpbCB0ZXN0byBhbGwnaW50ZXJubyBkZWxsJ2VsZW1lbnRvIHN1cGVyYSBpbCBsaW1pdGUgZSB2aWVuZSBuYXNjb3N0bywgdmVycsODwqAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWdnaXVudG8gXCIuLi5cIiBhbGxhIGZpbmUgZGVsIHRlc3RvIHZpc2liaWxlIHBlciBpbmRpY2FyZSBhbGwndXRlbnRlIGNoZSBpbCB0ZXN0b1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIMODwqggdHJvbmNhdG8uICBcclxuKi9cclxuLmNhcmQtdGV4dCB7XHJcbiAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG59XHJcblxyXG4uZXhwYW5kLWxpbmsge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICAvKmNvbG9yOiByZ2IoNDYsIDEzMiwgMjA3KTsqL1xyXG4gICAgY29sb3I6IHJnYigxMTksIDE3MSwgMjE2KTtcclxuICAgIHBhZGRpbmc6IDJweCA1cHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbn1cclxuXHJcbi5leHBhbmQtbGluazpob3ZlciB7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuICAgIGNvbG9yOiByZ2IoNDYsIDEzMiwgMjA3KTtcclxufVxyXG5cclxuLmJhZGdlLXByaW1hcnkge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG59XHJcbiAgXHJcbi5iYWRnZS1zdWNjZXNzIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyOGE3NDU7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxufVxyXG5cclxuLmNhcmQtY2F0ZWdvcnktdGFnIHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICAgIHdpZHRoOiA2MHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgaGVpZ2h0OiAyNHB4O1xyXG59XHJcblxyXG4vKiBTZm9uZG8gc2ZvY2F0byBxdWFuZG8gbCd1dGVudGUgbm9uIMODwqggbG9nZ2F0byAqL1xyXG4ubG9naW4tb3ZlcmxheSB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDExNXB4O1xyXG4gICAgbGVmdDogMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzMzguNXZoO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpOyAvKiBSZWdvbGFyZSBsJ29wYWNpdMODwqAgKi9cclxuICAgIGJhY2tkcm9wLWZpbHRlcjogYmx1cig4cHgpOyAvKiBsaXZlbGxvIGRpIHNmb2NhdHVyYSAqL1xyXG4gICAgei1pbmRleDogMTAwMDsgLyogc2ZvbmRvIHNvcHJhIGdsaSBhbHRyaSBlbGVtZW50aSAqL1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgXHJcbiAgfVxyXG4gIFxyXG4gIC5sb2dpbi1tZXNzYWdlIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgIGNvbG9yOiAjMzMzO1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["i0","ɵɵelement","ɵɵproperty","ctx_r0","immagineURL","ɵɵsanitizeUrl","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r1","safeFormattedText","ɵɵlistener","SingoloPostComponent_a_18_Template_a_click_0_listener","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","dettagliPost","post","id_post","ɵɵnamespaceSVG","SingoloPostComponent_div_19_Template__svg_svg_click_1_listener","_r8","ctx_r7","closePopUp","ɵɵnamespaceHTML","SingoloPostComponent","constructor","route","service","serviceUtente","router","sanitizer","listaImmagini","categoryColors","isContentExpanded","isUserLoggedIn","ngOnInit","getAutorePostById","subscribe","next","response","autore","setFormattedText","contenuto","getCategoriePostById","responseCategory","categorie","getImmaginiPostById","responseImage","immaginiAssociate","i","length","url","error","console","log","getCategoryColors","toggleContentExpand","id","utente","JSON","parse","sessionStorage","getItem","window","scrollTo","top","behavior","navigate","html","formattedText","bypassSecurityTrustHtml","ɵɵdirectiveInject","i1","ActivatedRoute","i2","PostService","i3","UtenteService","Router","i4","DomSanitizer","selectors","inputs","decls","vars","consts","template","SingoloPostComponent_Template","rf","ctx","ɵɵtemplate","SingoloPostComponent_img_3_Template","SingoloPostComponent_div_16_Template","SingoloPostComponent_p_17_Template","SingoloPostComponent_a_18_Template","SingoloPostComponent_div_19_Template","ɵɵpipeBind2","data","titolo"],"sources":["C:\\Users\\gemel\\Desktop\\Federico\\Progetto Finale\\Wanderlust - FrontEnd\\Wanderlust_FrontEnd\\src\\app\\components\\singolo-post\\singolo-post.component.ts","C:\\Users\\gemel\\Desktop\\Federico\\Progetto Finale\\Wanderlust - FrontEnd\\Wanderlust_FrontEnd\\src\\app\\components\\singolo-post\\singolo-post.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Immagine } from 'src/app/model/immagine/immagine';\nimport { Post } from 'src/app/model/post/post';\nimport { Utente } from 'src/app/model/utente/utente';\nimport { PostService } from 'src/app/services/post-Service/post.service';\nimport { UtenteService } from 'src/app/services/utente-Service/utente.service';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-singolo-post',\n  templateUrl: './singolo-post.component.html',\n  styleUrls: ['./singolo-post.component.css']\n})\nexport class SingoloPostComponent implements OnInit{\n  @Input() post?: Post;\n  autore?: String;\n  categorie?: String;\n  listaImmagini: Immagine[] = [];\n  immagineURL?: string;\n  utente?: Utente;\n\n  constructor(private route: ActivatedRoute, private service: PostService, private serviceUtente: UtenteService , \n    private router: Router, private sanitizer: DomSanitizer) { }\n  \n  ngOnInit(): void {\n    this.service.getAutorePostById(this.post!.id_post!)\n    .subscribe({\n      next: (response) => {\n        this.autore = response;\n        this.setFormattedText(this.post?.contenuto!);\n\n        this.service.getCategoriePostById(this.post!.id_post!)\n          .subscribe({\n            next: (responseCategory) => {\n              this.categorie = responseCategory;\n              \n              /*  Nel caso di piu categorie\n                  \n                  const keys = Object.keys(responseCategory);\n                  for (let i = 0; i < keys.length; i++) {\n                    const key = keys[i];\n                    this[`categoria${i + 1}`] = responseCategory[key];\n                  }\n               * \n               */\n\n              this.service.getImmaginiPostById(this.post!.id_post!)\n                .subscribe({\n                  next: (responseImage) => {\n                    this.listaImmagini = responseImage.immaginiAssociate!;\n                    for (let i = 0; i < this.listaImmagini.length; i++) {\n                      if(this.immagineURL !== 'null'){ //credo qui vada corretto con this.listaImmagini[i]\n                        this.immagineURL = this.listaImmagini[i].url;\n                        break; // Per assegnare solo la prima immagine non-null\n                      }\n                    }\n                    \n                  },\n                  error: (error) => console.log(error)\n                });                                                 \n            },\n\n            error: (error) => console.log(error)\n          });\n      },\n\n      error: (error) => console.log(error)\n    });\n  }\n\n  // Se categorie è definito e rappresenta una categoria valida, viene restituito un oggetto con due proprietà \n  // booleane: 'card-category-tag' impostata a true (per applicare lo stile di base al tag della categoria) e la \n  // classe CSS corrispondente all'oggetto categoryColors basato sulla categoria corrente. Se categorie non è \n  // definito o non è una stringa, viene restituito un oggetto con la sola proprietà 'card-category-tag' impostata \n  // a true.\n  getCategoryColors(): any {\n    return this.categorie && typeof this.categorie === 'string'\n      ? { 'card-category-tag': true, [this.categoryColors[this.categorie]]: true }\n      : { 'card-category-tag': true };\n  }\n\n  // oggetto categoryColors che serve come mappatura tra le categorie dei post (es. \"Città\", \"Natura\") e le \n  // classi CSS corrispondenti che si desidera applicare \n  categoryColors: { [key: string]: string } = {\n    'Città': 'badge-primary',\n    'Natura': 'badge-success',\n  };\n\n  isContentExpanded: boolean = false;\n\n  toggleContentExpand(): void {\n    this.isContentExpanded = !this.isContentExpanded;\n  }\n\n  isUserLoggedIn: boolean = true;\n\n  dettagliPost(id?: number){\n    this.utente = JSON.parse(sessionStorage.getItem('utenteloggato')!);\n\n    if(!this.utente){\n      this.isUserLoggedIn = false;\n      window.scrollTo({\n        top: 200,\n        behavior: 'smooth' // Scorrimento verso l'alto della pagina\n      });\n      return;\n    }\n    else{\n      this.router.navigate([\"dettaglipost\", id]);      \n    }    \n  }\n\n  closePopUp(){\n    this.isUserLoggedIn = true;\n  }\n\n  formattedText?: string;\n  safeFormattedText?: SafeHtml;\n\n  setFormattedText(html: string) {\n    this.formattedText = html;\n    this.safeFormattedText = this.sanitizer.bypassSecurityTrustHtml(this.formattedText);\n  }\n\n\n}\n","<div id=\"contenuto-post\">\n  <div class=\"col\">\n    <div class=\"card\" >\n\n      <img *ngIf=\"immagineURL\" [src]=\"immagineURL\" class=\"card-img-top\" alt=\"Image\"/>\n\n      <div class=\"card-header\">\n        <!-- Usiamo il pipes Date di Angular per fornire una formattazione diversa dal tipo passato -->\n        <h6 class=\"card-data\" style=\"display: inline; margin-right: 140px;\">{{post?.data | date: 'dd-MM-yyyy'}}</h6>\n        <div [ngClass]=\"getCategoryColors()\" class=\"card-category-tag\">\n          <h6 class=\"card-category\" style=\"display: inline;\">{{categorie}}</h6>\n        </div>\n        \n        <h4 class=\"card-title\" style=\"margin-top: 20px;\">{{post?.titolo}}</h4>\n        <h5 class=\"card-writer\" style=\"margin-top: 20px;\">{{autore}}</h5>        \n      </div>\n\n      <!-- <div class=\"card-body\"> -->\n        <!-- Indichiamo di mostrare il contenuto del post, ma se il contenuto del testo supera i 100 caratteri \n          di mostrare poi i \"...\" per indicare che il testo continua e al click sulla card aprire la pagina di \n          riferimento del singolo post. mettendo slice il troncamento già avviene ma con le greffe successive\n          possiamo impostare i [...] -->\n        <!-- <p class=\"card-text\">{{post?.contenuto | slice:0:260}}{{post?.contenuto!.length > 100 ? ' [...]' : ''}}</p>\n        <a class=\"expand-link\" *ngIf=\"post?.contenuto!.length > 100\" (click)=\"dettagliPost(post?.id_post)\">Leggi di più</a>\n      </div> -->\n      \n      <div class=\"card-body\">\n        <!-- Assicurati che safeFormattedText sia definito prima di utilizzarlo -->\n        <div class=\"card-text\" *ngIf=\"safeFormattedText\">{{ safeFormattedText }}</div>\n        <!-- Altrimenti, puoi mostrare un messaggio di caricamento o un fallback -->\n        <p class=\"card-text\" *ngIf=\"!safeFormattedText\">Caricamento del testo...</p>\n        <a class=\"expand-link\" *ngIf=\"post?.contenuto!.length > 100\" (click)=\"dettagliPost(post?.id_post)\">Leggi di più</a>\n      </div>\n\n    </div>\n  </div>\n\n  <div class=\"login-overlay\" *ngIf=\"!isUserLoggedIn\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"0 0 512 512\" style=\"float: right; cursor: pointer; margin-top: 400px; padding-left: 400px; margin-bottom: 20px;\" (click)=\"closePopUp()\">\n      <path d=\"M256 48a208 208 0 1 1 0 416 208 208 0 1 1 0-416zm0 464A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM175 175c-9.4 9.4-9.4 24.6 0 33.9l47 47-47 47c-9.4 9.4-9.4 24.6 0 33.9s24.6 9.4 33.9 0l47-47 47 47c9.4 9.4 24.6 9.4 33.9 0s9.4-24.6 0-33.9l-47-47 47-47c9.4-9.4 9.4-24.6 0-33.9s-24.6-9.4-33.9 0l-47 47-47-47c-9.4-9.4-24.6-9.4-33.9 0z\"/>\n    </svg> \n    <p class=\"login-message\">E' necessario effettuare il Login per vedere i dettagli del post.</p>\n    <p class=\"login-message\">\n      Clicca\n      <a href=\"/login\" style=\"color: blue;\">qui</a>      \n      per accedere.\n    </p>    \n  </div>\n\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}