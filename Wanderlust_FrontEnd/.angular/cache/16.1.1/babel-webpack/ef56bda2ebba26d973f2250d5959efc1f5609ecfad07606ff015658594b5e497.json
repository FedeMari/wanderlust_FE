{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/utente-Service/utente.service\";\nexport class SingoloPostComponent {\n  constructor(route, service, router) {\n    this.route = route;\n    this.service = service;\n    this.router = router;\n  }\n  ngOnInit() {}\n  aggiuntaPost() {}\n  aggiornamentoPost() {}\n  eliminazionePost(id_post) {\n    if (id_post) {\n      this.service.deleteUtenteById(id_post).subscribe({\n        next: () => {\n          console.log('Post eliminato con successo.');\n          this.reloadData(); // Aggiorna la lista degli utenti dopo l'eliminazione\n        },\n\n        error: error => console.log(error)\n      });\n    }\n  }\n}\nSingoloPostComponent.ɵfac = function SingoloPostComponent_Factory(t) {\n  return new (t || SingoloPostComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.UtenteService), i0.ɵɵdirectiveInject(i1.Router));\n};\nSingoloPostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SingoloPostComponent,\n  selectors: [[\"app-singolo-post\"]],\n  inputs: {\n    post: \"post\"\n  },\n  decls: 16,\n  vars: 2,\n  consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"], [\"href\", \"#\", 1, \"btn\", \"btn-primary\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-success\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-danger\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-warning\", 3, \"click\"]],\n  template: function SingoloPostComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtext(2, \" Articolo \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"h5\", 3);\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"p\", 4);\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"a\", 5);\n      i0.ɵɵtext(9, \"Go somewhere\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(10, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function SingoloPostComponent_Template_button_click_10_listener() {\n        return ctx.aggiuntaPost();\n      });\n      i0.ɵɵtext(11, \"Aggiungi Post\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function SingoloPostComponent_Template_button_click_12_listener() {\n        return ctx.eliminazionePost(ctx.post == null ? null : ctx.post.id_post);\n      });\n      i0.ɵɵtext(13, \"Rimuovi Post\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function SingoloPostComponent_Template_button_click_14_listener() {\n        return ctx.aggiornamentoPost();\n      });\n      i0.ɵɵtext(15, \"Aggiorna Post\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(ctx.post == null ? null : ctx.post.titolo);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.post == null ? null : ctx.post.contenuto);\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["SingoloPostComponent","constructor","route","service","router","ngOnInit","aggiuntaPost","aggiornamentoPost","eliminazionePost","id_post","deleteUtenteById","subscribe","next","console","log","reloadData","error","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","UtenteService","Router","selectors","inputs","post","decls","vars","consts","template","SingoloPostComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","SingoloPostComponent_Template_button_click_10_listener","SingoloPostComponent_Template_button_click_12_listener","SingoloPostComponent_Template_button_click_14_listener","ɵɵadvance","ɵɵtextInterpolate","titolo","contenuto"],"sources":["C:\\Users\\gemel\\Desktop\\Federico\\Progetto Finale\\Wanderlust - FrontEnd\\Wanderlust_FrontEnd\\src\\app\\components\\singolo-post\\singolo-post.component.ts","C:\\Users\\gemel\\Desktop\\Federico\\Progetto Finale\\Wanderlust - FrontEnd\\Wanderlust_FrontEnd\\src\\app\\components\\singolo-post\\singolo-post.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Post } from 'src/app/model/post/post';\nimport { UtenteService } from 'src/app/services/utente-Service/utente.service';\n\n@Component({\n  selector: 'app-singolo-post',\n  templateUrl: './singolo-post.component.html',\n  styleUrls: ['./singolo-post.component.css']\n})\nexport class SingoloPostComponent implements OnInit{\n  @Input() post?: Post;\n\n  constructor(private route: ActivatedRoute, private service: UtenteService, private router: Router) { }\n  \n  ngOnInit(): void {\n  }\n\n  aggiuntaPost(){\n    \n  }  \n\n  aggiornamentoPost(){\n  }\n\n  eliminazionePost(id_post?: number){\n    if (id_post) {\n      this.service.deleteUtenteById(id_post).subscribe({\n        next: () => {\n          console.log('Post eliminato con successo.');\n          this.reloadData(); // Aggiorna la lista degli utenti dopo l'eliminazione\n        },\n        error: error => console.log(error)\n      });\n    }\n\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n      Articolo\n    </div>\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">{{post?.titolo}}</h5>\n      <p class=\"card-text\">{{post?.contenuto}}</p>\n      <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\n    </div>\n  </div>\n\n  <button type=\"button\" class=\"btn btn-outline-success\" (click)=\"aggiuntaPost()\">Aggiungi Post</button>\n  <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"eliminazionePost(post?.id_post)\">Rimuovi Post</button>\n  <button type=\"button\" class=\"btn btn-outline-warning\" (click)=\"aggiornamentoPost()\">Aggiorna Post</button>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}