{"ast":null,"code":"import { forkJoin } from 'rxjs';\nimport { Utente } from 'src/app/model/utente/utente';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/post-Service/post.service\";\nimport * as i3 from \"src/app/services/utente-Service/utente.service\";\nimport * as i4 from \"src/app/services/categoria-Service/categoria.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"ngx-pagination\";\nimport * as i8 from \"../singolo-post/singolo-post.component\";\nfunction ListaPostComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵlistener(\"click\", function ListaPostComponent_div_23_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.cambioOrdine(ctx_r5.orderBy));\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 26);\n    i0.ɵɵelement(2, \"path\", 27);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ListaPostComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵlistener(\"click\", function ListaPostComponent_div_24_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.cambioOrdine(ctx_r7.orderBy));\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 26);\n    i0.ɵɵelement(2, \"path\", 28);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ListaPostComponent_div_26_ng_container_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"option\", 41);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const categoria_r12 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngValue\", categoria_r12.nome_categoria);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(categoria_r12.nome_categoria);\n  }\n}\nfunction ListaPostComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 29)(1, \"div\", 30)(2, \"form\", 31)(3, \"input\", 32, 33);\n    i0.ɵɵlistener(\"ngModelChange\", function ListaPostComponent_div_26_Template_input_ngModelChange_3_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const _r9 = i0.ɵɵreference(4);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.ricercaPostPerTitolo(_r9.value));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(5, \"div\", 30)(6, \"form\", 31)(7, \"input\", 34, 35);\n    i0.ɵɵlistener(\"ngModelChange\", function ListaPostComponent_div_26_Template_input_ngModelChange_7_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const _r10 = i0.ɵɵreference(8);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.ricercaPostPerAutore(_r10.value));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"div\", 30)(10, \"form\", 31)(11, \"select\", 36);\n    i0.ɵɵlistener(\"ngModelChange\", function ListaPostComponent_div_26_Template_select_ngModelChange_11_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.searchCategoria = $event);\n    });\n    i0.ɵɵelementStart(12, \"option\", 37);\n    i0.ɵɵtext(13, \"Ricerca per Categoria\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"option\", 38);\n    i0.ɵɵtext(15, \"Seleziona una Categoria\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(16, ListaPostComponent_div_26_ng_container_16_Template, 3, 2, \"ng-container\", 39);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(17, \"div\")(18, \"button\", 40);\n    i0.ɵɵlistener(\"click\", function ListaPostComponent_div_26_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.ricercaPostPerCategoria(ctx_r17.searchCategoria));\n    });\n    i0.ɵɵtext(19, \"Cerca\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.searchCategoria);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.categorie);\n  }\n}\nfunction ListaPostComponent_div_30_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 45)(1, \"button\", 46);\n    i0.ɵɵlistener(\"click\", function ListaPostComponent_div_30_div_2_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const post_r18 = i0.ɵɵnextContext().$implicit;\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.aggiungiPreferito(post_r18));\n    });\n    i0.ɵɵtext(2, \"Aggiungi ai Preferiti\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ListaPostComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 42);\n    i0.ɵɵelement(1, \"app-singolo-post\", 43);\n    i0.ɵɵtemplate(2, ListaPostComponent_div_30_div_2_Template, 3, 0, \"div\", 44);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const post_r18 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"post\", post_r18);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.utente);\n  }\n}\nfunction ListaPostComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47)(1, \"div\", 48)(2, \"h4\", 49);\n    i0.ɵɵtext(3, \"NESSUN ARTICOLO TROVATO!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5, \"No Posts were found.\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"no-posts\": a0\n  };\n};\nconst _c1 = function (a1) {\n  return {\n    itemsPerPage: 9,\n    currentPage: a1\n  };\n};\nexport class ListaPostComponent {\n  constructor(route, service, serviceUtente, router, serviceCategoria) {\n    // l'attributo [(ngModel)] sta tentando di legare il valore selezionato nel <select> con la variabile \n    // searchCategoria nella tua componente Angular. Quando si utilizza l'approccio di two-way data binding con \n    // [(ngModel)], l'opzione con disabled selected può non funzionare correttamente per l'opzione predefinita \n    // del select.\n    this.route = route;\n    this.service = service;\n    this.serviceUtente = serviceUtente;\n    this.router = router;\n    this.serviceCategoria = serviceCategoria;\n    this.listaPost = [];\n    this.utente = new Utente();\n    this.listaPostBackup = [];\n    this.categorie = [];\n    this.currentPage = 1;\n    this.noPost = false;\n    this.cresc = false;\n    this.espandiFiltri = false;\n    // Per risolvere il problema, puoi provare a inizializzare la variabile searchCategoria con un valore \n    // predefinito nella componente Angular o nel suo costruttore. In questo modo, il valore corrispondente \n    // sarà selezionato di default nel select.\n    this.searchCategoria = ''; //risolviamo con valore di Default\n  }\n\n  ngOnInit() {\n    this.utente = JSON.parse(sessionStorage.getItem('utenteloggato'));\n    this.service.getAllPosts().subscribe({\n      next: response => {\n        this.listaPost = response;\n        this.listaPostBackup = response;\n        this.serviceCategoria.getAllCategorie().subscribe({\n          next: data => {\n            console.log(data);\n            this.categorie = data;\n          },\n          error: error => console.log(error)\n        });\n      },\n      error: error => {\n        alert(error.message);\n      }\n    });\n  }\n  aggiungiPreferito(post) {\n    this.serviceUtente.addPreferitoUtenteById(post, this.utente.id_utente).subscribe({\n      next: () => {\n        console.log('Post aggiunto ai preferiti con successo.');\n        this.router.navigate(['/', 'listapost']).then(() => window.location.reload());\n      },\n      error: error => console.log(error)\n    });\n  }\n  ricercaPostPerTitolo(key) {\n    console.log(key);\n    const results = [];\n    for (const post of this.listaPost) {\n      if (post.titolo.toLowerCase().indexOf(key.toLowerCase()) !== -1) {\n        results.push(post);\n      }\n    }\n    //aggiorniamo i post visibili sulla pagina\n    this.listaPost = results;\n    //se non c'è alcuna ricerca effettuata o il risultato è nullo ridammi tutti i post\n    if (!key) {\n      this.noPost = false;\n      this.listaPost = this.listaPostBackup;\n    }\n    if (results.length === 0 && key) {\n      this.noPost = true;\n    }\n  }\n  // forkJoin è un operatore di combinazione in RxJS che combina gli ultimi valori emessi da più Observable in \n  // un unico Observable, ma solo quando tutti gli Observable hanno completato. In pratica, attende che tutti gli \n  // Observable passati come argomenti abbiano emesso un valore e siano stati completati prima di restituire i \n  // risultati combinati.\n  // Nel contesto del tuo codice, forkJoin viene utilizzato per affrontare il problema delle chiamate asincrone \n  // sovrapposte all'interno del ciclo for nel metodo ricercaPostPerAutore.\n  // ogni chiamata asincrona a this.service.getAutorePostById otterrà i dati relativi a un post specifico. \n  // Quando tutti i dati saranno stati ottenuti, l'Observable restituito da forkJoin emetterà un array con tutti \n  // i nomi degli autori corrispondenti ai post\n  ricercaPostPerAutore(key) {\n    console.log(key);\n    //risulta necessario posizionarlo prima\n    if (!key) {\n      this.noPost = false;\n      this.listaPost = this.listaPostBackup;\n    }\n    const observables = this.listaPost.map(post => this.service.getAutorePostById(post.id_post));\n    forkJoin(observables).subscribe({\n      next: autori => {\n        //costante di appoggio per creare la lista e travasare il risultato in listaPost\n        const results = [];\n        for (let i = 0; i < autori.length; i++) {\n          const autore = autori[i].trim(); //perchè io nel JSON faccio restituire esplicitamente nome + \" \" + cognome\n          console.log(autore);\n          if (autore.toLowerCase().indexOf(key.toLowerCase()) !== -1) {\n            results.push(this.listaPost[i]);\n          }\n        }\n        this.listaPost = results;\n        if (results.length === 0 && key) {\n          this.noPost = true;\n        }\n      },\n      error: err => console.log(err)\n    });\n  }\n  ricercaPostPerCategoria(key) {\n    console.log(key);\n    const results = [];\n    const observables = this.listaPost.map(post => this.service.getCategoriePostById(post.id_post));\n    forkJoin(observables).subscribe({\n      next: categorie => {\n        for (let i = 0; i < categorie.length; i++) {\n          this.categoryPost = categorie[i];\n          if (this.categoryPost.toLowerCase().indexOf(key.toLowerCase()) !== -1) {\n            results.push(this.listaPost[i]);\n          }\n        }\n        //aggiorniamo i post visibili sulla pagina\n        this.listaPost = results;\n        //se non c'è alcuna ricerca effettuata o il risultato è nullo ridammi tutti i post\n        if (!key) {\n          this.listaPost = this.listaPostBackup;\n        }\n        if (results.length === 0 && key) {\n          this.noPost = true;\n        } else {\n          this.noPost = false;\n        }\n      },\n      error: err => console.log(err)\n    });\n  }\n  ordinamentoPost(tipoOrdinamento) {\n    if (tipoOrdinamento === 'position' && this.cresc === true) {\n      this.listaPost.sort((a, b) => a.id_post - b.id_post);\n    } else if (tipoOrdinamento === 'position' && this.cresc === false) {\n      this.listaPost.sort((a, b) => b.id_post - a.id_post);\n    }\n    if (tipoOrdinamento === 'name' && this.cresc === true) {\n      this.listaPost.sort((a, b) => b.titolo.localeCompare(a.titolo));\n      // confronto lessicografico di stringhe in ordine crescente\n    } else if (tipoOrdinamento === 'name' && this.cresc === false) {\n      this.listaPost.sort((a, b) => a.titolo.localeCompare(b.titolo));\n      // confronto lessicografico di stringhe in ordine decrescente\n    }\n\n    if (tipoOrdinamento === 'date' && this.cresc === false) {\n      this.listaPost.sort((a, b) => {\n        const dateA = new Date(a.data).getTime();\n        const dateB = new Date(b.data).getTime();\n        console.log('Date A:', dateA, 'Date B:', dateB);\n        return dateB - dateA; //prima il piu recente così\n        //Quando si sottrae dateA da dateB, il risultato sarà un valore positivo se la data di dateB è \n        //successiva a dateA. Questo significa che, nell'ordinamento decrescente, i post con la data di \n        //inserimento più recente verranno posizionati prima nella lista.\n      });\n    } else if (tipoOrdinamento === 'date' && this.cresc === true) {\n      this.listaPost.sort((a, b) => {\n        const dateA = new Date(a.data).getTime();\n        const dateB = new Date(b.data).getTime();\n        return dateA - dateB; //prima il piu recente così\n        //Quando si sottrae dateA da dateB, il risultato sarà un valore positivo se la data di dateB è \n        //successiva a dateA. Questo significa che, nell'ordinamento decrescente, i post con la data di \n        //inserimento più recente verranno posizionati prima nella lista.\n      });\n    }\n  }\n\n  cambioOrdine(changeOrder) {\n    if (this.cresc === true) {\n      this.cresc = false;\n    } else if (this.cresc === false) {\n      this.cresc = true;\n    }\n    this.ordinamentoPost(changeOrder);\n  }\n  openFilter() {\n    this.espandiFiltri = true;\n  }\n  closeFilter() {\n    this.espandiFiltri = false;\n  }\n}\nListaPostComponent.ɵfac = function ListaPostComponent_Factory(t) {\n  return new (t || ListaPostComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.PostService), i0.ɵɵdirectiveInject(i3.UtenteService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i4.CategoriaService));\n};\nListaPostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListaPostComponent,\n  selectors: [[\"app-lista-post\"]],\n  decls: 35,\n  vars: 14,\n  consts: [[\"id\", \"wrapper\"], [1, \"page-header\"], [1, \"h1\", \"page-title\"], [1, \"d-flex\"], [\"type\", \"button\", 1, \"learn-more\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"circle\"], [1, \"icon\", \"arrow\"], [1, \"button-text\"], [1, \"flex-grow-1\"], [1, \"toolbar-sorter\", \"sorter\"], [\"for\", \"sorter\", 1, \"sorter-label\"], [\"id\", \"sorter\", \"data-role\", \"sorter\", \"required\", \"\", 1, \"sorter-options\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"value\", \"position\", \"selected\", \"selected\"], [\"value\", \"name\"], [\"value\", \"date\"], [\"style\", \"cursor: pointer; display: contents;\", 3, \"click\", 4, \"ngIf\"], [1, \"filter-posts-container\"], [\"class\", \"filters-column\", 4, \"ngIf\"], [1, \"posts-column\"], [1, \"container\", 3, \"ngClass\"], [1, \"row\"], [\"class\", \"col-12 col-md-4\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"col-lg-12 col-md-12 col-xl-12\", 4, \"ngIf\"], [1, \"pagination-container\"], [3, \"pageChange\"], [2, \"cursor\", \"pointer\", \"display\", \"contents\", 3, \"click\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"height\", \"1em\", \"viewBox\", \"0 0 448 512\"], [\"d\", \"M201.4 137.4c12.5-12.5 32.8-12.5 45.3 0l160 160c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L224 205.3 86.6 342.6c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3l160-160z\"], [\"d\", \"M201.4 342.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 274.7 86.6 137.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z\"], [1, \"filters-column\"], [2, \"padding-right\", \"20px\"], [1, \"form-inline\", \"my-2\", \"my-lg-0\", 2, \"display\", \"inline\"], [\"type\", \"search\", \"ngModel\", \"\", \"name\", \"key\", \"id\", \"searchTitolo\", \"placeholder\", \"Ricerca per Titolo\", \"required\", \"\", 1, \"form-control\", \"mr-sm-2\", 3, \"ngModelChange\"], [\"key\", \"ngModel\"], [\"type\", \"search\", \"ngModel\", \"\", \"name\", \"key2\", \"id\", \"searchAutore\", \"placeholder\", \"Ricerca per Autore\", \"required\", \"\", 1, \"form-control\", \"mr-sm-2\", 3, \"ngModelChange\"], [\"key2\", \"ngModel\"], [\"name\", \"subject\", \"aria-label\", \"Subject\", \"required\", \"\", \"id\", \"selectCategoria\", 1, \"form-select\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"\", \"disabled\", \"\", \"selected\", \"\", \"hidden\", \"\"], [\"value\", \"\", \"disabled\", \"\", \"selected\", \"\"], [4, \"ngFor\", \"ngForOf\"], [1, \"button-16\", 3, \"click\"], [3, \"ngValue\"], [1, \"col-12\", \"col-md-4\"], [3, \"post\"], [\"id\", \"contenuto\", \"style\", \"margin-left: 5px;\", 4, \"ngIf\"], [\"id\", \"contenuto\", 2, \"margin-left\", \"5px\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-success\", 3, \"click\"], [1, \"col-lg-12\", \"col-md-12\", \"col-xl-12\"], [\"role\", \"alert\", 1, \"alert\", \"alert-info\"], [1, \"alert-heading\"]],\n  template: function ListaPostComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"header\", 1)(2, \"h1\", 2)(3, \"span\");\n      i0.ɵɵtext(4, \"I Racconti dei Viaggiatori\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\")(7, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function ListaPostComponent_Template_button_click_7_listener() {\n        return ctx.openFilter();\n      });\n      i0.ɵɵelementStart(8, \"span\", 5);\n      i0.ɵɵelement(9, \"span\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"span\", 7);\n      i0.ɵɵtext(11, \"Search\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(12, \"div\", 8);\n      i0.ɵɵelementStart(13, \"div\", 9)(14, \"label\", 10);\n      i0.ɵɵtext(15, \"Ordina per\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"select\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function ListaPostComponent_Template_select_ngModelChange_16_listener($event) {\n        return ctx.orderBy = $event;\n      })(\"change\", function ListaPostComponent_Template_select_change_16_listener() {\n        return ctx.ordinamentoPost(ctx.orderBy);\n      });\n      i0.ɵɵelementStart(17, \"option\", 12);\n      i0.ɵɵtext(18, \"Posizione\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"option\", 13);\n      i0.ɵɵtext(20, \"Titolo Articolo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"option\", 14);\n      i0.ɵɵtext(22, \"Data Inserimento\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(23, ListaPostComponent_div_23_Template, 3, 0, \"div\", 15);\n      i0.ɵɵtemplate(24, ListaPostComponent_div_24_Template, 3, 0, \"div\", 15);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"div\", 16);\n      i0.ɵɵtemplate(26, ListaPostComponent_div_26_Template, 20, 2, \"div\", 17);\n      i0.ɵɵelementStart(27, \"div\", 18)(28, \"div\", 19)(29, \"div\", 20);\n      i0.ɵɵtemplate(30, ListaPostComponent_div_30_Template, 3, 2, \"div\", 21);\n      i0.ɵɵpipe(31, \"paginate\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(32, ListaPostComponent_div_32_Template, 6, 0, \"div\", 22);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"footer\", 23)(34, \"pagination-controls\", 24);\n      i0.ɵɵlistener(\"pageChange\", function ListaPostComponent_Template_pagination_controls_pageChange_34_listener($event) {\n        return ctx.currentPage = $event;\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngModel\", ctx.orderBy);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", !ctx.cresc);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.cresc);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.espandiFiltri);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, ctx.noPost));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(31, 7, ctx.listaPost, i0.ɵɵpureFunction1(12, _c1, ctx.currentPage)));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.noPost);\n    }\n  },\n  dependencies: [i5.NgClass, i5.NgForOf, i5.NgIf, i6.ɵNgNoValidate, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i6.DefaultValueAccessor, i6.SelectControlValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.RequiredValidator, i6.NgModel, i6.NgForm, i7.PaginationControlsComponent, i8.SingoloPostComponent, i7.PaginatePipe],\n  styles: [\"#wrapper[_ngcontent-%COMP%] {\\n    position: relative;\\n    min-height: 100vh;\\n}\\n\\n#contenuto[_ngcontent-%COMP%] {\\n    padding-bottom: 50px;\\n}\\n\\n.no-posts[_ngcontent-%COMP%] {\\n    height: 100vh;\\n  }\\n\\n.pagination-container[_ngcontent-%COMP%]{\\n    text-align: -webkit-center;    \\n}\\n\\n.h1[_ngcontent-%COMP%]{\\n    margin-top: 18px;\\n    margin-bottom: 2.5rem;\\n    font-weight: 500;\\n    line-height: 1.2;\\n    color: var(--bs-heading-color);\\n    font-size: 3.5rem;\\n    text-align: -webkit-center;\\n    text-transform: capitalize;\\n    font-family: monospace;\\n}\\n\\n#searchTitolo[_ngcontent-%COMP%]{\\n    width: 100%;\\n}\\n\\n#searchAutore[_ngcontent-%COMP%]{\\n    width: 100%;\\n}\\n\\n#searchCategoria[_ngcontent-%COMP%]{\\n    width: 100%;\\n}\\n\\n\\n.button-16[_ngcontent-%COMP%] {\\n  background-color: #f8f9fa;\\n  border: 1px solid #f8f9fa;\\n  border-radius: 4px;\\n  color: #3c4043;\\n  cursor: pointer;\\n  font-family: arial,sans-serif;\\n  font-size: 14px;\\n  height: 36px;\\n  line-height: 27px;\\n  min-width: 54px;\\n  padding: 0 16px;\\n  text-align: center;\\n  user-select: none;\\n  -webkit-user-select: none;\\n  touch-action: manipulation;\\n  white-space: pre;\\n}\\n\\n.button-16[_ngcontent-%COMP%]:hover {\\n  border-color: #dadce0;\\n  box-shadow: rgba(0, 0, 0, .1) 0 1px 1px;\\n  color: #202124;\\n}\\n\\n.button-16[_ngcontent-%COMP%]:focus {\\n  border-color: #4285f4;\\n  outline: none;\\n}\\n\\n\\n\\n\\n.filter-posts-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: flex-start; \\n\\n}\\n\\n.filters-column[_ngcontent-%COMP%] {\\n  flex: 0.4; \\n\\n  padding: 10px; \\n\\n  border-right: 1px solid #ccc; \\n\\n}\\n\\n.posts-column[_ngcontent-%COMP%] {\\n  flex: 2; \\n\\n}\\n\\n\\n\\n\\nbutton[_ngcontent-%COMP%] {\\n  position: relative;\\n  display: inline-block;\\n  cursor: pointer;\\n  outline: none;\\n  border: 0;\\n  vertical-align: middle;\\n  text-decoration: none;\\n  background: transparent;\\n  padding: 0;\\n  font-size: inherit;\\n  font-family: inherit;\\n }\\n \\n button.learn-more[_ngcontent-%COMP%] {\\n  width: 12rem;\\n  height: auto;\\n }\\n \\n button.learn-more[_ngcontent-%COMP%]   .circle[_ngcontent-%COMP%] {\\n  transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);\\n  position: relative;\\n  display: block;\\n  margin: 0;\\n  width: 3rem;\\n  height: 3rem;\\n  background: #282936;\\n  border-radius: 1.625rem;\\n }\\n \\n button.learn-more[_ngcontent-%COMP%]   .circle[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%] {\\n  transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  margin: auto;\\n  background: #fff;\\n }\\n \\n button.learn-more[_ngcontent-%COMP%]   .circle[_ngcontent-%COMP%]   .icon.arrow[_ngcontent-%COMP%] {\\n  transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);\\n  left: 0.625rem;\\n  width: 1.125rem;\\n  height: 0.125rem;\\n  background: none;\\n }\\n \\n button.learn-more[_ngcontent-%COMP%]   .circle[_ngcontent-%COMP%]   .icon.arrow[_ngcontent-%COMP%]::before {\\n  position: absolute;\\n  content: \\\"\\\";\\n  top: -0.29rem;\\n  right: 0.0625rem;\\n  width: 0.625rem;\\n  height: 0.625rem;\\n  border-top: 0.125rem solid #fff;\\n  border-right: 0.125rem solid #fff;\\n  transform: rotate(45deg);\\n }\\n \\n button.learn-more[_ngcontent-%COMP%]   .button-text[_ngcontent-%COMP%] {\\n  transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  padding: 0.75rem 0;\\n  margin: 0 0 0 1.85rem;\\n  color: #282936;\\n  font-weight: 700;\\n  line-height: 1.6;\\n  text-align: center;\\n  text-transform: uppercase;\\n }\\n \\n button[_ngcontent-%COMP%]:hover   .circle[_ngcontent-%COMP%] {\\n  width: 100%;\\n }\\n \\n button[_ngcontent-%COMP%]:hover   .circle[_ngcontent-%COMP%]   .icon.arrow[_ngcontent-%COMP%] {\\n  background: #fff;\\n  transform: translate(1rem, 0);\\n }\\n \\n button[_ngcontent-%COMP%]:hover   .button-text[_ngcontent-%COMP%] {\\n  color: #fff;\\n }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9saXN0YS1wb3N0L2xpc3RhLXBvc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxvQkFBb0I7QUFDeEI7O0FBRUE7SUFDSSxhQUFhO0VBQ2Y7O0FBRUY7SUFDSSwwQkFBMEI7QUFDOUI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIscUJBQXFCO0lBQ3JCLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsOEJBQThCO0lBQzlCLGlCQUFpQjtJQUNqQiwwQkFBMEI7SUFDMUIsMEJBQTBCO0lBQzFCLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7O0FBR0E7RUFDRSx5QkFBeUI7RUFDekIseUJBQXlCO0VBQ3pCLGtCQUFrQjtFQUNsQixjQUFjO0VBQ2QsZUFBZTtFQUNmLDZCQUE2QjtFQUM3QixlQUFlO0VBQ2YsWUFBWTtFQUNaLGlCQUFpQjtFQUNqQixlQUFlO0VBQ2YsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixpQkFBaUI7RUFDakIseUJBQXlCO0VBQ3pCLDBCQUEwQjtFQUMxQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsdUNBQXVDO0VBQ3ZDLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsYUFBYTtBQUNmOztBQUVBLGdDQUFnQzs7QUFFaEM7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCLEVBQUUsaUNBQWlDO0FBQzVEOztBQUVBO0VBQ0UsU0FBUyxFQUFFLHNEQUFzRDtFQUNqRSxhQUFhLEVBQUUseUNBQXlDO0VBQ3hELDRCQUE0QixFQUFFLDBDQUEwQztBQUMxRTs7QUFFQTtFQUNFLE9BQU8sRUFBRSxvREFBb0Q7QUFDL0Q7O0FBRUEsV0FBVzs7QUFFWDtFQUNFLGtCQUFrQjtFQUNsQixxQkFBcUI7RUFDckIsZUFBZTtFQUNmLGFBQWE7RUFDYixTQUFTO0VBQ1Qsc0JBQXNCO0VBQ3RCLHFCQUFxQjtFQUNyQix1QkFBdUI7RUFDdkIsVUFBVTtFQUNWLGtCQUFrQjtFQUNsQixvQkFBb0I7Q0FDckI7O0NBRUE7RUFDQyxZQUFZO0VBQ1osWUFBWTtDQUNiOztDQUVBO0VBQ0MscURBQXFEO0VBQ3JELGtCQUFrQjtFQUNsQixjQUFjO0VBQ2QsU0FBUztFQUNULFdBQVc7RUFDWCxZQUFZO0VBQ1osbUJBQW1CO0VBQ25CLHVCQUF1QjtDQUN4Qjs7Q0FFQTtFQUNDLHFEQUFxRDtFQUNyRCxrQkFBa0I7RUFDbEIsTUFBTTtFQUNOLFNBQVM7RUFDVCxZQUFZO0VBQ1osZ0JBQWdCO0NBQ2pCOztDQUVBO0VBQ0MscURBQXFEO0VBQ3JELGNBQWM7RUFDZCxlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtDQUNqQjs7Q0FFQTtFQUNDLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsYUFBYTtFQUNiLGdCQUFnQjtFQUNoQixlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLCtCQUErQjtFQUMvQixpQ0FBaUM7RUFDakMsd0JBQXdCO0NBQ3pCOztDQUVBO0VBQ0MscURBQXFEO0VBQ3JELGtCQUFrQjtFQUNsQixNQUFNO0VBQ04sT0FBTztFQUNQLFFBQVE7RUFDUixTQUFTO0VBQ1Qsa0JBQWtCO0VBQ2xCLHFCQUFxQjtFQUNyQixjQUFjO0VBQ2QsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIseUJBQXlCO0NBQzFCOztDQUVBO0VBQ0MsV0FBVztDQUNaOztDQUVBO0VBQ0MsZ0JBQWdCO0VBQ2hCLDZCQUE2QjtDQUM5Qjs7Q0FFQTtFQUNDLFdBQVc7Q0FDWiIsInNvdXJjZXNDb250ZW50IjpbIiN3cmFwcGVyIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xyXG59XHJcblxyXG4jY29udGVudXRvIHtcclxuICAgIHBhZGRpbmctYm90dG9tOiA1MHB4O1xyXG59XHJcblxyXG4ubm8tcG9zdHMge1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICB9XHJcblxyXG4ucGFnaW5hdGlvbi1jb250YWluZXJ7XHJcbiAgICB0ZXh0LWFsaWduOiAtd2Via2l0LWNlbnRlcjsgICAgXHJcbn1cclxuXHJcbi5oMXtcclxuICAgIG1hcmdpbi10b3A6IDE4cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyLjVyZW07XHJcbiAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuMjtcclxuICAgIGNvbG9yOiB2YXIoLS1icy1oZWFkaW5nLWNvbG9yKTtcclxuICAgIGZvbnQtc2l6ZTogMy41cmVtO1xyXG4gICAgdGV4dC1hbGlnbjogLXdlYmtpdC1jZW50ZXI7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcclxuICAgIGZvbnQtZmFtaWx5OiBtb25vc3BhY2U7XHJcbn1cclxuXHJcbiNzZWFyY2hUaXRvbG97XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuI3NlYXJjaEF1dG9yZXtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4jc2VhcmNoQ2F0ZWdvcmlhe1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcblxyXG4uYnV0dG9uLTE2IHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOWZhO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNmOGY5ZmE7XHJcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gIGNvbG9yOiAjM2M0MDQzO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBmb250LWZhbWlseTogYXJpYWwsc2Fucy1zZXJpZjtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgaGVpZ2h0OiAzNnB4O1xyXG4gIGxpbmUtaGVpZ2h0OiAyN3B4O1xyXG4gIG1pbi13aWR0aDogNTRweDtcclxuICBwYWRkaW5nOiAwIDE2cHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHVzZXItc2VsZWN0OiBub25lO1xyXG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XHJcbiAgdG91Y2gtYWN0aW9uOiBtYW5pcHVsYXRpb247XHJcbiAgd2hpdGUtc3BhY2U6IHByZTtcclxufVxyXG5cclxuLmJ1dHRvbi0xNjpob3ZlciB7XHJcbiAgYm9yZGVyLWNvbG9yOiAjZGFkY2UwO1xyXG4gIGJveC1zaGFkb3c6IHJnYmEoMCwgMCwgMCwgLjEpIDAgMXB4IDFweDtcclxuICBjb2xvcjogIzIwMjEyNDtcclxufVxyXG5cclxuLmJ1dHRvbi0xNjpmb2N1cyB7XHJcbiAgYm9yZGVyLWNvbG9yOiAjNDI4NWY0O1xyXG4gIG91dGxpbmU6IG5vbmU7XHJcbn1cclxuXHJcbi8qIFBvc2l6aW9uYW1lbnRvIEZpbHRyaS1Qb3N0cyAqL1xyXG5cclxuLmZpbHRlci1wb3N0cy1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7IC8qIEFsbGluZWEgaWwgY29udGVudXRvIGluIGFsdG8gKi9cclxufVxyXG5cclxuLmZpbHRlcnMtY29sdW1uIHtcclxuICBmbGV4OiAwLjQ7IC8qIE9jY3VwYSBsYSBwYXJ0ZSBzaW5pc3RyYSBkZWxsbyBzcGF6aW8gZGlzcG9uaWJpbGUgKi9cclxuICBwYWRkaW5nOiAxMHB4OyAvKiBBZ2dpdW5naSBzcGF6aW8gYXR0b3JubyBhbCBjb250ZW51dG8gKi9cclxuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjY2NjOyAvKiBBZ2dpdW5naSB1bmEgbGluZWEgZGl2aXNvcmlhIGEgZGVzdHJhICovXHJcbn1cclxuXHJcbi5wb3N0cy1jb2x1bW4ge1xyXG4gIGZsZXg6IDI7IC8qIE9jY3VwYSBsYSBwYXJ0ZSBkZXN0cmEgZGVsbG8gc3BhemlvIGRpc3BvbmliaWxlICovXHJcbn1cclxuXHJcbi8qIFNlYXJjaCAqL1xyXG5cclxuYnV0dG9uIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBvdXRsaW5lOiBub25lO1xyXG4gIGJvcmRlcjogMDtcclxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICBwYWRkaW5nOiAwO1xyXG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcclxuICBmb250LWZhbWlseTogaW5oZXJpdDtcclxuIH1cclxuIFxyXG4gYnV0dG9uLmxlYXJuLW1vcmUge1xyXG4gIHdpZHRoOiAxMnJlbTtcclxuICBoZWlnaHQ6IGF1dG87XHJcbiB9XHJcbiBcclxuIGJ1dHRvbi5sZWFybi1tb3JlIC5jaXJjbGUge1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjQ1cyBjdWJpYy1iZXppZXIoMC42NSwgMCwgMC4wNzYsIDEpO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBtYXJnaW46IDA7XHJcbiAgd2lkdGg6IDNyZW07XHJcbiAgaGVpZ2h0OiAzcmVtO1xyXG4gIGJhY2tncm91bmQ6ICMyODI5MzY7XHJcbiAgYm9yZGVyLXJhZGl1czogMS42MjVyZW07XHJcbiB9XHJcbiBcclxuIGJ1dHRvbi5sZWFybi1tb3JlIC5jaXJjbGUgLmljb24ge1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjQ1cyBjdWJpYy1iZXppZXIoMC42NSwgMCwgMC4wNzYsIDEpO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDA7XHJcbiAgYm90dG9tOiAwO1xyXG4gIG1hcmdpbjogYXV0bztcclxuICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gfVxyXG4gXHJcbiBidXR0b24ubGVhcm4tbW9yZSAuY2lyY2xlIC5pY29uLmFycm93IHtcclxuICB0cmFuc2l0aW9uOiBhbGwgMC40NXMgY3ViaWMtYmV6aWVyKDAuNjUsIDAsIDAuMDc2LCAxKTtcclxuICBsZWZ0OiAwLjYyNXJlbTtcclxuICB3aWR0aDogMS4xMjVyZW07XHJcbiAgaGVpZ2h0OiAwLjEyNXJlbTtcclxuICBiYWNrZ3JvdW5kOiBub25lO1xyXG4gfVxyXG4gXHJcbiBidXR0b24ubGVhcm4tbW9yZSAuY2lyY2xlIC5pY29uLmFycm93OjpiZWZvcmUge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBjb250ZW50OiBcIlwiO1xyXG4gIHRvcDogLTAuMjlyZW07XHJcbiAgcmlnaHQ6IDAuMDYyNXJlbTtcclxuICB3aWR0aDogMC42MjVyZW07XHJcbiAgaGVpZ2h0OiAwLjYyNXJlbTtcclxuICBib3JkZXItdG9wOiAwLjEyNXJlbSBzb2xpZCAjZmZmO1xyXG4gIGJvcmRlci1yaWdodDogMC4xMjVyZW0gc29saWQgI2ZmZjtcclxuICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XHJcbiB9XHJcbiBcclxuIGJ1dHRvbi5sZWFybi1tb3JlIC5idXR0b24tdGV4dCB7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuNDVzIGN1YmljLWJlemllcigwLjY1LCAwLCAwLjA3NiwgMSk7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIGJvdHRvbTogMDtcclxuICBwYWRkaW5nOiAwLjc1cmVtIDA7XHJcbiAgbWFyZ2luOiAwIDAgMCAxLjg1cmVtO1xyXG4gIGNvbG9yOiAjMjgyOTM2O1xyXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgbGluZS1oZWlnaHQ6IDEuNjtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuIH1cclxuIFxyXG4gYnV0dG9uOmhvdmVyIC5jaXJjbGUge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gfVxyXG4gXHJcbiBidXR0b246aG92ZXIgLmNpcmNsZSAuaWNvbi5hcnJvdyB7XHJcbiAgYmFja2dyb3VuZDogI2ZmZjtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgxcmVtLCAwKTtcclxuIH1cclxuIFxyXG4gYnV0dG9uOmhvdmVyIC5idXR0b24tdGV4dCB7XHJcbiAgY29sb3I6ICNmZmY7XHJcbiB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["forkJoin","Utente","i0","ɵɵelementStart","ɵɵlistener","ListaPostComponent_div_23_Template_div_click_0_listener","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","cambioOrdine","orderBy","ɵɵnamespaceSVG","ɵɵelement","ɵɵelementEnd","ListaPostComponent_div_24_Template_div_click_0_listener","_r8","ctx_r7","ɵɵelementContainerStart","ɵɵtext","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","categoria_r12","nome_categoria","ɵɵtextInterpolate","ListaPostComponent_div_26_Template_input_ngModelChange_3_listener","_r14","_r9","ɵɵreference","ctx_r13","ricercaPostPerTitolo","value","ListaPostComponent_div_26_Template_input_ngModelChange_7_listener","_r10","ctx_r15","ricercaPostPerAutore","ListaPostComponent_div_26_Template_select_ngModelChange_11_listener","$event","ctx_r16","searchCategoria","ɵɵtemplate","ListaPostComponent_div_26_ng_container_16_Template","ListaPostComponent_div_26_Template_button_click_18_listener","ctx_r17","ricercaPostPerCategoria","ctx_r2","categorie","ListaPostComponent_div_30_div_2_Template_button_click_1_listener","_r22","post_r18","$implicit","ctx_r20","aggiungiPreferito","ListaPostComponent_div_30_div_2_Template","ctx_r3","utente","ListaPostComponent","constructor","route","service","serviceUtente","router","serviceCategoria","listaPost","listaPostBackup","currentPage","noPost","cresc","espandiFiltri","ngOnInit","JSON","parse","sessionStorage","getItem","getAllPosts","subscribe","next","response","getAllCategorie","data","console","log","error","alert","message","post","addPreferitoUtenteById","id_utente","navigate","then","window","location","reload","key","results","titolo","toLowerCase","indexOf","push","length","observables","map","getAutorePostById","id_post","autori","i","autore","trim","err","getCategoriePostById","categoryPost","ordinamentoPost","tipoOrdinamento","sort","a","b","localeCompare","dateA","Date","getTime","dateB","changeOrder","openFilter","closeFilter","ɵɵdirectiveInject","i1","ActivatedRoute","i2","PostService","i3","UtenteService","Router","i4","CategoriaService","selectors","decls","vars","consts","template","ListaPostComponent_Template","rf","ctx","ListaPostComponent_Template_button_click_7_listener","ListaPostComponent_Template_select_ngModelChange_16_listener","ListaPostComponent_Template_select_change_16_listener","ListaPostComponent_div_23_Template","ListaPostComponent_div_24_Template","ListaPostComponent_div_26_Template","ListaPostComponent_div_30_Template","ListaPostComponent_div_32_Template","ListaPostComponent_Template_pagination_controls_pageChange_34_listener","ɵɵpureFunction1","_c0","ɵɵpipeBind2","_c1"],"sources":["C:\\Users\\gemel\\Desktop\\Federico\\Progetto Finale\\Wanderlust - FrontEnd\\Wanderlust_FrontEnd\\src\\app\\components\\lista-post\\lista-post.component.ts","C:\\Users\\gemel\\Desktop\\Federico\\Progetto Finale\\Wanderlust - FrontEnd\\Wanderlust_FrontEnd\\src\\app\\components\\lista-post\\lista-post.component.html"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { forkJoin } from 'rxjs';\nimport { Categoria } from 'src/app/model/categoria/categoria';\nimport { Post } from 'src/app/model/post/post';\nimport { Utente } from 'src/app/model/utente/utente';\nimport { CategoriaService } from 'src/app/services/categoria-Service/categoria.service';\nimport { PostService } from 'src/app/services/post-Service/post.service';\nimport { UtenteService } from 'src/app/services/utente-Service/utente.service';\n\n@Component({\n  selector: 'app-lista-post',\n  templateUrl: './lista-post.component.html',\n  styleUrls: ['./lista-post.component.css']\n})\n\nexport class ListaPostComponent implements OnInit{\n  listaPost: Post[] = [];\n  utente: Utente = new Utente();\n  listaPostBackup: Post[] = [];\n  categorie?: Categoria[] = [];\n\n  currentPage: number = 1;\n\n  constructor(private route: ActivatedRoute, private service: PostService, private serviceUtente:UtenteService,\n     private router: Router, private serviceCategoria: CategoriaService){\n\n      // l'attributo [(ngModel)] sta tentando di legare il valore selezionato nel <select> con la variabile \n      // searchCategoria nella tua componente Angular. Quando si utilizza l'approccio di two-way data binding con \n      // [(ngModel)], l'opzione con disabled selected può non funzionare correttamente per l'opzione predefinita \n      // del select.\n\n      // Per risolvere il problema, puoi provare a inizializzare la variabile searchCategoria con un valore \n      // predefinito nella componente Angular o nel suo costruttore. In questo modo, il valore corrispondente \n      // sarà selezionato di default nel select.\n      this.searchCategoria = ''; //risolviamo con valore di Default\n\n  }\n  ngOnInit(): void {\n    this.utente = JSON.parse(sessionStorage.getItem('utenteloggato')!);\n    this.service.getAllPosts()\n      .subscribe(\n        {\n          next: (response: Post[]) => {\n            this.listaPost = response;\n            this.listaPostBackup = response;\n\n            this.serviceCategoria.getAllCategorie().subscribe({\n              next: data => {\n                console.log(data);\n                this.categorie = data;\n              },\n              error: error => console.log(error)\n            })\n          },\n          error: (error: HttpErrorResponse) => {\n            alert(error.message)\n          }\n        }\n      );\n  }\n\n  aggiungiPreferito(post: Post){\n    this.serviceUtente.addPreferitoUtenteById(post, this.utente!.id_utente!)\n    .subscribe({\n      next: () => {\n        console.log('Post aggiunto ai preferiti con successo.');\n        this.router.navigate(['/','listapost']).then\n            (() => window.location.reload());        \n      },\n      error: error => console.log(error)\n    });\n  }\n\n  \n  noPost: boolean = false;\n\n  ricercaPostPerTitolo(key: string): void {\n    console.log(key);\n    const results: Post[] = [];\n    for (const post of this.listaPost) {\n      if (post.titolo!.toLowerCase().indexOf(key.toLowerCase()) !== -1) {\n        results.push(post);\n      }\n    }\n    //aggiorniamo i post visibili sulla pagina\n    this.listaPost = results;\n    //se non c'è alcuna ricerca effettuata o il risultato è nullo ridammi tutti i post\n    if (!key) {\n      this.noPost = false;\n      this.listaPost = this.listaPostBackup;\n    }\n\n    if (results.length === 0 && key) {\n      this.noPost = true;\n    }\n  }\n\n  // forkJoin è un operatore di combinazione in RxJS che combina gli ultimi valori emessi da più Observable in \n  // un unico Observable, ma solo quando tutti gli Observable hanno completato. In pratica, attende che tutti gli \n  // Observable passati come argomenti abbiano emesso un valore e siano stati completati prima di restituire i \n  // risultati combinati.\n\n  // Nel contesto del tuo codice, forkJoin viene utilizzato per affrontare il problema delle chiamate asincrone \n  // sovrapposte all'interno del ciclo for nel metodo ricercaPostPerAutore.\n\n  // ogni chiamata asincrona a this.service.getAutorePostById otterrà i dati relativi a un post specifico. \n  // Quando tutti i dati saranno stati ottenuti, l'Observable restituito da forkJoin emetterà un array con tutti \n  // i nomi degli autori corrispondenti ai post\n  \n  ricercaPostPerAutore(key: string): void {\n    console.log(key);\n\n    //risulta necessario posizionarlo prima\n    if (!key) {\n      this.noPost = false;      \n      this.listaPost = this.listaPostBackup;\n    }\n\n    const observables = this.listaPost.map(post => this.service.getAutorePostById(post.id_post!));\n\n    forkJoin(observables).subscribe({\n      next: (autori: string[]) => {\n        //costante di appoggio per creare la lista e travasare il risultato in listaPost\n        const results: Post[] = [];\n        for (let i = 0; i < autori.length; i++) {\n          const autore = autori[i].trim(); //perchè io nel JSON faccio restituire esplicitamente nome + \" \" + cognome\n          console.log(autore);\n  \n          if (autore.toLowerCase().indexOf(key.toLowerCase()) !== -1) {\n            results.push(this.listaPost[i]);\n          }\n        }\n\n        this.listaPost = results;\n        \n        if (results.length === 0  && key) {\n          this.noPost = true;\n        }\n        \n      },\n      error: (err) => console.log(err)\n    });\n  }\n\n  categoryPost?: string;\n  searchCategoria?: string;\n  \n  ricercaPostPerCategoria(key: string): void {\n    console.log(key);\n    const results: Post[] = [];\n    const observables = this.listaPost.map(post => this.service.getCategoriePostById(post.id_post!));\n\n    forkJoin(observables).subscribe({\n      next: (categorie: string[]) => {\n        for (let i = 0; i < categorie.length; i++) {\n          this.categoryPost = categorie[i];\n\n          if (this.categoryPost!.toLowerCase().indexOf(key.toLowerCase()) !== -1) {\n            results.push(this.listaPost[i]);\n          }\n        }\n\n        //aggiorniamo i post visibili sulla pagina\n        this.listaPost = results;\n\n        //se non c'è alcuna ricerca effettuata o il risultato è nullo ridammi tutti i post\n        if (!key) {\n          this.listaPost = this.listaPostBackup;\n        }\n\n        if (results.length === 0 && key) {\n          this.noPost = true;\n        } else {\n          this.noPost = false;\n        }\n      },\n      error: (err) => console.log(err)\n    });\n  }\n\n  orderBy?: string;\n  cresc?: boolean = false;\n\n  ordinamentoPost(tipoOrdinamento: string) {\n    if (tipoOrdinamento === 'position' && this.cresc === true) {\n      this.listaPost.sort((a, b) => a.id_post! - b.id_post!);\n    } else if(tipoOrdinamento === 'position' && this.cresc === false){\n      this.listaPost.sort((a, b) => b.id_post! - a.id_post!);\n    }\n\n    if (tipoOrdinamento === 'name' && this.cresc === true) {\n      this.listaPost.sort((a, b) => b.titolo!.localeCompare(a.titolo!)); \n      // confronto lessicografico di stringhe in ordine crescente\n    } else if (tipoOrdinamento === 'name' && this.cresc === false) {\n      this.listaPost.sort((a, b) => a.titolo!.localeCompare(b.titolo!)); \n      // confronto lessicografico di stringhe in ordine decrescente\n    }\n\n    if (tipoOrdinamento === 'date' && this.cresc === false) {\n      this.listaPost.sort((a, b) => {\n        const dateA = new Date(a.data!).getTime();\n        const dateB = new Date(b.data!).getTime();\n        console.log('Date A:', dateA, 'Date B:', dateB);\n        return dateB - dateA; //prima il piu recente così\n        //Quando si sottrae dateA da dateB, il risultato sarà un valore positivo se la data di dateB è \n        //successiva a dateA. Questo significa che, nell'ordinamento decrescente, i post con la data di \n        //inserimento più recente verranno posizionati prima nella lista.\n      });\n    } else if (tipoOrdinamento === 'date' && this.cresc === true) {\n      this.listaPost.sort((a, b) => {\n        const dateA = new Date(a.data!).getTime();\n        const dateB = new Date(b.data!).getTime();\n        return dateA - dateB; //prima il piu recente così\n        //Quando si sottrae dateA da dateB, il risultato sarà un valore positivo se la data di dateB è \n        //successiva a dateA. Questo significa che, nell'ordinamento decrescente, i post con la data di \n        //inserimento più recente verranno posizionati prima nella lista.\n      });\n    }\n  }\n\n  cambioOrdine(changeOrder: string){\n    if(this.cresc === true){\n      this.cresc = false;\n    } else if(this.cresc === false){\n      this.cresc = true;\n    }\n\n    this.ordinamentoPost(changeOrder);\n  }\n\n  espandiFiltri?: boolean = false;\n\n  openFilter(){\n    this.espandiFiltri = true;\n  }\n\n  closeFilter(){\n    this.espandiFiltri = false;\n  }\n    \n}\n","<section id=\"wrapper\">\n\n  <header class=\"page-header\">\n    <h1 class=\"h1 page-title\">\n      <span>I Racconti dei Viaggiatori</span>\n    </h1>\n  </header>\n\n  <div class=\"d-flex\">\n\n    <!-- Filtri a sinistra -->\n    <div>\n      <button class=\"learn-more\" type=\"button\" (click)=\"openFilter()\">\n        <span class=\"circle\" aria-hidden=\"true\">\n        <span class=\"icon arrow\"></span>\n        </span>\n        <span class=\"button-text\">Search</span>\n      </button>\n        <!-- <button type=\"button\" class=\"collapsible\" (click)=\"openFilter()\">\n            Filtri\n        </button> -->\n    </div>\n\n    <!-- Spazio flessibile vuoto per separare i filtri dall'ordinamento -->\n    <div class=\"flex-grow-1\"></div>\n\n    <!-- Ordinamento a destra -->\n    <div class=\"toolbar-sorter sorter\">\n\n        <label class=\"sorter-label\" for=\"sorter\">Ordina per</label>\n\n        <select id=\"sorter\" data-role=\"sorter\" class=\"sorter-options\" required [(ngModel)]=\"orderBy\" (change)=\"ordinamentoPost(orderBy!)\">\n            <option value=\"position\" selected=\"selected\">Posizione</option>\n            <option value=\"name\">Titolo Articolo</option>\n            <option value=\"date\">Data Inserimento</option>\n        </select>\n\n        <div *ngIf=\"!cresc\" style=\"cursor: pointer; display: contents;\" (click)=\"cambioOrdine(orderBy!)\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"0 0 448 512\">\n                <path d=\"M201.4 137.4c12.5-12.5 32.8-12.5 45.3 0l160 160c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L224 205.3 86.6 342.6c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3l160-160z\" />\n            </svg>\n        </div>\n\n        <div *ngIf=\"cresc\" style=\"cursor: pointer; display: contents;\" (click)=\"cambioOrdine(orderBy!)\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"0 0 448 512\">\n                <path d=\"M201.4 342.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 274.7 86.6 137.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z\" />\n            </svg>\n        </div>\n\n    </div>\n\n  </div>\n\n  <!-- Parte centrale Filtri/Post -->\n  <div class=\"filter-posts-container\">\n\n    <div class=\"filters-column\" *ngIf=\"espandiFiltri\">\n\n      <div style=\"padding-right: 20px;\">\n        <form class=\"form-inline my-2 my-lg-0\" style=\"display: inline;\">\n          <input type=\"search\" (ngModelChange)=\"ricercaPostPerTitolo(key.value)\" #key=\"ngModel\" ngModel\n           name=\"key\" id=\"searchTitolo\" class=\"form-control mr-sm-2\" placeholder=\"Ricerca per Titolo\" required>\n        </form>\n      </div>\n\n      <div style=\"padding-right: 20px;\">\n        <form class=\"form-inline my-2 my-lg-0\" style=\"display: inline;\">\n          <input type=\"search\" (ngModelChange)=\"ricercaPostPerAutore(key2.value)\" #key2=\"ngModel\" ngModel\n           name=\"key2\" id=\"searchAutore\" class=\"form-control mr-sm-2\" placeholder=\"Ricerca per Autore\" required>\n        </form>\n      </div>\n\n      <div style=\"padding-right: 20px;\">\n        <form class=\"form-inline my-2 my-lg-0\" style=\"display: inline;\">\n            <select class=\"form-select\" name=\"subject\" aria-label=\"Subject\" required [(ngModel)]=\"searchCategoria\" id=\"selectCategoria\">\n              <option value=\"\" disabled selected hidden>Ricerca per Categoria</option>\n              <option value=\"\" disabled selected >Seleziona una Categoria</option>\n              <ng-container *ngFor=\"let categoria of categorie\">\n                <option [ngValue]=\"categoria.nome_categoria\">{{categoria!.nome_categoria}}</option>\n              </ng-container>\n            </select>\n        </form>\n      </div>\n\n      <div>\n        <button class=\"button-16\" (click)=\"ricercaPostPerCategoria(searchCategoria!)\">Cerca</button>\n      </div>\n    </div>\n\n    <div class=\"posts-column\">\n      <!-- tramite la angular class indichiamo che la classe cambia nel momento in cui no-posts diventa true\n      e noPost diventa true quando non ci sono posts da mostrare. -->\n      <div class=\"container\" [ngClass]=\"{'no-posts': noPost}\">\n        <div class=\"row\">\n          <!-- paginate: Questa è la pipe di paginazione fornita dal modulo ngx-pagination. Una pipe è una funzione\n            che può essere utilizzata per trasformare i dati prima di visualizzarli. La pipe paginate gestisce la\n            suddivisione dei dati in pagine in base ai parametri specificati. L'oggetto che passiamo alla pipe è tra le {} -->\n          <div class=\"col-12 col-md-4\" *ngFor=\"let post of (listaPost | paginate: { itemsPerPage: 9, currentPage: currentPage })!\">\n\n            <app-singolo-post [post]=\"post\"></app-singolo-post>\n\n            <div *ngIf=\"this.utente\" id=\"contenuto\" style=\"margin-left: 5px;\">\n              <button type=\"button\" class=\"btn btn-outline-success\" (click)=\"aggiungiPreferito(post)\">Aggiungi ai Preferiti</button>\n            </div>\n\n          </div>\n\n        </div>\n      </div>\n    </div>\n\n    <!-- Messaggio Nessun Post trovato -->\n    <div *ngIf=\"noPost\" class=\"col-lg-12 col-md-12 col-xl-12\">\n      <div class=\"alert alert-info\" role=\"alert\">\n        <h4 class=\"alert-heading\">NESSUN ARTICOLO TROVATO!</h4>\n        <p>No Posts were found.</p>\n      </div>\n    </div>\n\n  </div>\n\n  <footer class=\"pagination-container\">\n    <pagination-controls (pageChange)=\"currentPage = $event\"></pagination-controls>\n  </footer>\n\n</section>\n\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}